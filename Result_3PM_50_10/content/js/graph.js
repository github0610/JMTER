/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1853.0, "minX": 0.0, "maxY": 5766.0, "series": [{"data": [[0.0, 1853.0], [0.1, 1853.0], [0.2, 1853.0], [0.3, 1853.0], [0.4, 1853.0], [0.5, 1853.0], [0.6, 1853.0], [0.7, 1853.0], [0.8, 1853.0], [0.9, 1853.0], [1.0, 1865.0], [1.1, 1865.0], [1.2, 1865.0], [1.3, 1865.0], [1.4, 1865.0], [1.5, 1865.0], [1.6, 1865.0], [1.7, 1865.0], [1.8, 1865.0], [1.9, 1865.0], [2.0, 1881.0], [2.1, 1881.0], [2.2, 1881.0], [2.3, 1881.0], [2.4, 1881.0], [2.5, 1881.0], [2.6, 1881.0], [2.7, 1881.0], [2.8, 1881.0], [2.9, 1881.0], [3.0, 1890.0], [3.1, 1890.0], [3.2, 1890.0], [3.3, 1890.0], [3.4, 1890.0], [3.5, 1890.0], [3.6, 1890.0], [3.7, 1890.0], [3.8, 1890.0], [3.9, 1890.0], [4.0, 1890.0], [4.1, 1890.0], [4.2, 1890.0], [4.3, 1890.0], [4.4, 1890.0], [4.5, 1890.0], [4.6, 1890.0], [4.7, 1890.0], [4.8, 1890.0], [4.9, 1890.0], [5.0, 1899.0], [5.1, 1899.0], [5.2, 1899.0], [5.3, 1899.0], [5.4, 1899.0], [5.5, 1899.0], [5.6, 1899.0], [5.7, 1899.0], [5.8, 1899.0], [5.9, 1899.0], [6.0, 1909.0], [6.1, 1909.0], [6.2, 1909.0], [6.3, 1909.0], [6.4, 1909.0], [6.5, 1909.0], [6.6, 1909.0], [6.7, 1909.0], [6.8, 1909.0], [6.9, 1909.0], [7.0, 1912.0], [7.1, 1912.0], [7.2, 1912.0], [7.3, 1912.0], [7.4, 1912.0], [7.5, 1912.0], [7.6, 1912.0], [7.7, 1912.0], [7.8, 1912.0], [7.9, 1912.0], [8.0, 1915.0], [8.1, 1915.0], [8.2, 1915.0], [8.3, 1915.0], [8.4, 1915.0], [8.5, 1915.0], [8.6, 1915.0], [8.7, 1915.0], [8.8, 1915.0], [8.9, 1915.0], [9.0, 1918.0], [9.1, 1918.0], [9.2, 1918.0], [9.3, 1918.0], [9.4, 1918.0], [9.5, 1918.0], [9.6, 1918.0], [9.7, 1918.0], [9.8, 1918.0], [9.9, 1918.0], [10.0, 1921.0], [10.1, 1921.0], [10.2, 1921.0], [10.3, 1921.0], [10.4, 1921.0], [10.5, 1921.0], [10.6, 1921.0], [10.7, 1921.0], [10.8, 1921.0], [10.9, 1921.0], [11.0, 1922.0], [11.1, 1922.0], [11.2, 1922.0], [11.3, 1922.0], [11.4, 1922.0], [11.5, 1922.0], [11.6, 1922.0], [11.7, 1922.0], [11.8, 1922.0], [11.9, 1922.0], [12.0, 1922.0], [12.1, 1922.0], [12.2, 1922.0], [12.3, 1922.0], [12.4, 1922.0], [12.5, 1922.0], [12.6, 1922.0], [12.7, 1922.0], [12.8, 1922.0], [12.9, 1922.0], [13.0, 1930.0], [13.1, 1930.0], [13.2, 1930.0], [13.3, 1930.0], [13.4, 1930.0], [13.5, 1930.0], [13.6, 1930.0], [13.7, 1930.0], [13.8, 1930.0], [13.9, 1930.0], [14.0, 1934.0], [14.1, 1934.0], [14.2, 1934.0], [14.3, 1934.0], [14.4, 1934.0], [14.5, 1934.0], [14.6, 1934.0], [14.7, 1934.0], [14.8, 1934.0], [14.9, 1934.0], [15.0, 1941.0], [15.1, 1941.0], [15.2, 1941.0], [15.3, 1941.0], [15.4, 1941.0], [15.5, 1941.0], [15.6, 1941.0], [15.7, 1941.0], [15.8, 1941.0], [15.9, 1941.0], [16.0, 1945.0], [16.1, 1945.0], [16.2, 1945.0], [16.3, 1945.0], [16.4, 1945.0], [16.5, 1945.0], [16.6, 1945.0], [16.7, 1945.0], [16.8, 1945.0], [16.9, 1945.0], [17.0, 1945.0], [17.1, 1945.0], [17.2, 1945.0], [17.3, 1945.0], [17.4, 1945.0], [17.5, 1945.0], [17.6, 1945.0], [17.7, 1945.0], [17.8, 1945.0], [17.9, 1945.0], [18.0, 1951.0], [18.1, 1951.0], [18.2, 1951.0], [18.3, 1951.0], [18.4, 1951.0], [18.5, 1951.0], [18.6, 1951.0], [18.7, 1951.0], [18.8, 1951.0], [18.9, 1951.0], [19.0, 1951.0], [19.1, 1951.0], [19.2, 1951.0], [19.3, 1951.0], [19.4, 1951.0], [19.5, 1951.0], [19.6, 1951.0], [19.7, 1951.0], [19.8, 1951.0], [19.9, 1951.0], [20.0, 1953.0], [20.1, 1953.0], [20.2, 1953.0], [20.3, 1953.0], [20.4, 1953.0], [20.5, 1953.0], [20.6, 1953.0], [20.7, 1953.0], [20.8, 1953.0], [20.9, 1953.0], [21.0, 1955.0], [21.1, 1955.0], [21.2, 1955.0], [21.3, 1955.0], [21.4, 1955.0], [21.5, 1955.0], [21.6, 1955.0], [21.7, 1955.0], [21.8, 1955.0], [21.9, 1955.0], [22.0, 1959.0], [22.1, 1959.0], [22.2, 1959.0], [22.3, 1959.0], [22.4, 1959.0], [22.5, 1959.0], [22.6, 1959.0], [22.7, 1959.0], [22.8, 1959.0], [22.9, 1959.0], [23.0, 1959.0], [23.1, 1959.0], [23.2, 1959.0], [23.3, 1959.0], [23.4, 1959.0], [23.5, 1959.0], [23.6, 1959.0], [23.7, 1959.0], [23.8, 1959.0], [23.9, 1959.0], [24.0, 1961.0], [24.1, 1961.0], [24.2, 1961.0], [24.3, 1961.0], [24.4, 1961.0], [24.5, 1961.0], [24.6, 1961.0], [24.7, 1961.0], [24.8, 1961.0], [24.9, 1961.0], [25.0, 1973.0], [25.1, 1973.0], [25.2, 1973.0], [25.3, 1973.0], [25.4, 1973.0], [25.5, 1973.0], [25.6, 1973.0], [25.7, 1973.0], [25.8, 1973.0], [25.9, 1973.0], [26.0, 1980.0], [26.1, 1980.0], [26.2, 1980.0], [26.3, 1980.0], [26.4, 1980.0], [26.5, 1980.0], [26.6, 1980.0], [26.7, 1980.0], [26.8, 1980.0], [26.9, 1980.0], [27.0, 1994.0], [27.1, 1994.0], [27.2, 1994.0], [27.3, 1994.0], [27.4, 1994.0], [27.5, 1994.0], [27.6, 1994.0], [27.7, 1994.0], [27.8, 1994.0], [27.9, 1994.0], [28.0, 1995.0], [28.1, 1995.0], [28.2, 1995.0], [28.3, 1995.0], [28.4, 1995.0], [28.5, 1995.0], [28.6, 1995.0], [28.7, 1995.0], [28.8, 1995.0], [28.9, 1995.0], [29.0, 1995.0], [29.1, 1995.0], [29.2, 1995.0], [29.3, 1995.0], [29.4, 1995.0], [29.5, 1995.0], [29.6, 1995.0], [29.7, 1995.0], [29.8, 1995.0], [29.9, 1995.0], [30.0, 1998.0], [30.1, 1998.0], [30.2, 1998.0], [30.3, 1998.0], [30.4, 1998.0], [30.5, 1998.0], [30.6, 1998.0], [30.7, 1998.0], [30.8, 1998.0], [30.9, 1998.0], [31.0, 1999.0], [31.1, 1999.0], [31.2, 1999.0], [31.3, 1999.0], [31.4, 1999.0], [31.5, 1999.0], [31.6, 1999.0], [31.7, 1999.0], [31.8, 1999.0], [31.9, 1999.0], [32.0, 2005.0], [32.1, 2005.0], [32.2, 2005.0], [32.3, 2005.0], [32.4, 2005.0], [32.5, 2005.0], [32.6, 2005.0], [32.7, 2005.0], [32.8, 2005.0], [32.9, 2005.0], [33.0, 2007.0], [33.1, 2007.0], [33.2, 2007.0], [33.3, 2007.0], [33.4, 2007.0], [33.5, 2007.0], [33.6, 2007.0], [33.7, 2007.0], [33.8, 2007.0], [33.9, 2007.0], [34.0, 2018.0], [34.1, 2018.0], [34.2, 2018.0], [34.3, 2018.0], [34.4, 2018.0], [34.5, 2018.0], [34.6, 2018.0], [34.7, 2018.0], [34.8, 2018.0], [34.9, 2018.0], [35.0, 2041.0], [35.1, 2041.0], [35.2, 2041.0], [35.3, 2041.0], [35.4, 2041.0], [35.5, 2041.0], [35.6, 2041.0], [35.7, 2041.0], [35.8, 2041.0], [35.9, 2041.0], [36.0, 2045.0], [36.1, 2045.0], [36.2, 2045.0], [36.3, 2045.0], [36.4, 2045.0], [36.5, 2045.0], [36.6, 2045.0], [36.7, 2045.0], [36.8, 2045.0], [36.9, 2045.0], [37.0, 2051.0], [37.1, 2051.0], [37.2, 2051.0], [37.3, 2051.0], [37.4, 2051.0], [37.5, 2051.0], [37.6, 2051.0], [37.7, 2051.0], [37.8, 2051.0], [37.9, 2051.0], [38.0, 2055.0], [38.1, 2055.0], [38.2, 2055.0], [38.3, 2055.0], [38.4, 2055.0], [38.5, 2055.0], [38.6, 2055.0], [38.7, 2055.0], [38.8, 2055.0], [38.9, 2055.0], [39.0, 2056.0], [39.1, 2056.0], [39.2, 2056.0], [39.3, 2056.0], [39.4, 2056.0], [39.5, 2056.0], [39.6, 2056.0], [39.7, 2056.0], [39.8, 2056.0], [39.9, 2056.0], [40.0, 2060.0], [40.1, 2060.0], [40.2, 2060.0], [40.3, 2060.0], [40.4, 2060.0], [40.5, 2060.0], [40.6, 2060.0], [40.7, 2060.0], [40.8, 2060.0], [40.9, 2060.0], [41.0, 2063.0], [41.1, 2063.0], [41.2, 2063.0], [41.3, 2063.0], [41.4, 2063.0], [41.5, 2063.0], [41.6, 2063.0], [41.7, 2063.0], [41.8, 2063.0], [41.9, 2063.0], [42.0, 2068.0], [42.1, 2068.0], [42.2, 2068.0], [42.3, 2068.0], [42.4, 2068.0], [42.5, 2068.0], [42.6, 2068.0], [42.7, 2068.0], [42.8, 2068.0], [42.9, 2068.0], [43.0, 2091.0], [43.1, 2091.0], [43.2, 2091.0], [43.3, 2091.0], [43.4, 2091.0], [43.5, 2091.0], [43.6, 2091.0], [43.7, 2091.0], [43.8, 2091.0], [43.9, 2091.0], [44.0, 2098.0], [44.1, 2098.0], [44.2, 2098.0], [44.3, 2098.0], [44.4, 2098.0], [44.5, 2098.0], [44.6, 2098.0], [44.7, 2098.0], [44.8, 2098.0], [44.9, 2098.0], [45.0, 2099.0], [45.1, 2099.0], [45.2, 2099.0], [45.3, 2099.0], [45.4, 2099.0], [45.5, 2099.0], [45.6, 2099.0], [45.7, 2099.0], [45.8, 2099.0], [45.9, 2099.0], [46.0, 2105.0], [46.1, 2105.0], [46.2, 2105.0], [46.3, 2105.0], [46.4, 2105.0], [46.5, 2105.0], [46.6, 2105.0], [46.7, 2105.0], [46.8, 2105.0], [46.9, 2105.0], [47.0, 2112.0], [47.1, 2112.0], [47.2, 2112.0], [47.3, 2112.0], [47.4, 2112.0], [47.5, 2112.0], [47.6, 2112.0], [47.7, 2112.0], [47.8, 2112.0], [47.9, 2112.0], [48.0, 2115.0], [48.1, 2115.0], [48.2, 2115.0], [48.3, 2115.0], [48.4, 2115.0], [48.5, 2115.0], [48.6, 2115.0], [48.7, 2115.0], [48.8, 2115.0], [48.9, 2115.0], [49.0, 2117.0], [49.1, 2117.0], [49.2, 2117.0], [49.3, 2117.0], [49.4, 2117.0], [49.5, 2117.0], [49.6, 2117.0], [49.7, 2117.0], [49.8, 2117.0], [49.9, 2117.0], [50.0, 2118.0], [50.1, 2118.0], [50.2, 2118.0], [50.3, 2118.0], [50.4, 2118.0], [50.5, 2118.0], [50.6, 2118.0], [50.7, 2118.0], [50.8, 2118.0], [50.9, 2118.0], [51.0, 2121.0], [51.1, 2121.0], [51.2, 2121.0], [51.3, 2121.0], [51.4, 2121.0], [51.5, 2121.0], [51.6, 2121.0], [51.7, 2121.0], [51.8, 2121.0], [51.9, 2121.0], [52.0, 2147.0], [52.1, 2147.0], [52.2, 2147.0], [52.3, 2147.0], [52.4, 2147.0], [52.5, 2147.0], [52.6, 2147.0], [52.7, 2147.0], [52.8, 2147.0], [52.9, 2147.0], [53.0, 2151.0], [53.1, 2151.0], [53.2, 2151.0], [53.3, 2151.0], [53.4, 2151.0], [53.5, 2151.0], [53.6, 2151.0], [53.7, 2151.0], [53.8, 2151.0], [53.9, 2151.0], [54.0, 2153.0], [54.1, 2153.0], [54.2, 2153.0], [54.3, 2153.0], [54.4, 2153.0], [54.5, 2153.0], [54.6, 2153.0], [54.7, 2153.0], [54.8, 2153.0], [54.9, 2153.0], [55.0, 2159.0], [55.1, 2159.0], [55.2, 2159.0], [55.3, 2159.0], [55.4, 2159.0], [55.5, 2159.0], [55.6, 2159.0], [55.7, 2159.0], [55.8, 2159.0], [55.9, 2159.0], [56.0, 2174.0], [56.1, 2174.0], [56.2, 2174.0], [56.3, 2174.0], [56.4, 2174.0], [56.5, 2174.0], [56.6, 2174.0], [56.7, 2174.0], [56.8, 2174.0], [56.9, 2174.0], [57.0, 2182.0], [57.1, 2182.0], [57.2, 2182.0], [57.3, 2182.0], [57.4, 2182.0], [57.5, 2182.0], [57.6, 2182.0], [57.7, 2182.0], [57.8, 2182.0], [57.9, 2182.0], [58.0, 2206.0], [58.1, 2206.0], [58.2, 2206.0], [58.3, 2206.0], [58.4, 2206.0], [58.5, 2206.0], [58.6, 2206.0], [58.7, 2206.0], [58.8, 2206.0], [58.9, 2206.0], [59.0, 2212.0], [59.1, 2212.0], [59.2, 2212.0], [59.3, 2212.0], [59.4, 2212.0], [59.5, 2212.0], [59.6, 2212.0], [59.7, 2212.0], [59.8, 2212.0], [59.9, 2212.0], [60.0, 2213.0], [60.1, 2213.0], [60.2, 2213.0], [60.3, 2213.0], [60.4, 2213.0], [60.5, 2213.0], [60.6, 2213.0], [60.7, 2213.0], [60.8, 2213.0], [60.9, 2213.0], [61.0, 2250.0], [61.1, 2250.0], [61.2, 2250.0], [61.3, 2250.0], [61.4, 2250.0], [61.5, 2250.0], [61.6, 2250.0], [61.7, 2250.0], [61.8, 2250.0], [61.9, 2250.0], [62.0, 2264.0], [62.1, 2264.0], [62.2, 2264.0], [62.3, 2264.0], [62.4, 2264.0], [62.5, 2264.0], [62.6, 2264.0], [62.7, 2264.0], [62.8, 2264.0], [62.9, 2264.0], [63.0, 2283.0], [63.1, 2283.0], [63.2, 2283.0], [63.3, 2283.0], [63.4, 2283.0], [63.5, 2283.0], [63.6, 2283.0], [63.7, 2283.0], [63.8, 2283.0], [63.9, 2283.0], [64.0, 2285.0], [64.1, 2285.0], [64.2, 2285.0], [64.3, 2285.0], [64.4, 2285.0], [64.5, 2285.0], [64.6, 2285.0], [64.7, 2285.0], [64.8, 2285.0], [64.9, 2285.0], [65.0, 2307.0], [65.1, 2307.0], [65.2, 2307.0], [65.3, 2307.0], [65.4, 2307.0], [65.5, 2307.0], [65.6, 2307.0], [65.7, 2307.0], [65.8, 2307.0], [65.9, 2307.0], [66.0, 2316.0], [66.1, 2316.0], [66.2, 2316.0], [66.3, 2316.0], [66.4, 2316.0], [66.5, 2316.0], [66.6, 2316.0], [66.7, 2316.0], [66.8, 2316.0], [66.9, 2316.0], [67.0, 2351.0], [67.1, 2351.0], [67.2, 2351.0], [67.3, 2351.0], [67.4, 2351.0], [67.5, 2351.0], [67.6, 2351.0], [67.7, 2351.0], [67.8, 2351.0], [67.9, 2351.0], [68.0, 2365.0], [68.1, 2365.0], [68.2, 2365.0], [68.3, 2365.0], [68.4, 2365.0], [68.5, 2365.0], [68.6, 2365.0], [68.7, 2365.0], [68.8, 2365.0], [68.9, 2365.0], [69.0, 2436.0], [69.1, 2436.0], [69.2, 2436.0], [69.3, 2436.0], [69.4, 2436.0], [69.5, 2436.0], [69.6, 2436.0], [69.7, 2436.0], [69.8, 2436.0], [69.9, 2436.0], [70.0, 2454.0], [70.1, 2454.0], [70.2, 2454.0], [70.3, 2454.0], [70.4, 2454.0], [70.5, 2454.0], [70.6, 2454.0], [70.7, 2454.0], [70.8, 2454.0], [70.9, 2454.0], [71.0, 2456.0], [71.1, 2456.0], [71.2, 2456.0], [71.3, 2456.0], [71.4, 2456.0], [71.5, 2456.0], [71.6, 2456.0], [71.7, 2456.0], [71.8, 2456.0], [71.9, 2456.0], [72.0, 2529.0], [72.1, 2529.0], [72.2, 2529.0], [72.3, 2529.0], [72.4, 2529.0], [72.5, 2529.0], [72.6, 2529.0], [72.7, 2529.0], [72.8, 2529.0], [72.9, 2529.0], [73.0, 2543.0], [73.1, 2543.0], [73.2, 2543.0], [73.3, 2543.0], [73.4, 2543.0], [73.5, 2543.0], [73.6, 2543.0], [73.7, 2543.0], [73.8, 2543.0], [73.9, 2543.0], [74.0, 2578.0], [74.1, 2578.0], [74.2, 2578.0], [74.3, 2578.0], [74.4, 2578.0], [74.5, 2578.0], [74.6, 2578.0], [74.7, 2578.0], [74.8, 2578.0], [74.9, 2578.0], [75.0, 2686.0], [75.1, 2686.0], [75.2, 2686.0], [75.3, 2686.0], [75.4, 2686.0], [75.5, 2686.0], [75.6, 2686.0], [75.7, 2686.0], [75.8, 2686.0], [75.9, 2686.0], [76.0, 2704.0], [76.1, 2704.0], [76.2, 2704.0], [76.3, 2704.0], [76.4, 2704.0], [76.5, 2704.0], [76.6, 2704.0], [76.7, 2704.0], [76.8, 2704.0], [76.9, 2704.0], [77.0, 2711.0], [77.1, 2711.0], [77.2, 2711.0], [77.3, 2711.0], [77.4, 2711.0], [77.5, 2711.0], [77.6, 2711.0], [77.7, 2711.0], [77.8, 2711.0], [77.9, 2711.0], [78.0, 2725.0], [78.1, 2725.0], [78.2, 2725.0], [78.3, 2725.0], [78.4, 2725.0], [78.5, 2725.0], [78.6, 2725.0], [78.7, 2725.0], [78.8, 2725.0], [78.9, 2725.0], [79.0, 2845.0], [79.1, 2845.0], [79.2, 2845.0], [79.3, 2845.0], [79.4, 2845.0], [79.5, 2845.0], [79.6, 2845.0], [79.7, 2845.0], [79.8, 2845.0], [79.9, 2845.0], [80.0, 2857.0], [80.1, 2857.0], [80.2, 2857.0], [80.3, 2857.0], [80.4, 2857.0], [80.5, 2857.0], [80.6, 2857.0], [80.7, 2857.0], [80.8, 2857.0], [80.9, 2857.0], [81.0, 2869.0], [81.1, 2869.0], [81.2, 2869.0], [81.3, 2869.0], [81.4, 2869.0], [81.5, 2869.0], [81.6, 2869.0], [81.7, 2869.0], [81.8, 2869.0], [81.9, 2869.0], [82.0, 2886.0], [82.1, 2886.0], [82.2, 2886.0], [82.3, 2886.0], [82.4, 2886.0], [82.5, 2886.0], [82.6, 2886.0], [82.7, 2886.0], [82.8, 2886.0], [82.9, 2886.0], [83.0, 2893.0], [83.1, 2893.0], [83.2, 2893.0], [83.3, 2893.0], [83.4, 2893.0], [83.5, 2893.0], [83.6, 2893.0], [83.7, 2893.0], [83.8, 2893.0], [83.9, 2893.0], [84.0, 2916.0], [84.1, 2916.0], [84.2, 2916.0], [84.3, 2916.0], [84.4, 2916.0], [84.5, 2916.0], [84.6, 2916.0], [84.7, 2916.0], [84.8, 2916.0], [84.9, 2916.0], [85.0, 2957.0], [85.1, 2957.0], [85.2, 2957.0], [85.3, 2957.0], [85.4, 2957.0], [85.5, 2957.0], [85.6, 2957.0], [85.7, 2957.0], [85.8, 2957.0], [85.9, 2957.0], [86.0, 2959.0], [86.1, 2959.0], [86.2, 2959.0], [86.3, 2959.0], [86.4, 2959.0], [86.5, 2959.0], [86.6, 2959.0], [86.7, 2959.0], [86.8, 2959.0], [86.9, 2959.0], [87.0, 3009.0], [87.1, 3009.0], [87.2, 3009.0], [87.3, 3009.0], [87.4, 3009.0], [87.5, 3009.0], [87.6, 3009.0], [87.7, 3009.0], [87.8, 3009.0], [87.9, 3009.0], [88.0, 3098.0], [88.1, 3098.0], [88.2, 3098.0], [88.3, 3098.0], [88.4, 3098.0], [88.5, 3098.0], [88.6, 3098.0], [88.7, 3098.0], [88.8, 3098.0], [88.9, 3098.0], [89.0, 3172.0], [89.1, 3172.0], [89.2, 3172.0], [89.3, 3172.0], [89.4, 3172.0], [89.5, 3172.0], [89.6, 3172.0], [89.7, 3172.0], [89.8, 3172.0], [89.9, 3172.0], [90.0, 3764.0], [90.1, 3764.0], [90.2, 3764.0], [90.3, 3764.0], [90.4, 3764.0], [90.5, 3764.0], [90.6, 3764.0], [90.7, 3764.0], [90.8, 3764.0], [90.9, 3764.0], [91.0, 3783.0], [91.1, 3783.0], [91.2, 3783.0], [91.3, 3783.0], [91.4, 3783.0], [91.5, 3783.0], [91.6, 3783.0], [91.7, 3783.0], [91.8, 3783.0], [91.9, 3783.0], [92.0, 3897.0], [92.1, 3897.0], [92.2, 3897.0], [92.3, 3897.0], [92.4, 3897.0], [92.5, 3897.0], [92.6, 3897.0], [92.7, 3897.0], [92.8, 3897.0], [92.9, 3897.0], [93.0, 3918.0], [93.1, 3918.0], [93.2, 3918.0], [93.3, 3918.0], [93.4, 3918.0], [93.5, 3918.0], [93.6, 3918.0], [93.7, 3918.0], [93.8, 3918.0], [93.9, 3918.0], [94.0, 4299.0], [94.1, 4299.0], [94.2, 4299.0], [94.3, 4299.0], [94.4, 4299.0], [94.5, 4299.0], [94.6, 4299.0], [94.7, 4299.0], [94.8, 4299.0], [94.9, 4299.0], [95.0, 4433.0], [95.1, 4433.0], [95.2, 4433.0], [95.3, 4433.0], [95.4, 4433.0], [95.5, 4433.0], [95.6, 4433.0], [95.7, 4433.0], [95.8, 4433.0], [95.9, 4433.0], [96.0, 4501.0], [96.1, 4501.0], [96.2, 4501.0], [96.3, 4501.0], [96.4, 4501.0], [96.5, 4501.0], [96.6, 4501.0], [96.7, 4501.0], [96.8, 4501.0], [96.9, 4501.0], [97.0, 4555.0], [97.1, 4555.0], [97.2, 4555.0], [97.3, 4555.0], [97.4, 4555.0], [97.5, 4555.0], [97.6, 4555.0], [97.7, 4555.0], [97.8, 4555.0], [97.9, 4555.0], [98.0, 4557.0], [98.1, 4557.0], [98.2, 4557.0], [98.3, 4557.0], [98.4, 4557.0], [98.5, 4557.0], [98.6, 4557.0], [98.7, 4557.0], [98.8, 4557.0], [98.9, 4557.0], [99.0, 4575.0], [99.1, 4575.0], [99.2, 4575.0], [99.3, 4575.0], [99.4, 4575.0], [99.5, 4575.0], [99.6, 4575.0], [99.7, 4575.0], [99.8, 4575.0], [99.9, 4575.0]], "isOverall": false, "label": "Category Drill down", "isController": false}, {"data": [[0.0, 3388.0], [0.1, 3388.0], [0.2, 3388.0], [0.3, 3388.0], [0.4, 3388.0], [0.5, 3388.0], [0.6, 3388.0], [0.7, 3388.0], [0.8, 3388.0], [0.9, 3388.0], [1.0, 3392.0], [1.1, 3392.0], [1.2, 3392.0], [1.3, 3392.0], [1.4, 3392.0], [1.5, 3392.0], [1.6, 3392.0], [1.7, 3392.0], [1.8, 3392.0], [1.9, 3392.0], [2.0, 3397.0], [2.1, 3397.0], [2.2, 3397.0], [2.3, 3397.0], [2.4, 3397.0], [2.5, 3397.0], [2.6, 3397.0], [2.7, 3397.0], [2.8, 3397.0], [2.9, 3397.0], [3.0, 3417.0], [3.1, 3417.0], [3.2, 3417.0], [3.3, 3417.0], [3.4, 3417.0], [3.5, 3417.0], [3.6, 3417.0], [3.7, 3417.0], [3.8, 3417.0], [3.9, 3417.0], [4.0, 3426.0], [4.1, 3426.0], [4.2, 3426.0], [4.3, 3426.0], [4.4, 3426.0], [4.5, 3426.0], [4.6, 3426.0], [4.7, 3426.0], [4.8, 3426.0], [4.9, 3426.0], [5.0, 3462.0], [5.1, 3462.0], [5.2, 3462.0], [5.3, 3462.0], [5.4, 3462.0], [5.5, 3462.0], [5.6, 3462.0], [5.7, 3462.0], [5.8, 3462.0], [5.9, 3462.0], [6.0, 3472.0], [6.1, 3472.0], [6.2, 3472.0], [6.3, 3472.0], [6.4, 3472.0], [6.5, 3472.0], [6.6, 3472.0], [6.7, 3472.0], [6.8, 3472.0], [6.9, 3472.0], [7.0, 3493.0], [7.1, 3493.0], [7.2, 3493.0], [7.3, 3493.0], [7.4, 3493.0], [7.5, 3493.0], [7.6, 3493.0], [7.7, 3493.0], [7.8, 3493.0], [7.9, 3493.0], [8.0, 3499.0], [8.1, 3499.0], [8.2, 3499.0], [8.3, 3499.0], [8.4, 3499.0], [8.5, 3499.0], [8.6, 3499.0], [8.7, 3499.0], [8.8, 3499.0], [8.9, 3499.0], [9.0, 3510.0], [9.1, 3510.0], [9.2, 3510.0], [9.3, 3510.0], [9.4, 3510.0], [9.5, 3510.0], [9.6, 3510.0], [9.7, 3510.0], [9.8, 3510.0], [9.9, 3510.0], [10.0, 3511.0], [10.1, 3511.0], [10.2, 3511.0], [10.3, 3511.0], [10.4, 3511.0], [10.5, 3511.0], [10.6, 3511.0], [10.7, 3511.0], [10.8, 3511.0], [10.9, 3511.0], [11.0, 3544.0], [11.1, 3544.0], [11.2, 3544.0], [11.3, 3544.0], [11.4, 3544.0], [11.5, 3544.0], [11.6, 3544.0], [11.7, 3544.0], [11.8, 3544.0], [11.9, 3544.0], [12.0, 3562.0], [12.1, 3562.0], [12.2, 3562.0], [12.3, 3562.0], [12.4, 3562.0], [12.5, 3562.0], [12.6, 3562.0], [12.7, 3562.0], [12.8, 3562.0], [12.9, 3562.0], [13.0, 3592.0], [13.1, 3592.0], [13.2, 3592.0], [13.3, 3592.0], [13.4, 3592.0], [13.5, 3592.0], [13.6, 3592.0], [13.7, 3592.0], [13.8, 3592.0], [13.9, 3592.0], [14.0, 3597.0], [14.1, 3597.0], [14.2, 3597.0], [14.3, 3597.0], [14.4, 3597.0], [14.5, 3597.0], [14.6, 3597.0], [14.7, 3597.0], [14.8, 3597.0], [14.9, 3597.0], [15.0, 3598.0], [15.1, 3598.0], [15.2, 3598.0], [15.3, 3598.0], [15.4, 3598.0], [15.5, 3598.0], [15.6, 3598.0], [15.7, 3598.0], [15.8, 3598.0], [15.9, 3598.0], [16.0, 3625.0], [16.1, 3625.0], [16.2, 3625.0], [16.3, 3625.0], [16.4, 3625.0], [16.5, 3625.0], [16.6, 3625.0], [16.7, 3625.0], [16.8, 3625.0], [16.9, 3625.0], [17.0, 3629.0], [17.1, 3629.0], [17.2, 3629.0], [17.3, 3629.0], [17.4, 3629.0], [17.5, 3629.0], [17.6, 3629.0], [17.7, 3629.0], [17.8, 3629.0], [17.9, 3629.0], [18.0, 3637.0], [18.1, 3637.0], [18.2, 3637.0], [18.3, 3637.0], [18.4, 3637.0], [18.5, 3637.0], [18.6, 3637.0], [18.7, 3637.0], [18.8, 3637.0], [18.9, 3637.0], [19.0, 3658.0], [19.1, 3658.0], [19.2, 3658.0], [19.3, 3658.0], [19.4, 3658.0], [19.5, 3658.0], [19.6, 3658.0], [19.7, 3658.0], [19.8, 3658.0], [19.9, 3658.0], [20.0, 3661.0], [20.1, 3661.0], [20.2, 3661.0], [20.3, 3661.0], [20.4, 3661.0], [20.5, 3661.0], [20.6, 3661.0], [20.7, 3661.0], [20.8, 3661.0], [20.9, 3661.0], [21.0, 3662.0], [21.1, 3662.0], [21.2, 3662.0], [21.3, 3662.0], [21.4, 3662.0], [21.5, 3662.0], [21.6, 3662.0], [21.7, 3662.0], [21.8, 3662.0], [21.9, 3662.0], [22.0, 3668.0], [22.1, 3668.0], [22.2, 3668.0], [22.3, 3668.0], [22.4, 3668.0], [22.5, 3668.0], [22.6, 3668.0], [22.7, 3668.0], [22.8, 3668.0], [22.9, 3668.0], [23.0, 3668.0], [23.1, 3668.0], [23.2, 3668.0], [23.3, 3668.0], [23.4, 3668.0], [23.5, 3668.0], [23.6, 3668.0], [23.7, 3668.0], [23.8, 3668.0], [23.9, 3668.0], [24.0, 3681.0], [24.1, 3681.0], [24.2, 3681.0], [24.3, 3681.0], [24.4, 3681.0], [24.5, 3681.0], [24.6, 3681.0], [24.7, 3681.0], [24.8, 3681.0], [24.9, 3681.0], [25.0, 3682.0], [25.1, 3682.0], [25.2, 3682.0], [25.3, 3682.0], [25.4, 3682.0], [25.5, 3682.0], [25.6, 3682.0], [25.7, 3682.0], [25.8, 3682.0], [25.9, 3682.0], [26.0, 3687.0], [26.1, 3687.0], [26.2, 3687.0], [26.3, 3687.0], [26.4, 3687.0], [26.5, 3687.0], [26.6, 3687.0], [26.7, 3687.0], [26.8, 3687.0], [26.9, 3687.0], [27.0, 3691.0], [27.1, 3691.0], [27.2, 3691.0], [27.3, 3691.0], [27.4, 3691.0], [27.5, 3691.0], [27.6, 3691.0], [27.7, 3691.0], [27.8, 3691.0], [27.9, 3691.0], [28.0, 3694.0], [28.1, 3694.0], [28.2, 3694.0], [28.3, 3694.0], [28.4, 3694.0], [28.5, 3694.0], [28.6, 3694.0], [28.7, 3694.0], [28.8, 3694.0], [28.9, 3694.0], [29.0, 3696.0], [29.1, 3696.0], [29.2, 3696.0], [29.3, 3696.0], [29.4, 3696.0], [29.5, 3696.0], [29.6, 3696.0], [29.7, 3696.0], [29.8, 3696.0], [29.9, 3696.0], [30.0, 3697.0], [30.1, 3697.0], [30.2, 3697.0], [30.3, 3697.0], [30.4, 3697.0], [30.5, 3697.0], [30.6, 3697.0], [30.7, 3697.0], [30.8, 3697.0], [30.9, 3697.0], [31.0, 3705.0], [31.1, 3705.0], [31.2, 3705.0], [31.3, 3705.0], [31.4, 3705.0], [31.5, 3705.0], [31.6, 3705.0], [31.7, 3705.0], [31.8, 3705.0], [31.9, 3705.0], [32.0, 3712.0], [32.1, 3712.0], [32.2, 3712.0], [32.3, 3712.0], [32.4, 3712.0], [32.5, 3712.0], [32.6, 3712.0], [32.7, 3712.0], [32.8, 3712.0], [32.9, 3712.0], [33.0, 3716.0], [33.1, 3716.0], [33.2, 3716.0], [33.3, 3716.0], [33.4, 3716.0], [33.5, 3716.0], [33.6, 3716.0], [33.7, 3716.0], [33.8, 3716.0], [33.9, 3716.0], [34.0, 3728.0], [34.1, 3728.0], [34.2, 3728.0], [34.3, 3728.0], [34.4, 3728.0], [34.5, 3728.0], [34.6, 3728.0], [34.7, 3728.0], [34.8, 3728.0], [34.9, 3728.0], [35.0, 3744.0], [35.1, 3744.0], [35.2, 3744.0], [35.3, 3744.0], [35.4, 3744.0], [35.5, 3744.0], [35.6, 3744.0], [35.7, 3744.0], [35.8, 3744.0], [35.9, 3744.0], [36.0, 3746.0], [36.1, 3746.0], [36.2, 3746.0], [36.3, 3746.0], [36.4, 3746.0], [36.5, 3746.0], [36.6, 3746.0], [36.7, 3746.0], [36.8, 3746.0], [36.9, 3746.0], [37.0, 3758.0], [37.1, 3758.0], [37.2, 3758.0], [37.3, 3758.0], [37.4, 3758.0], [37.5, 3758.0], [37.6, 3758.0], [37.7, 3758.0], [37.8, 3758.0], [37.9, 3758.0], [38.0, 3761.0], [38.1, 3761.0], [38.2, 3761.0], [38.3, 3761.0], [38.4, 3761.0], [38.5, 3761.0], [38.6, 3761.0], [38.7, 3761.0], [38.8, 3761.0], [38.9, 3761.0], [39.0, 3769.0], [39.1, 3769.0], [39.2, 3769.0], [39.3, 3769.0], [39.4, 3769.0], [39.5, 3769.0], [39.6, 3769.0], [39.7, 3769.0], [39.8, 3769.0], [39.9, 3769.0], [40.0, 3776.0], [40.1, 3776.0], [40.2, 3776.0], [40.3, 3776.0], [40.4, 3776.0], [40.5, 3776.0], [40.6, 3776.0], [40.7, 3776.0], [40.8, 3776.0], [40.9, 3776.0], [41.0, 3785.0], [41.1, 3785.0], [41.2, 3785.0], [41.3, 3785.0], [41.4, 3785.0], [41.5, 3785.0], [41.6, 3785.0], [41.7, 3785.0], [41.8, 3785.0], [41.9, 3785.0], [42.0, 3789.0], [42.1, 3789.0], [42.2, 3789.0], [42.3, 3789.0], [42.4, 3789.0], [42.5, 3789.0], [42.6, 3789.0], [42.7, 3789.0], [42.8, 3789.0], [42.9, 3789.0], [43.0, 3790.0], [43.1, 3790.0], [43.2, 3790.0], [43.3, 3790.0], [43.4, 3790.0], [43.5, 3790.0], [43.6, 3790.0], [43.7, 3790.0], [43.8, 3790.0], [43.9, 3790.0], [44.0, 3792.0], [44.1, 3792.0], [44.2, 3792.0], [44.3, 3792.0], [44.4, 3792.0], [44.5, 3792.0], [44.6, 3792.0], [44.7, 3792.0], [44.8, 3792.0], [44.9, 3792.0], [45.0, 3793.0], [45.1, 3793.0], [45.2, 3793.0], [45.3, 3793.0], [45.4, 3793.0], [45.5, 3793.0], [45.6, 3793.0], [45.7, 3793.0], [45.8, 3793.0], [45.9, 3793.0], [46.0, 3817.0], [46.1, 3817.0], [46.2, 3817.0], [46.3, 3817.0], [46.4, 3817.0], [46.5, 3817.0], [46.6, 3817.0], [46.7, 3817.0], [46.8, 3817.0], [46.9, 3817.0], [47.0, 3820.0], [47.1, 3820.0], [47.2, 3820.0], [47.3, 3820.0], [47.4, 3820.0], [47.5, 3820.0], [47.6, 3820.0], [47.7, 3820.0], [47.8, 3820.0], [47.9, 3820.0], [48.0, 3824.0], [48.1, 3824.0], [48.2, 3824.0], [48.3, 3824.0], [48.4, 3824.0], [48.5, 3824.0], [48.6, 3824.0], [48.7, 3824.0], [48.8, 3824.0], [48.9, 3824.0], [49.0, 3835.0], [49.1, 3835.0], [49.2, 3835.0], [49.3, 3835.0], [49.4, 3835.0], [49.5, 3835.0], [49.6, 3835.0], [49.7, 3835.0], [49.8, 3835.0], [49.9, 3835.0], [50.0, 3840.0], [50.1, 3840.0], [50.2, 3840.0], [50.3, 3840.0], [50.4, 3840.0], [50.5, 3840.0], [50.6, 3840.0], [50.7, 3840.0], [50.8, 3840.0], [50.9, 3840.0], [51.0, 3840.0], [51.1, 3840.0], [51.2, 3840.0], [51.3, 3840.0], [51.4, 3840.0], [51.5, 3840.0], [51.6, 3840.0], [51.7, 3840.0], [51.8, 3840.0], [51.9, 3840.0], [52.0, 3847.0], [52.1, 3847.0], [52.2, 3847.0], [52.3, 3847.0], [52.4, 3847.0], [52.5, 3847.0], [52.6, 3847.0], [52.7, 3847.0], [52.8, 3847.0], [52.9, 3847.0], [53.0, 3853.0], [53.1, 3853.0], [53.2, 3853.0], [53.3, 3853.0], [53.4, 3853.0], [53.5, 3853.0], [53.6, 3853.0], [53.7, 3853.0], [53.8, 3853.0], [53.9, 3853.0], [54.0, 3867.0], [54.1, 3867.0], [54.2, 3867.0], [54.3, 3867.0], [54.4, 3867.0], [54.5, 3867.0], [54.6, 3867.0], [54.7, 3867.0], [54.8, 3867.0], [54.9, 3867.0], [55.0, 3896.0], [55.1, 3896.0], [55.2, 3896.0], [55.3, 3896.0], [55.4, 3896.0], [55.5, 3896.0], [55.6, 3896.0], [55.7, 3896.0], [55.8, 3896.0], [55.9, 3896.0], [56.0, 3906.0], [56.1, 3906.0], [56.2, 3906.0], [56.3, 3906.0], [56.4, 3906.0], [56.5, 3906.0], [56.6, 3906.0], [56.7, 3906.0], [56.8, 3906.0], [56.9, 3906.0], [57.0, 3923.0], [57.1, 3923.0], [57.2, 3923.0], [57.3, 3923.0], [57.4, 3923.0], [57.5, 3923.0], [57.6, 3923.0], [57.7, 3923.0], [57.8, 3923.0], [57.9, 3923.0], [58.0, 3944.0], [58.1, 3944.0], [58.2, 3944.0], [58.3, 3944.0], [58.4, 3944.0], [58.5, 3944.0], [58.6, 3944.0], [58.7, 3944.0], [58.8, 3944.0], [58.9, 3944.0], [59.0, 3950.0], [59.1, 3950.0], [59.2, 3950.0], [59.3, 3950.0], [59.4, 3950.0], [59.5, 3950.0], [59.6, 3950.0], [59.7, 3950.0], [59.8, 3950.0], [59.9, 3950.0], [60.0, 3956.0], [60.1, 3956.0], [60.2, 3956.0], [60.3, 3956.0], [60.4, 3956.0], [60.5, 3956.0], [60.6, 3956.0], [60.7, 3956.0], [60.8, 3956.0], [60.9, 3956.0], [61.0, 3984.0], [61.1, 3984.0], [61.2, 3984.0], [61.3, 3984.0], [61.4, 3984.0], [61.5, 3984.0], [61.6, 3984.0], [61.7, 3984.0], [61.8, 3984.0], [61.9, 3984.0], [62.0, 3986.0], [62.1, 3986.0], [62.2, 3986.0], [62.3, 3986.0], [62.4, 3986.0], [62.5, 3986.0], [62.6, 3986.0], [62.7, 3986.0], [62.8, 3986.0], [62.9, 3986.0], [63.0, 3986.0], [63.1, 3986.0], [63.2, 3986.0], [63.3, 3986.0], [63.4, 3986.0], [63.5, 3986.0], [63.6, 3986.0], [63.7, 3986.0], [63.8, 3986.0], [63.9, 3986.0], [64.0, 3987.0], [64.1, 3987.0], [64.2, 3987.0], [64.3, 3987.0], [64.4, 3987.0], [64.5, 3987.0], [64.6, 3987.0], [64.7, 3987.0], [64.8, 3987.0], [64.9, 3987.0], [65.0, 4038.0], [65.1, 4038.0], [65.2, 4038.0], [65.3, 4038.0], [65.4, 4038.0], [65.5, 4038.0], [65.6, 4038.0], [65.7, 4038.0], [65.8, 4038.0], [65.9, 4038.0], [66.0, 4041.0], [66.1, 4041.0], [66.2, 4041.0], [66.3, 4041.0], [66.4, 4041.0], [66.5, 4041.0], [66.6, 4041.0], [66.7, 4041.0], [66.8, 4041.0], [66.9, 4041.0], [67.0, 4052.0], [67.1, 4052.0], [67.2, 4052.0], [67.3, 4052.0], [67.4, 4052.0], [67.5, 4052.0], [67.6, 4052.0], [67.7, 4052.0], [67.8, 4052.0], [67.9, 4052.0], [68.0, 4086.0], [68.1, 4086.0], [68.2, 4086.0], [68.3, 4086.0], [68.4, 4086.0], [68.5, 4086.0], [68.6, 4086.0], [68.7, 4086.0], [68.8, 4086.0], [68.9, 4086.0], [69.0, 4104.0], [69.1, 4104.0], [69.2, 4104.0], [69.3, 4104.0], [69.4, 4104.0], [69.5, 4104.0], [69.6, 4104.0], [69.7, 4104.0], [69.8, 4104.0], [69.9, 4104.0], [70.0, 4110.0], [70.1, 4110.0], [70.2, 4110.0], [70.3, 4110.0], [70.4, 4110.0], [70.5, 4110.0], [70.6, 4110.0], [70.7, 4110.0], [70.8, 4110.0], [70.9, 4110.0], [71.0, 4116.0], [71.1, 4116.0], [71.2, 4116.0], [71.3, 4116.0], [71.4, 4116.0], [71.5, 4116.0], [71.6, 4116.0], [71.7, 4116.0], [71.8, 4116.0], [71.9, 4116.0], [72.0, 4124.0], [72.1, 4124.0], [72.2, 4124.0], [72.3, 4124.0], [72.4, 4124.0], [72.5, 4124.0], [72.6, 4124.0], [72.7, 4124.0], [72.8, 4124.0], [72.9, 4124.0], [73.0, 4129.0], [73.1, 4129.0], [73.2, 4129.0], [73.3, 4129.0], [73.4, 4129.0], [73.5, 4129.0], [73.6, 4129.0], [73.7, 4129.0], [73.8, 4129.0], [73.9, 4129.0], [74.0, 4155.0], [74.1, 4155.0], [74.2, 4155.0], [74.3, 4155.0], [74.4, 4155.0], [74.5, 4155.0], [74.6, 4155.0], [74.7, 4155.0], [74.8, 4155.0], [74.9, 4155.0], [75.0, 4163.0], [75.1, 4163.0], [75.2, 4163.0], [75.3, 4163.0], [75.4, 4163.0], [75.5, 4163.0], [75.6, 4163.0], [75.7, 4163.0], [75.8, 4163.0], [75.9, 4163.0], [76.0, 4171.0], [76.1, 4171.0], [76.2, 4171.0], [76.3, 4171.0], [76.4, 4171.0], [76.5, 4171.0], [76.6, 4171.0], [76.7, 4171.0], [76.8, 4171.0], [76.9, 4171.0], [77.0, 4186.0], [77.1, 4186.0], [77.2, 4186.0], [77.3, 4186.0], [77.4, 4186.0], [77.5, 4186.0], [77.6, 4186.0], [77.7, 4186.0], [77.8, 4186.0], [77.9, 4186.0], [78.0, 4204.0], [78.1, 4204.0], [78.2, 4204.0], [78.3, 4204.0], [78.4, 4204.0], [78.5, 4204.0], [78.6, 4204.0], [78.7, 4204.0], [78.8, 4204.0], [78.9, 4204.0], [79.0, 4222.0], [79.1, 4222.0], [79.2, 4222.0], [79.3, 4222.0], [79.4, 4222.0], [79.5, 4222.0], [79.6, 4222.0], [79.7, 4222.0], [79.8, 4222.0], [79.9, 4222.0], [80.0, 4311.0], [80.1, 4311.0], [80.2, 4311.0], [80.3, 4311.0], [80.4, 4311.0], [80.5, 4311.0], [80.6, 4311.0], [80.7, 4311.0], [80.8, 4311.0], [80.9, 4311.0], [81.0, 4322.0], [81.1, 4322.0], [81.2, 4322.0], [81.3, 4322.0], [81.4, 4322.0], [81.5, 4322.0], [81.6, 4322.0], [81.7, 4322.0], [81.8, 4322.0], [81.9, 4322.0], [82.0, 4386.0], [82.1, 4386.0], [82.2, 4386.0], [82.3, 4386.0], [82.4, 4386.0], [82.5, 4386.0], [82.6, 4386.0], [82.7, 4386.0], [82.8, 4386.0], [82.9, 4386.0], [83.0, 4433.0], [83.1, 4433.0], [83.2, 4433.0], [83.3, 4433.0], [83.4, 4433.0], [83.5, 4433.0], [83.6, 4433.0], [83.7, 4433.0], [83.8, 4433.0], [83.9, 4433.0], [84.0, 4528.0], [84.1, 4528.0], [84.2, 4528.0], [84.3, 4528.0], [84.4, 4528.0], [84.5, 4528.0], [84.6, 4528.0], [84.7, 4528.0], [84.8, 4528.0], [84.9, 4528.0], [85.0, 4532.0], [85.1, 4532.0], [85.2, 4532.0], [85.3, 4532.0], [85.4, 4532.0], [85.5, 4532.0], [85.6, 4532.0], [85.7, 4532.0], [85.8, 4532.0], [85.9, 4532.0], [86.0, 4585.0], [86.1, 4585.0], [86.2, 4585.0], [86.3, 4585.0], [86.4, 4585.0], [86.5, 4585.0], [86.6, 4585.0], [86.7, 4585.0], [86.8, 4585.0], [86.9, 4585.0], [87.0, 4618.0], [87.1, 4618.0], [87.2, 4618.0], [87.3, 4618.0], [87.4, 4618.0], [87.5, 4618.0], [87.6, 4618.0], [87.7, 4618.0], [87.8, 4618.0], [87.9, 4618.0], [88.0, 4718.0], [88.1, 4718.0], [88.2, 4718.0], [88.3, 4718.0], [88.4, 4718.0], [88.5, 4718.0], [88.6, 4718.0], [88.7, 4718.0], [88.8, 4718.0], [88.9, 4718.0], [89.0, 4727.0], [89.1, 4727.0], [89.2, 4727.0], [89.3, 4727.0], [89.4, 4727.0], [89.5, 4727.0], [89.6, 4727.0], [89.7, 4727.0], [89.8, 4727.0], [89.9, 4727.0], [90.0, 4741.0], [90.1, 4741.0], [90.2, 4741.0], [90.3, 4741.0], [90.4, 4741.0], [90.5, 4741.0], [90.6, 4741.0], [90.7, 4741.0], [90.8, 4741.0], [90.9, 4741.0], [91.0, 4840.0], [91.1, 4840.0], [91.2, 4840.0], [91.3, 4840.0], [91.4, 4840.0], [91.5, 4840.0], [91.6, 4840.0], [91.7, 4840.0], [91.8, 4840.0], [91.9, 4840.0], [92.0, 4921.0], [92.1, 4921.0], [92.2, 4921.0], [92.3, 4921.0], [92.4, 4921.0], [92.5, 4921.0], [92.6, 4921.0], [92.7, 4921.0], [92.8, 4921.0], [92.9, 4921.0], [93.0, 4964.0], [93.1, 4964.0], [93.2, 4964.0], [93.3, 4964.0], [93.4, 4964.0], [93.5, 4964.0], [93.6, 4964.0], [93.7, 4964.0], [93.8, 4964.0], [93.9, 4964.0], [94.0, 5029.0], [94.1, 5029.0], [94.2, 5029.0], [94.3, 5029.0], [94.4, 5029.0], [94.5, 5029.0], [94.6, 5029.0], [94.7, 5029.0], [94.8, 5029.0], [94.9, 5029.0], [95.0, 5101.0], [95.1, 5101.0], [95.2, 5101.0], [95.3, 5101.0], [95.4, 5101.0], [95.5, 5101.0], [95.6, 5101.0], [95.7, 5101.0], [95.8, 5101.0], [95.9, 5101.0], [96.0, 5111.0], [96.1, 5111.0], [96.2, 5111.0], [96.3, 5111.0], [96.4, 5111.0], [96.5, 5111.0], [96.6, 5111.0], [96.7, 5111.0], [96.8, 5111.0], [96.9, 5111.0], [97.0, 5245.0], [97.1, 5245.0], [97.2, 5245.0], [97.3, 5245.0], [97.4, 5245.0], [97.5, 5245.0], [97.6, 5245.0], [97.7, 5245.0], [97.8, 5245.0], [97.9, 5245.0], [98.0, 5381.0], [98.1, 5381.0], [98.2, 5381.0], [98.3, 5381.0], [98.4, 5381.0], [98.5, 5381.0], [98.6, 5381.0], [98.7, 5381.0], [98.8, 5381.0], [98.9, 5381.0], [99.0, 5766.0], [99.1, 5766.0], [99.2, 5766.0], [99.3, 5766.0], [99.4, 5766.0], [99.5, 5766.0], [99.6, 5766.0], [99.7, 5766.0], [99.8, 5766.0], [99.9, 5766.0]], "isOverall": false, "label": "Item Details", "isController": false}, {"data": [[0.0, 2038.0], [0.1, 2038.0], [0.2, 2038.0], [0.3, 2038.0], [0.4, 2038.0], [0.5, 2038.0], [0.6, 2038.0], [0.7, 2038.0], [0.8, 2038.0], [0.9, 2038.0], [1.0, 2076.0], [1.1, 2076.0], [1.2, 2076.0], [1.3, 2076.0], [1.4, 2076.0], [1.5, 2076.0], [1.6, 2076.0], [1.7, 2076.0], [1.8, 2076.0], [1.9, 2076.0], [2.0, 2124.0], [2.1, 2124.0], [2.2, 2124.0], [2.3, 2124.0], [2.4, 2124.0], [2.5, 2124.0], [2.6, 2124.0], [2.7, 2124.0], [2.8, 2124.0], [2.9, 2124.0], [3.0, 2181.0], [3.1, 2181.0], [3.2, 2181.0], [3.3, 2181.0], [3.4, 2181.0], [3.5, 2181.0], [3.6, 2181.0], [3.7, 2181.0], [3.8, 2181.0], [3.9, 2181.0], [4.0, 2186.0], [4.1, 2186.0], [4.2, 2186.0], [4.3, 2186.0], [4.4, 2186.0], [4.5, 2186.0], [4.6, 2186.0], [4.7, 2186.0], [4.8, 2186.0], [4.9, 2186.0], [5.0, 2220.0], [5.1, 2220.0], [5.2, 2220.0], [5.3, 2220.0], [5.4, 2220.0], [5.5, 2220.0], [5.6, 2220.0], [5.7, 2220.0], [5.8, 2220.0], [5.9, 2220.0], [6.0, 2235.0], [6.1, 2235.0], [6.2, 2235.0], [6.3, 2235.0], [6.4, 2235.0], [6.5, 2235.0], [6.6, 2235.0], [6.7, 2235.0], [6.8, 2235.0], [6.9, 2235.0], [7.0, 2269.0], [7.1, 2269.0], [7.2, 2269.0], [7.3, 2269.0], [7.4, 2269.0], [7.5, 2269.0], [7.6, 2269.0], [7.7, 2269.0], [7.8, 2269.0], [7.9, 2269.0], [8.0, 2307.0], [8.1, 2307.0], [8.2, 2307.0], [8.3, 2307.0], [8.4, 2307.0], [8.5, 2307.0], [8.6, 2307.0], [8.7, 2307.0], [8.8, 2307.0], [8.9, 2307.0], [9.0, 2384.0], [9.1, 2384.0], [9.2, 2384.0], [9.3, 2384.0], [9.4, 2384.0], [9.5, 2384.0], [9.6, 2384.0], [9.7, 2384.0], [9.8, 2384.0], [9.9, 2384.0], [10.0, 2423.0], [10.1, 2423.0], [10.2, 2423.0], [10.3, 2423.0], [10.4, 2423.0], [10.5, 2423.0], [10.6, 2423.0], [10.7, 2423.0], [10.8, 2423.0], [10.9, 2423.0], [11.0, 2547.0], [11.1, 2547.0], [11.2, 2547.0], [11.3, 2547.0], [11.4, 2547.0], [11.5, 2547.0], [11.6, 2547.0], [11.7, 2547.0], [11.8, 2547.0], [11.9, 2547.0], [12.0, 2555.0], [12.1, 2555.0], [12.2, 2555.0], [12.3, 2555.0], [12.4, 2555.0], [12.5, 2555.0], [12.6, 2555.0], [12.7, 2555.0], [12.8, 2555.0], [12.9, 2555.0], [13.0, 2573.0], [13.1, 2573.0], [13.2, 2573.0], [13.3, 2573.0], [13.4, 2573.0], [13.5, 2573.0], [13.6, 2573.0], [13.7, 2573.0], [13.8, 2573.0], [13.9, 2573.0], [14.0, 2576.0], [14.1, 2576.0], [14.2, 2576.0], [14.3, 2576.0], [14.4, 2576.0], [14.5, 2576.0], [14.6, 2576.0], [14.7, 2576.0], [14.8, 2576.0], [14.9, 2576.0], [15.0, 2580.0], [15.1, 2580.0], [15.2, 2580.0], [15.3, 2580.0], [15.4, 2580.0], [15.5, 2580.0], [15.6, 2580.0], [15.7, 2580.0], [15.8, 2580.0], [15.9, 2580.0], [16.0, 2637.0], [16.1, 2637.0], [16.2, 2637.0], [16.3, 2637.0], [16.4, 2637.0], [16.5, 2637.0], [16.6, 2637.0], [16.7, 2637.0], [16.8, 2637.0], [16.9, 2637.0], [17.0, 2649.0], [17.1, 2649.0], [17.2, 2649.0], [17.3, 2649.0], [17.4, 2649.0], [17.5, 2649.0], [17.6, 2649.0], [17.7, 2649.0], [17.8, 2649.0], [17.9, 2649.0], [18.0, 2680.0], [18.1, 2680.0], [18.2, 2680.0], [18.3, 2680.0], [18.4, 2680.0], [18.5, 2680.0], [18.6, 2680.0], [18.7, 2680.0], [18.8, 2680.0], [18.9, 2680.0], [19.0, 2694.0], [19.1, 2694.0], [19.2, 2694.0], [19.3, 2694.0], [19.4, 2694.0], [19.5, 2694.0], [19.6, 2694.0], [19.7, 2694.0], [19.8, 2694.0], [19.9, 2694.0], [20.0, 2716.0], [20.1, 2716.0], [20.2, 2716.0], [20.3, 2716.0], [20.4, 2716.0], [20.5, 2716.0], [20.6, 2716.0], [20.7, 2716.0], [20.8, 2716.0], [20.9, 2716.0], [21.0, 2719.0], [21.1, 2719.0], [21.2, 2719.0], [21.3, 2719.0], [21.4, 2719.0], [21.5, 2719.0], [21.6, 2719.0], [21.7, 2719.0], [21.8, 2719.0], [21.9, 2719.0], [22.0, 2729.0], [22.1, 2729.0], [22.2, 2729.0], [22.3, 2729.0], [22.4, 2729.0], [22.5, 2729.0], [22.6, 2729.0], [22.7, 2729.0], [22.8, 2729.0], [22.9, 2729.0], [23.0, 2732.0], [23.1, 2732.0], [23.2, 2732.0], [23.3, 2732.0], [23.4, 2732.0], [23.5, 2732.0], [23.6, 2732.0], [23.7, 2732.0], [23.8, 2732.0], [23.9, 2732.0], [24.0, 2755.0], [24.1, 2755.0], [24.2, 2755.0], [24.3, 2755.0], [24.4, 2755.0], [24.5, 2755.0], [24.6, 2755.0], [24.7, 2755.0], [24.8, 2755.0], [24.9, 2755.0], [25.0, 2764.0], [25.1, 2764.0], [25.2, 2764.0], [25.3, 2764.0], [25.4, 2764.0], [25.5, 2764.0], [25.6, 2764.0], [25.7, 2764.0], [25.8, 2764.0], [25.9, 2764.0], [26.0, 2765.0], [26.1, 2765.0], [26.2, 2765.0], [26.3, 2765.0], [26.4, 2765.0], [26.5, 2765.0], [26.6, 2765.0], [26.7, 2765.0], [26.8, 2765.0], [26.9, 2765.0], [27.0, 2781.0], [27.1, 2781.0], [27.2, 2781.0], [27.3, 2781.0], [27.4, 2781.0], [27.5, 2781.0], [27.6, 2781.0], [27.7, 2781.0], [27.8, 2781.0], [27.9, 2781.0], [28.0, 2794.0], [28.1, 2794.0], [28.2, 2794.0], [28.3, 2794.0], [28.4, 2794.0], [28.5, 2794.0], [28.6, 2794.0], [28.7, 2794.0], [28.8, 2794.0], [28.9, 2794.0], [29.0, 2808.0], [29.1, 2808.0], [29.2, 2808.0], [29.3, 2808.0], [29.4, 2808.0], [29.5, 2808.0], [29.6, 2808.0], [29.7, 2808.0], [29.8, 2808.0], [29.9, 2808.0], [30.0, 2816.0], [30.1, 2816.0], [30.2, 2816.0], [30.3, 2816.0], [30.4, 2816.0], [30.5, 2816.0], [30.6, 2816.0], [30.7, 2816.0], [30.8, 2816.0], [30.9, 2816.0], [31.0, 2827.0], [31.1, 2827.0], [31.2, 2827.0], [31.3, 2827.0], [31.4, 2827.0], [31.5, 2827.0], [31.6, 2827.0], [31.7, 2827.0], [31.8, 2827.0], [31.9, 2827.0], [32.0, 2836.0], [32.1, 2836.0], [32.2, 2836.0], [32.3, 2836.0], [32.4, 2836.0], [32.5, 2836.0], [32.6, 2836.0], [32.7, 2836.0], [32.8, 2836.0], [32.9, 2836.0], [33.0, 2858.0], [33.1, 2858.0], [33.2, 2858.0], [33.3, 2858.0], [33.4, 2858.0], [33.5, 2858.0], [33.6, 2858.0], [33.7, 2858.0], [33.8, 2858.0], [33.9, 2858.0], [34.0, 2861.0], [34.1, 2861.0], [34.2, 2861.0], [34.3, 2861.0], [34.4, 2861.0], [34.5, 2861.0], [34.6, 2861.0], [34.7, 2861.0], [34.8, 2861.0], [34.9, 2861.0], [35.0, 2889.0], [35.1, 2889.0], [35.2, 2889.0], [35.3, 2889.0], [35.4, 2889.0], [35.5, 2889.0], [35.6, 2889.0], [35.7, 2889.0], [35.8, 2889.0], [35.9, 2889.0], [36.0, 2904.0], [36.1, 2904.0], [36.2, 2904.0], [36.3, 2904.0], [36.4, 2904.0], [36.5, 2904.0], [36.6, 2904.0], [36.7, 2904.0], [36.8, 2904.0], [36.9, 2904.0], [37.0, 2911.0], [37.1, 2911.0], [37.2, 2911.0], [37.3, 2911.0], [37.4, 2911.0], [37.5, 2911.0], [37.6, 2911.0], [37.7, 2911.0], [37.8, 2911.0], [37.9, 2911.0], [38.0, 2921.0], [38.1, 2921.0], [38.2, 2921.0], [38.3, 2921.0], [38.4, 2921.0], [38.5, 2921.0], [38.6, 2921.0], [38.7, 2921.0], [38.8, 2921.0], [38.9, 2921.0], [39.0, 2930.0], [39.1, 2930.0], [39.2, 2930.0], [39.3, 2930.0], [39.4, 2930.0], [39.5, 2930.0], [39.6, 2930.0], [39.7, 2930.0], [39.8, 2930.0], [39.9, 2930.0], [40.0, 2951.0], [40.1, 2951.0], [40.2, 2951.0], [40.3, 2951.0], [40.4, 2951.0], [40.5, 2951.0], [40.6, 2951.0], [40.7, 2951.0], [40.8, 2951.0], [40.9, 2951.0], [41.0, 2961.0], [41.1, 2961.0], [41.2, 2961.0], [41.3, 2961.0], [41.4, 2961.0], [41.5, 2961.0], [41.6, 2961.0], [41.7, 2961.0], [41.8, 2961.0], [41.9, 2961.0], [42.0, 2969.0], [42.1, 2969.0], [42.2, 2969.0], [42.3, 2969.0], [42.4, 2969.0], [42.5, 2969.0], [42.6, 2969.0], [42.7, 2969.0], [42.8, 2969.0], [42.9, 2969.0], [43.0, 2981.0], [43.1, 2981.0], [43.2, 2981.0], [43.3, 2981.0], [43.4, 2981.0], [43.5, 2981.0], [43.6, 2981.0], [43.7, 2981.0], [43.8, 2981.0], [43.9, 2981.0], [44.0, 3004.0], [44.1, 3004.0], [44.2, 3004.0], [44.3, 3004.0], [44.4, 3004.0], [44.5, 3004.0], [44.6, 3004.0], [44.7, 3004.0], [44.8, 3004.0], [44.9, 3004.0], [45.0, 3008.0], [45.1, 3008.0], [45.2, 3008.0], [45.3, 3008.0], [45.4, 3008.0], [45.5, 3008.0], [45.6, 3008.0], [45.7, 3008.0], [45.8, 3008.0], [45.9, 3008.0], [46.0, 3015.0], [46.1, 3015.0], [46.2, 3015.0], [46.3, 3015.0], [46.4, 3015.0], [46.5, 3015.0], [46.6, 3015.0], [46.7, 3015.0], [46.8, 3015.0], [46.9, 3015.0], [47.0, 3024.0], [47.1, 3024.0], [47.2, 3024.0], [47.3, 3024.0], [47.4, 3024.0], [47.5, 3024.0], [47.6, 3024.0], [47.7, 3024.0], [47.8, 3024.0], [47.9, 3024.0], [48.0, 3079.0], [48.1, 3079.0], [48.2, 3079.0], [48.3, 3079.0], [48.4, 3079.0], [48.5, 3079.0], [48.6, 3079.0], [48.7, 3079.0], [48.8, 3079.0], [48.9, 3079.0], [49.0, 3109.0], [49.1, 3109.0], [49.2, 3109.0], [49.3, 3109.0], [49.4, 3109.0], [49.5, 3109.0], [49.6, 3109.0], [49.7, 3109.0], [49.8, 3109.0], [49.9, 3109.0], [50.0, 3124.0], [50.1, 3124.0], [50.2, 3124.0], [50.3, 3124.0], [50.4, 3124.0], [50.5, 3124.0], [50.6, 3124.0], [50.7, 3124.0], [50.8, 3124.0], [50.9, 3124.0], [51.0, 3125.0], [51.1, 3125.0], [51.2, 3125.0], [51.3, 3125.0], [51.4, 3125.0], [51.5, 3125.0], [51.6, 3125.0], [51.7, 3125.0], [51.8, 3125.0], [51.9, 3125.0], [52.0, 3150.0], [52.1, 3150.0], [52.2, 3150.0], [52.3, 3150.0], [52.4, 3150.0], [52.5, 3150.0], [52.6, 3150.0], [52.7, 3150.0], [52.8, 3150.0], [52.9, 3150.0], [53.0, 3171.0], [53.1, 3171.0], [53.2, 3171.0], [53.3, 3171.0], [53.4, 3171.0], [53.5, 3171.0], [53.6, 3171.0], [53.7, 3171.0], [53.8, 3171.0], [53.9, 3171.0], [54.0, 3183.0], [54.1, 3183.0], [54.2, 3183.0], [54.3, 3183.0], [54.4, 3183.0], [54.5, 3183.0], [54.6, 3183.0], [54.7, 3183.0], [54.8, 3183.0], [54.9, 3183.0], [55.0, 3193.0], [55.1, 3193.0], [55.2, 3193.0], [55.3, 3193.0], [55.4, 3193.0], [55.5, 3193.0], [55.6, 3193.0], [55.7, 3193.0], [55.8, 3193.0], [55.9, 3193.0], [56.0, 3197.0], [56.1, 3197.0], [56.2, 3197.0], [56.3, 3197.0], [56.4, 3197.0], [56.5, 3197.0], [56.6, 3197.0], [56.7, 3197.0], [56.8, 3197.0], [56.9, 3197.0], [57.0, 3204.0], [57.1, 3204.0], [57.2, 3204.0], [57.3, 3204.0], [57.4, 3204.0], [57.5, 3204.0], [57.6, 3204.0], [57.7, 3204.0], [57.8, 3204.0], [57.9, 3204.0], [58.0, 3213.0], [58.1, 3213.0], [58.2, 3213.0], [58.3, 3213.0], [58.4, 3213.0], [58.5, 3213.0], [58.6, 3213.0], [58.7, 3213.0], [58.8, 3213.0], [58.9, 3213.0], [59.0, 3275.0], [59.1, 3275.0], [59.2, 3275.0], [59.3, 3275.0], [59.4, 3275.0], [59.5, 3275.0], [59.6, 3275.0], [59.7, 3275.0], [59.8, 3275.0], [59.9, 3275.0], [60.0, 3286.0], [60.1, 3286.0], [60.2, 3286.0], [60.3, 3286.0], [60.4, 3286.0], [60.5, 3286.0], [60.6, 3286.0], [60.7, 3286.0], [60.8, 3286.0], [60.9, 3286.0], [61.0, 3330.0], [61.1, 3330.0], [61.2, 3330.0], [61.3, 3330.0], [61.4, 3330.0], [61.5, 3330.0], [61.6, 3330.0], [61.7, 3330.0], [61.8, 3330.0], [61.9, 3330.0], [62.0, 3335.0], [62.1, 3335.0], [62.2, 3335.0], [62.3, 3335.0], [62.4, 3335.0], [62.5, 3335.0], [62.6, 3335.0], [62.7, 3335.0], [62.8, 3335.0], [62.9, 3335.0], [63.0, 3343.0], [63.1, 3343.0], [63.2, 3343.0], [63.3, 3343.0], [63.4, 3343.0], [63.5, 3343.0], [63.6, 3343.0], [63.7, 3343.0], [63.8, 3343.0], [63.9, 3343.0], [64.0, 3354.0], [64.1, 3354.0], [64.2, 3354.0], [64.3, 3354.0], [64.4, 3354.0], [64.5, 3354.0], [64.6, 3354.0], [64.7, 3354.0], [64.8, 3354.0], [64.9, 3354.0], [65.0, 3365.0], [65.1, 3365.0], [65.2, 3365.0], [65.3, 3365.0], [65.4, 3365.0], [65.5, 3365.0], [65.6, 3365.0], [65.7, 3365.0], [65.8, 3365.0], [65.9, 3365.0], [66.0, 3392.0], [66.1, 3392.0], [66.2, 3392.0], [66.3, 3392.0], [66.4, 3392.0], [66.5, 3392.0], [66.6, 3392.0], [66.7, 3392.0], [66.8, 3392.0], [66.9, 3392.0], [67.0, 3395.0], [67.1, 3395.0], [67.2, 3395.0], [67.3, 3395.0], [67.4, 3395.0], [67.5, 3395.0], [67.6, 3395.0], [67.7, 3395.0], [67.8, 3395.0], [67.9, 3395.0], [68.0, 3402.0], [68.1, 3402.0], [68.2, 3402.0], [68.3, 3402.0], [68.4, 3402.0], [68.5, 3402.0], [68.6, 3402.0], [68.7, 3402.0], [68.8, 3402.0], [68.9, 3402.0], [69.0, 3407.0], [69.1, 3407.0], [69.2, 3407.0], [69.3, 3407.0], [69.4, 3407.0], [69.5, 3407.0], [69.6, 3407.0], [69.7, 3407.0], [69.8, 3407.0], [69.9, 3407.0], [70.0, 3533.0], [70.1, 3533.0], [70.2, 3533.0], [70.3, 3533.0], [70.4, 3533.0], [70.5, 3533.0], [70.6, 3533.0], [70.7, 3533.0], [70.8, 3533.0], [70.9, 3533.0], [71.0, 3560.0], [71.1, 3560.0], [71.2, 3560.0], [71.3, 3560.0], [71.4, 3560.0], [71.5, 3560.0], [71.6, 3560.0], [71.7, 3560.0], [71.8, 3560.0], [71.9, 3560.0], [72.0, 3646.0], [72.1, 3646.0], [72.2, 3646.0], [72.3, 3646.0], [72.4, 3646.0], [72.5, 3646.0], [72.6, 3646.0], [72.7, 3646.0], [72.8, 3646.0], [72.9, 3646.0], [73.0, 3653.0], [73.1, 3653.0], [73.2, 3653.0], [73.3, 3653.0], [73.4, 3653.0], [73.5, 3653.0], [73.6, 3653.0], [73.7, 3653.0], [73.8, 3653.0], [73.9, 3653.0], [74.0, 3681.0], [74.1, 3681.0], [74.2, 3681.0], [74.3, 3681.0], [74.4, 3681.0], [74.5, 3681.0], [74.6, 3681.0], [74.7, 3681.0], [74.8, 3681.0], [74.9, 3681.0], [75.0, 3699.0], [75.1, 3699.0], [75.2, 3699.0], [75.3, 3699.0], [75.4, 3699.0], [75.5, 3699.0], [75.6, 3699.0], [75.7, 3699.0], [75.8, 3699.0], [75.9, 3699.0], [76.0, 3713.0], [76.1, 3713.0], [76.2, 3713.0], [76.3, 3713.0], [76.4, 3713.0], [76.5, 3713.0], [76.6, 3713.0], [76.7, 3713.0], [76.8, 3713.0], [76.9, 3713.0], [77.0, 3718.0], [77.1, 3718.0], [77.2, 3718.0], [77.3, 3718.0], [77.4, 3718.0], [77.5, 3718.0], [77.6, 3718.0], [77.7, 3718.0], [77.8, 3718.0], [77.9, 3718.0], [78.0, 3793.0], [78.1, 3793.0], [78.2, 3793.0], [78.3, 3793.0], [78.4, 3793.0], [78.5, 3793.0], [78.6, 3793.0], [78.7, 3793.0], [78.8, 3793.0], [78.9, 3793.0], [79.0, 3857.0], [79.1, 3857.0], [79.2, 3857.0], [79.3, 3857.0], [79.4, 3857.0], [79.5, 3857.0], [79.6, 3857.0], [79.7, 3857.0], [79.8, 3857.0], [79.9, 3857.0], [80.0, 3929.0], [80.1, 3929.0], [80.2, 3929.0], [80.3, 3929.0], [80.4, 3929.0], [80.5, 3929.0], [80.6, 3929.0], [80.7, 3929.0], [80.8, 3929.0], [80.9, 3929.0], [81.0, 3939.0], [81.1, 3939.0], [81.2, 3939.0], [81.3, 3939.0], [81.4, 3939.0], [81.5, 3939.0], [81.6, 3939.0], [81.7, 3939.0], [81.8, 3939.0], [81.9, 3939.0], [82.0, 4057.0], [82.1, 4057.0], [82.2, 4057.0], [82.3, 4057.0], [82.4, 4057.0], [82.5, 4057.0], [82.6, 4057.0], [82.7, 4057.0], [82.8, 4057.0], [82.9, 4057.0], [83.0, 4257.0], [83.1, 4257.0], [83.2, 4257.0], [83.3, 4257.0], [83.4, 4257.0], [83.5, 4257.0], [83.6, 4257.0], [83.7, 4257.0], [83.8, 4257.0], [83.9, 4257.0], [84.0, 4277.0], [84.1, 4277.0], [84.2, 4277.0], [84.3, 4277.0], [84.4, 4277.0], [84.5, 4277.0], [84.6, 4277.0], [84.7, 4277.0], [84.8, 4277.0], [84.9, 4277.0], [85.0, 4304.0], [85.1, 4304.0], [85.2, 4304.0], [85.3, 4304.0], [85.4, 4304.0], [85.5, 4304.0], [85.6, 4304.0], [85.7, 4304.0], [85.8, 4304.0], [85.9, 4304.0], [86.0, 4333.0], [86.1, 4333.0], [86.2, 4333.0], [86.3, 4333.0], [86.4, 4333.0], [86.5, 4333.0], [86.6, 4333.0], [86.7, 4333.0], [86.8, 4333.0], [86.9, 4333.0], [87.0, 4384.0], [87.1, 4384.0], [87.2, 4384.0], [87.3, 4384.0], [87.4, 4384.0], [87.5, 4384.0], [87.6, 4384.0], [87.7, 4384.0], [87.8, 4384.0], [87.9, 4384.0], [88.0, 4425.0], [88.1, 4425.0], [88.2, 4425.0], [88.3, 4425.0], [88.4, 4425.0], [88.5, 4425.0], [88.6, 4425.0], [88.7, 4425.0], [88.8, 4425.0], [88.9, 4425.0], [89.0, 4599.0], [89.1, 4599.0], [89.2, 4599.0], [89.3, 4599.0], [89.4, 4599.0], [89.5, 4599.0], [89.6, 4599.0], [89.7, 4599.0], [89.8, 4599.0], [89.9, 4599.0], [90.0, 4729.0], [90.1, 4729.0], [90.2, 4729.0], [90.3, 4729.0], [90.4, 4729.0], [90.5, 4729.0], [90.6, 4729.0], [90.7, 4729.0], [90.8, 4729.0], [90.9, 4729.0], [91.0, 4784.0], [91.1, 4784.0], [91.2, 4784.0], [91.3, 4784.0], [91.4, 4784.0], [91.5, 4784.0], [91.6, 4784.0], [91.7, 4784.0], [91.8, 4784.0], [91.9, 4784.0], [92.0, 5136.0], [92.1, 5136.0], [92.2, 5136.0], [92.3, 5136.0], [92.4, 5136.0], [92.5, 5136.0], [92.6, 5136.0], [92.7, 5136.0], [92.8, 5136.0], [92.9, 5136.0], [93.0, 5167.0], [93.1, 5167.0], [93.2, 5167.0], [93.3, 5167.0], [93.4, 5167.0], [93.5, 5167.0], [93.6, 5167.0], [93.7, 5167.0], [93.8, 5167.0], [93.9, 5167.0], [94.0, 5293.0], [94.1, 5293.0], [94.2, 5293.0], [94.3, 5293.0], [94.4, 5293.0], [94.5, 5293.0], [94.6, 5293.0], [94.7, 5293.0], [94.8, 5293.0], [94.9, 5293.0], [95.0, 5539.0], [95.1, 5539.0], [95.2, 5539.0], [95.3, 5539.0], [95.4, 5539.0], [95.5, 5539.0], [95.6, 5539.0], [95.7, 5539.0], [95.8, 5539.0], [95.9, 5539.0], [96.0, 5661.0], [96.1, 5661.0], [96.2, 5661.0], [96.3, 5661.0], [96.4, 5661.0], [96.5, 5661.0], [96.6, 5661.0], [96.7, 5661.0], [96.8, 5661.0], [96.9, 5661.0], [97.0, 5699.0], [97.1, 5699.0], [97.2, 5699.0], [97.3, 5699.0], [97.4, 5699.0], [97.5, 5699.0], [97.6, 5699.0], [97.7, 5699.0], [97.8, 5699.0], [97.9, 5699.0], [98.0, 5719.0], [98.1, 5719.0], [98.2, 5719.0], [98.3, 5719.0], [98.4, 5719.0], [98.5, 5719.0], [98.6, 5719.0], [98.7, 5719.0], [98.8, 5719.0], [98.9, 5719.0], [99.0, 5729.0], [99.1, 5729.0], [99.2, 5729.0], [99.3, 5729.0], [99.4, 5729.0], [99.5, 5729.0], [99.6, 5729.0], [99.7, 5729.0], [99.8, 5729.0], [99.9, 5729.0]], "isOverall": false, "label": "View Items", "isController": false}, {"data": [[0.0, 2191.0], [0.1, 2191.0], [0.2, 2191.0], [0.3, 2191.0], [0.4, 2191.0], [0.5, 2191.0], [0.6, 2191.0], [0.7, 2191.0], [0.8, 2191.0], [0.9, 2191.0], [1.0, 2228.0], [1.1, 2228.0], [1.2, 2228.0], [1.3, 2228.0], [1.4, 2228.0], [1.5, 2228.0], [1.6, 2228.0], [1.7, 2228.0], [1.8, 2228.0], [1.9, 2228.0], [2.0, 2245.0], [2.1, 2245.0], [2.2, 2245.0], [2.3, 2245.0], [2.4, 2245.0], [2.5, 2245.0], [2.6, 2245.0], [2.7, 2245.0], [2.8, 2245.0], [2.9, 2245.0], [3.0, 2254.0], [3.1, 2254.0], [3.2, 2254.0], [3.3, 2254.0], [3.4, 2254.0], [3.5, 2254.0], [3.6, 2254.0], [3.7, 2254.0], [3.8, 2254.0], [3.9, 2254.0], [4.0, 2255.0], [4.1, 2255.0], [4.2, 2255.0], [4.3, 2255.0], [4.4, 2255.0], [4.5, 2255.0], [4.6, 2255.0], [4.7, 2255.0], [4.8, 2255.0], [4.9, 2255.0], [5.0, 2261.0], [5.1, 2261.0], [5.2, 2261.0], [5.3, 2261.0], [5.4, 2261.0], [5.5, 2261.0], [5.6, 2261.0], [5.7, 2261.0], [5.8, 2261.0], [5.9, 2261.0], [6.0, 2263.0], [6.1, 2263.0], [6.2, 2263.0], [6.3, 2263.0], [6.4, 2263.0], [6.5, 2263.0], [6.6, 2263.0], [6.7, 2263.0], [6.8, 2263.0], [6.9, 2263.0], [7.0, 2263.0], [7.1, 2263.0], [7.2, 2263.0], [7.3, 2263.0], [7.4, 2263.0], [7.5, 2263.0], [7.6, 2263.0], [7.7, 2263.0], [7.8, 2263.0], [7.9, 2263.0], [8.0, 2264.0], [8.1, 2264.0], [8.2, 2264.0], [8.3, 2264.0], [8.4, 2264.0], [8.5, 2264.0], [8.6, 2264.0], [8.7, 2264.0], [8.8, 2264.0], [8.9, 2264.0], [9.0, 2269.0], [9.1, 2269.0], [9.2, 2269.0], [9.3, 2269.0], [9.4, 2269.0], [9.5, 2269.0], [9.6, 2269.0], [9.7, 2269.0], [9.8, 2269.0], [9.9, 2269.0], [10.0, 2270.0], [10.1, 2270.0], [10.2, 2270.0], [10.3, 2270.0], [10.4, 2270.0], [10.5, 2270.0], [10.6, 2270.0], [10.7, 2270.0], [10.8, 2270.0], [10.9, 2270.0], [11.0, 2273.0], [11.1, 2273.0], [11.2, 2273.0], [11.3, 2273.0], [11.4, 2273.0], [11.5, 2273.0], [11.6, 2273.0], [11.7, 2273.0], [11.8, 2273.0], [11.9, 2273.0], [12.0, 2277.0], [12.1, 2277.0], [12.2, 2277.0], [12.3, 2277.0], [12.4, 2277.0], [12.5, 2277.0], [12.6, 2277.0], [12.7, 2277.0], [12.8, 2277.0], [12.9, 2277.0], [13.0, 2279.0], [13.1, 2279.0], [13.2, 2279.0], [13.3, 2279.0], [13.4, 2279.0], [13.5, 2279.0], [13.6, 2279.0], [13.7, 2279.0], [13.8, 2279.0], [13.9, 2279.0], [14.0, 2284.0], [14.1, 2284.0], [14.2, 2284.0], [14.3, 2284.0], [14.4, 2284.0], [14.5, 2284.0], [14.6, 2284.0], [14.7, 2284.0], [14.8, 2284.0], [14.9, 2284.0], [15.0, 2284.0], [15.1, 2284.0], [15.2, 2284.0], [15.3, 2284.0], [15.4, 2284.0], [15.5, 2284.0], [15.6, 2284.0], [15.7, 2284.0], [15.8, 2284.0], [15.9, 2284.0], [16.0, 2286.0], [16.1, 2286.0], [16.2, 2286.0], [16.3, 2286.0], [16.4, 2286.0], [16.5, 2286.0], [16.6, 2286.0], [16.7, 2286.0], [16.8, 2286.0], [16.9, 2286.0], [17.0, 2287.0], [17.1, 2287.0], [17.2, 2287.0], [17.3, 2287.0], [17.4, 2287.0], [17.5, 2287.0], [17.6, 2287.0], [17.7, 2287.0], [17.8, 2287.0], [17.9, 2287.0], [18.0, 2288.0], [18.1, 2288.0], [18.2, 2288.0], [18.3, 2288.0], [18.4, 2288.0], [18.5, 2288.0], [18.6, 2288.0], [18.7, 2288.0], [18.8, 2288.0], [18.9, 2288.0], [19.0, 2292.0], [19.1, 2292.0], [19.2, 2292.0], [19.3, 2292.0], [19.4, 2292.0], [19.5, 2292.0], [19.6, 2292.0], [19.7, 2292.0], [19.8, 2292.0], [19.9, 2292.0], [20.0, 2295.0], [20.1, 2295.0], [20.2, 2295.0], [20.3, 2295.0], [20.4, 2295.0], [20.5, 2295.0], [20.6, 2295.0], [20.7, 2295.0], [20.8, 2295.0], [20.9, 2295.0], [21.0, 2297.0], [21.1, 2297.0], [21.2, 2297.0], [21.3, 2297.0], [21.4, 2297.0], [21.5, 2297.0], [21.6, 2297.0], [21.7, 2297.0], [21.8, 2297.0], [21.9, 2297.0], [22.0, 2299.0], [22.1, 2299.0], [22.2, 2299.0], [22.3, 2299.0], [22.4, 2299.0], [22.5, 2299.0], [22.6, 2299.0], [22.7, 2299.0], [22.8, 2299.0], [22.9, 2299.0], [23.0, 2299.0], [23.1, 2299.0], [23.2, 2299.0], [23.3, 2299.0], [23.4, 2299.0], [23.5, 2299.0], [23.6, 2299.0], [23.7, 2299.0], [23.8, 2299.0], [23.9, 2299.0], [24.0, 2302.0], [24.1, 2302.0], [24.2, 2302.0], [24.3, 2302.0], [24.4, 2302.0], [24.5, 2302.0], [24.6, 2302.0], [24.7, 2302.0], [24.8, 2302.0], [24.9, 2302.0], [25.0, 2302.0], [25.1, 2302.0], [25.2, 2302.0], [25.3, 2302.0], [25.4, 2302.0], [25.5, 2302.0], [25.6, 2302.0], [25.7, 2302.0], [25.8, 2302.0], [25.9, 2302.0], [26.0, 2305.0], [26.1, 2305.0], [26.2, 2305.0], [26.3, 2305.0], [26.4, 2305.0], [26.5, 2305.0], [26.6, 2305.0], [26.7, 2305.0], [26.8, 2305.0], [26.9, 2305.0], [27.0, 2306.0], [27.1, 2306.0], [27.2, 2306.0], [27.3, 2306.0], [27.4, 2306.0], [27.5, 2306.0], [27.6, 2306.0], [27.7, 2306.0], [27.8, 2306.0], [27.9, 2306.0], [28.0, 2308.0], [28.1, 2308.0], [28.2, 2308.0], [28.3, 2308.0], [28.4, 2308.0], [28.5, 2308.0], [28.6, 2308.0], [28.7, 2308.0], [28.8, 2308.0], [28.9, 2308.0], [29.0, 2310.0], [29.1, 2310.0], [29.2, 2310.0], [29.3, 2310.0], [29.4, 2310.0], [29.5, 2310.0], [29.6, 2310.0], [29.7, 2310.0], [29.8, 2310.0], [29.9, 2310.0], [30.0, 2325.0], [30.1, 2325.0], [30.2, 2325.0], [30.3, 2325.0], [30.4, 2325.0], [30.5, 2325.0], [30.6, 2325.0], [30.7, 2325.0], [30.8, 2325.0], [30.9, 2325.0], [31.0, 2326.0], [31.1, 2326.0], [31.2, 2326.0], [31.3, 2326.0], [31.4, 2326.0], [31.5, 2326.0], [31.6, 2326.0], [31.7, 2326.0], [31.8, 2326.0], [31.9, 2326.0], [32.0, 2332.0], [32.1, 2332.0], [32.2, 2332.0], [32.3, 2332.0], [32.4, 2332.0], [32.5, 2332.0], [32.6, 2332.0], [32.7, 2332.0], [32.8, 2332.0], [32.9, 2332.0], [33.0, 2333.0], [33.1, 2333.0], [33.2, 2333.0], [33.3, 2333.0], [33.4, 2333.0], [33.5, 2333.0], [33.6, 2333.0], [33.7, 2333.0], [33.8, 2333.0], [33.9, 2333.0], [34.0, 2334.0], [34.1, 2334.0], [34.2, 2334.0], [34.3, 2334.0], [34.4, 2334.0], [34.5, 2334.0], [34.6, 2334.0], [34.7, 2334.0], [34.8, 2334.0], [34.9, 2334.0], [35.0, 2336.0], [35.1, 2336.0], [35.2, 2336.0], [35.3, 2336.0], [35.4, 2336.0], [35.5, 2336.0], [35.6, 2336.0], [35.7, 2336.0], [35.8, 2336.0], [35.9, 2336.0], [36.0, 2336.0], [36.1, 2336.0], [36.2, 2336.0], [36.3, 2336.0], [36.4, 2336.0], [36.5, 2336.0], [36.6, 2336.0], [36.7, 2336.0], [36.8, 2336.0], [36.9, 2336.0], [37.0, 2336.0], [37.1, 2336.0], [37.2, 2336.0], [37.3, 2336.0], [37.4, 2336.0], [37.5, 2336.0], [37.6, 2336.0], [37.7, 2336.0], [37.8, 2336.0], [37.9, 2336.0], [38.0, 2338.0], [38.1, 2338.0], [38.2, 2338.0], [38.3, 2338.0], [38.4, 2338.0], [38.5, 2338.0], [38.6, 2338.0], [38.7, 2338.0], [38.8, 2338.0], [38.9, 2338.0], [39.0, 2340.0], [39.1, 2340.0], [39.2, 2340.0], [39.3, 2340.0], [39.4, 2340.0], [39.5, 2340.0], [39.6, 2340.0], [39.7, 2340.0], [39.8, 2340.0], [39.9, 2340.0], [40.0, 2344.0], [40.1, 2344.0], [40.2, 2344.0], [40.3, 2344.0], [40.4, 2344.0], [40.5, 2344.0], [40.6, 2344.0], [40.7, 2344.0], [40.8, 2344.0], [40.9, 2344.0], [41.0, 2348.0], [41.1, 2348.0], [41.2, 2348.0], [41.3, 2348.0], [41.4, 2348.0], [41.5, 2348.0], [41.6, 2348.0], [41.7, 2348.0], [41.8, 2348.0], [41.9, 2348.0], [42.0, 2352.0], [42.1, 2352.0], [42.2, 2352.0], [42.3, 2352.0], [42.4, 2352.0], [42.5, 2352.0], [42.6, 2352.0], [42.7, 2352.0], [42.8, 2352.0], [42.9, 2352.0], [43.0, 2354.0], [43.1, 2354.0], [43.2, 2354.0], [43.3, 2354.0], [43.4, 2354.0], [43.5, 2354.0], [43.6, 2354.0], [43.7, 2354.0], [43.8, 2354.0], [43.9, 2354.0], [44.0, 2357.0], [44.1, 2357.0], [44.2, 2357.0], [44.3, 2357.0], [44.4, 2357.0], [44.5, 2357.0], [44.6, 2357.0], [44.7, 2357.0], [44.8, 2357.0], [44.9, 2357.0], [45.0, 2357.0], [45.1, 2357.0], [45.2, 2357.0], [45.3, 2357.0], [45.4, 2357.0], [45.5, 2357.0], [45.6, 2357.0], [45.7, 2357.0], [45.8, 2357.0], [45.9, 2357.0], [46.0, 2361.0], [46.1, 2361.0], [46.2, 2361.0], [46.3, 2361.0], [46.4, 2361.0], [46.5, 2361.0], [46.6, 2361.0], [46.7, 2361.0], [46.8, 2361.0], [46.9, 2361.0], [47.0, 2367.0], [47.1, 2367.0], [47.2, 2367.0], [47.3, 2367.0], [47.4, 2367.0], [47.5, 2367.0], [47.6, 2367.0], [47.7, 2367.0], [47.8, 2367.0], [47.9, 2367.0], [48.0, 2370.0], [48.1, 2370.0], [48.2, 2370.0], [48.3, 2370.0], [48.4, 2370.0], [48.5, 2370.0], [48.6, 2370.0], [48.7, 2370.0], [48.8, 2370.0], [48.9, 2370.0], [49.0, 2376.0], [49.1, 2376.0], [49.2, 2376.0], [49.3, 2376.0], [49.4, 2376.0], [49.5, 2376.0], [49.6, 2376.0], [49.7, 2376.0], [49.8, 2376.0], [49.9, 2376.0], [50.0, 2378.0], [50.1, 2378.0], [50.2, 2378.0], [50.3, 2378.0], [50.4, 2378.0], [50.5, 2378.0], [50.6, 2378.0], [50.7, 2378.0], [50.8, 2378.0], [50.9, 2378.0], [51.0, 2382.0], [51.1, 2382.0], [51.2, 2382.0], [51.3, 2382.0], [51.4, 2382.0], [51.5, 2382.0], [51.6, 2382.0], [51.7, 2382.0], [51.8, 2382.0], [51.9, 2382.0], [52.0, 2382.0], [52.1, 2382.0], [52.2, 2382.0], [52.3, 2382.0], [52.4, 2382.0], [52.5, 2382.0], [52.6, 2382.0], [52.7, 2382.0], [52.8, 2382.0], [52.9, 2382.0], [53.0, 2383.0], [53.1, 2383.0], [53.2, 2383.0], [53.3, 2383.0], [53.4, 2383.0], [53.5, 2383.0], [53.6, 2383.0], [53.7, 2383.0], [53.8, 2383.0], [53.9, 2383.0], [54.0, 2386.0], [54.1, 2386.0], [54.2, 2386.0], [54.3, 2386.0], [54.4, 2386.0], [54.5, 2386.0], [54.6, 2386.0], [54.7, 2386.0], [54.8, 2386.0], [54.9, 2386.0], [55.0, 2396.0], [55.1, 2396.0], [55.2, 2396.0], [55.3, 2396.0], [55.4, 2396.0], [55.5, 2396.0], [55.6, 2396.0], [55.7, 2396.0], [55.8, 2396.0], [55.9, 2396.0], [56.0, 2397.0], [56.1, 2397.0], [56.2, 2397.0], [56.3, 2397.0], [56.4, 2397.0], [56.5, 2397.0], [56.6, 2397.0], [56.7, 2397.0], [56.8, 2397.0], [56.9, 2397.0], [57.0, 2406.0], [57.1, 2406.0], [57.2, 2406.0], [57.3, 2406.0], [57.4, 2406.0], [57.5, 2406.0], [57.6, 2406.0], [57.7, 2406.0], [57.8, 2406.0], [57.9, 2406.0], [58.0, 2410.0], [58.1, 2410.0], [58.2, 2410.0], [58.3, 2410.0], [58.4, 2410.0], [58.5, 2410.0], [58.6, 2410.0], [58.7, 2410.0], [58.8, 2410.0], [58.9, 2410.0], [59.0, 2415.0], [59.1, 2415.0], [59.2, 2415.0], [59.3, 2415.0], [59.4, 2415.0], [59.5, 2415.0], [59.6, 2415.0], [59.7, 2415.0], [59.8, 2415.0], [59.9, 2415.0], [60.0, 2427.0], [60.1, 2427.0], [60.2, 2427.0], [60.3, 2427.0], [60.4, 2427.0], [60.5, 2427.0], [60.6, 2427.0], [60.7, 2427.0], [60.8, 2427.0], [60.9, 2427.0], [61.0, 2427.0], [61.1, 2427.0], [61.2, 2427.0], [61.3, 2427.0], [61.4, 2427.0], [61.5, 2427.0], [61.6, 2427.0], [61.7, 2427.0], [61.8, 2427.0], [61.9, 2427.0], [62.0, 2434.0], [62.1, 2434.0], [62.2, 2434.0], [62.3, 2434.0], [62.4, 2434.0], [62.5, 2434.0], [62.6, 2434.0], [62.7, 2434.0], [62.8, 2434.0], [62.9, 2434.0], [63.0, 2436.0], [63.1, 2436.0], [63.2, 2436.0], [63.3, 2436.0], [63.4, 2436.0], [63.5, 2436.0], [63.6, 2436.0], [63.7, 2436.0], [63.8, 2436.0], [63.9, 2436.0], [64.0, 2438.0], [64.1, 2438.0], [64.2, 2438.0], [64.3, 2438.0], [64.4, 2438.0], [64.5, 2438.0], [64.6, 2438.0], [64.7, 2438.0], [64.8, 2438.0], [64.9, 2438.0], [65.0, 2459.0], [65.1, 2459.0], [65.2, 2459.0], [65.3, 2459.0], [65.4, 2459.0], [65.5, 2459.0], [65.6, 2459.0], [65.7, 2459.0], [65.8, 2459.0], [65.9, 2459.0], [66.0, 2467.0], [66.1, 2467.0], [66.2, 2467.0], [66.3, 2467.0], [66.4, 2467.0], [66.5, 2467.0], [66.6, 2467.0], [66.7, 2467.0], [66.8, 2467.0], [66.9, 2467.0], [67.0, 2468.0], [67.1, 2468.0], [67.2, 2468.0], [67.3, 2468.0], [67.4, 2468.0], [67.5, 2468.0], [67.6, 2468.0], [67.7, 2468.0], [67.8, 2468.0], [67.9, 2468.0], [68.0, 2471.0], [68.1, 2471.0], [68.2, 2471.0], [68.3, 2471.0], [68.4, 2471.0], [68.5, 2471.0], [68.6, 2471.0], [68.7, 2471.0], [68.8, 2471.0], [68.9, 2471.0], [69.0, 2472.0], [69.1, 2472.0], [69.2, 2472.0], [69.3, 2472.0], [69.4, 2472.0], [69.5, 2472.0], [69.6, 2472.0], [69.7, 2472.0], [69.8, 2472.0], [69.9, 2472.0], [70.0, 2476.0], [70.1, 2476.0], [70.2, 2476.0], [70.3, 2476.0], [70.4, 2476.0], [70.5, 2476.0], [70.6, 2476.0], [70.7, 2476.0], [70.8, 2476.0], [70.9, 2476.0], [71.0, 2480.0], [71.1, 2480.0], [71.2, 2480.0], [71.3, 2480.0], [71.4, 2480.0], [71.5, 2480.0], [71.6, 2480.0], [71.7, 2480.0], [71.8, 2480.0], [71.9, 2480.0], [72.0, 2480.0], [72.1, 2480.0], [72.2, 2480.0], [72.3, 2480.0], [72.4, 2480.0], [72.5, 2480.0], [72.6, 2480.0], [72.7, 2480.0], [72.8, 2480.0], [72.9, 2480.0], [73.0, 2486.0], [73.1, 2486.0], [73.2, 2486.0], [73.3, 2486.0], [73.4, 2486.0], [73.5, 2486.0], [73.6, 2486.0], [73.7, 2486.0], [73.8, 2486.0], [73.9, 2486.0], [74.0, 2497.0], [74.1, 2497.0], [74.2, 2497.0], [74.3, 2497.0], [74.4, 2497.0], [74.5, 2497.0], [74.6, 2497.0], [74.7, 2497.0], [74.8, 2497.0], [74.9, 2497.0], [75.0, 2497.0], [75.1, 2497.0], [75.2, 2497.0], [75.3, 2497.0], [75.4, 2497.0], [75.5, 2497.0], [75.6, 2497.0], [75.7, 2497.0], [75.8, 2497.0], [75.9, 2497.0], [76.0, 2501.0], [76.1, 2501.0], [76.2, 2501.0], [76.3, 2501.0], [76.4, 2501.0], [76.5, 2501.0], [76.6, 2501.0], [76.7, 2501.0], [76.8, 2501.0], [76.9, 2501.0], [77.0, 2506.0], [77.1, 2506.0], [77.2, 2506.0], [77.3, 2506.0], [77.4, 2506.0], [77.5, 2506.0], [77.6, 2506.0], [77.7, 2506.0], [77.8, 2506.0], [77.9, 2506.0], [78.0, 2518.0], [78.1, 2518.0], [78.2, 2518.0], [78.3, 2518.0], [78.4, 2518.0], [78.5, 2518.0], [78.6, 2518.0], [78.7, 2518.0], [78.8, 2518.0], [78.9, 2518.0], [79.0, 2536.0], [79.1, 2536.0], [79.2, 2536.0], [79.3, 2536.0], [79.4, 2536.0], [79.5, 2536.0], [79.6, 2536.0], [79.7, 2536.0], [79.8, 2536.0], [79.9, 2536.0], [80.0, 2553.0], [80.1, 2553.0], [80.2, 2553.0], [80.3, 2553.0], [80.4, 2553.0], [80.5, 2553.0], [80.6, 2553.0], [80.7, 2553.0], [80.8, 2553.0], [80.9, 2553.0], [81.0, 2559.0], [81.1, 2559.0], [81.2, 2559.0], [81.3, 2559.0], [81.4, 2559.0], [81.5, 2559.0], [81.6, 2559.0], [81.7, 2559.0], [81.8, 2559.0], [81.9, 2559.0], [82.0, 2560.0], [82.1, 2560.0], [82.2, 2560.0], [82.3, 2560.0], [82.4, 2560.0], [82.5, 2560.0], [82.6, 2560.0], [82.7, 2560.0], [82.8, 2560.0], [82.9, 2560.0], [83.0, 2570.0], [83.1, 2570.0], [83.2, 2570.0], [83.3, 2570.0], [83.4, 2570.0], [83.5, 2570.0], [83.6, 2570.0], [83.7, 2570.0], [83.8, 2570.0], [83.9, 2570.0], [84.0, 2571.0], [84.1, 2571.0], [84.2, 2571.0], [84.3, 2571.0], [84.4, 2571.0], [84.5, 2571.0], [84.6, 2571.0], [84.7, 2571.0], [84.8, 2571.0], [84.9, 2571.0], [85.0, 2576.0], [85.1, 2576.0], [85.2, 2576.0], [85.3, 2576.0], [85.4, 2576.0], [85.5, 2576.0], [85.6, 2576.0], [85.7, 2576.0], [85.8, 2576.0], [85.9, 2576.0], [86.0, 2587.0], [86.1, 2587.0], [86.2, 2587.0], [86.3, 2587.0], [86.4, 2587.0], [86.5, 2587.0], [86.6, 2587.0], [86.7, 2587.0], [86.8, 2587.0], [86.9, 2587.0], [87.0, 2652.0], [87.1, 2652.0], [87.2, 2652.0], [87.3, 2652.0], [87.4, 2652.0], [87.5, 2652.0], [87.6, 2652.0], [87.7, 2652.0], [87.8, 2652.0], [87.9, 2652.0], [88.0, 2663.0], [88.1, 2663.0], [88.2, 2663.0], [88.3, 2663.0], [88.4, 2663.0], [88.5, 2663.0], [88.6, 2663.0], [88.7, 2663.0], [88.8, 2663.0], [88.9, 2663.0], [89.0, 2699.0], [89.1, 2699.0], [89.2, 2699.0], [89.3, 2699.0], [89.4, 2699.0], [89.5, 2699.0], [89.6, 2699.0], [89.7, 2699.0], [89.8, 2699.0], [89.9, 2699.0], [90.0, 2723.0], [90.1, 2723.0], [90.2, 2723.0], [90.3, 2723.0], [90.4, 2723.0], [90.5, 2723.0], [90.6, 2723.0], [90.7, 2723.0], [90.8, 2723.0], [90.9, 2723.0], [91.0, 2727.0], [91.1, 2727.0], [91.2, 2727.0], [91.3, 2727.0], [91.4, 2727.0], [91.5, 2727.0], [91.6, 2727.0], [91.7, 2727.0], [91.8, 2727.0], [91.9, 2727.0], [92.0, 2750.0], [92.1, 2750.0], [92.2, 2750.0], [92.3, 2750.0], [92.4, 2750.0], [92.5, 2750.0], [92.6, 2750.0], [92.7, 2750.0], [92.8, 2750.0], [92.9, 2750.0], [93.0, 2755.0], [93.1, 2755.0], [93.2, 2755.0], [93.3, 2755.0], [93.4, 2755.0], [93.5, 2755.0], [93.6, 2755.0], [93.7, 2755.0], [93.8, 2755.0], [93.9, 2755.0], [94.0, 2862.0], [94.1, 2862.0], [94.2, 2862.0], [94.3, 2862.0], [94.4, 2862.0], [94.5, 2862.0], [94.6, 2862.0], [94.7, 2862.0], [94.8, 2862.0], [94.9, 2862.0], [95.0, 2875.0], [95.1, 2875.0], [95.2, 2875.0], [95.3, 2875.0], [95.4, 2875.0], [95.5, 2875.0], [95.6, 2875.0], [95.7, 2875.0], [95.8, 2875.0], [95.9, 2875.0], [96.0, 2951.0], [96.1, 2951.0], [96.2, 2951.0], [96.3, 2951.0], [96.4, 2951.0], [96.5, 2951.0], [96.6, 2951.0], [96.7, 2951.0], [96.8, 2951.0], [96.9, 2951.0], [97.0, 2981.0], [97.1, 2981.0], [97.2, 2981.0], [97.3, 2981.0], [97.4, 2981.0], [97.5, 2981.0], [97.6, 2981.0], [97.7, 2981.0], [97.8, 2981.0], [97.9, 2981.0], [98.0, 3067.0], [98.1, 3067.0], [98.2, 3067.0], [98.3, 3067.0], [98.4, 3067.0], [98.5, 3067.0], [98.6, 3067.0], [98.7, 3067.0], [98.8, 3067.0], [98.9, 3067.0], [99.0, 3118.0], [99.1, 3118.0], [99.2, 3118.0], [99.3, 3118.0], [99.4, 3118.0], [99.5, 3118.0], [99.6, 3118.0], [99.7, 3118.0], [99.8, 3118.0], [99.9, 3118.0]], "isOverall": false, "label": "Compare Item", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 1800.0, "maxY": 33.0, "series": [{"data": [[2100.0, 12.0], [2200.0, 7.0], [2300.0, 4.0], [2400.0, 3.0], [2500.0, 3.0], [2600.0, 1.0], [2700.0, 3.0], [2800.0, 5.0], [2900.0, 3.0], [3000.0, 2.0], [3100.0, 1.0], [3700.0, 2.0], [3800.0, 1.0], [3900.0, 1.0], [4200.0, 1.0], [4500.0, 4.0], [4400.0, 1.0], [1800.0, 6.0], [1900.0, 26.0], [2000.0, 14.0]], "isOverall": false, "label": "Category Drill down", "isController": false}, {"data": [[3300.0, 3.0], [3400.0, 6.0], [3500.0, 7.0], [3700.0, 15.0], [3600.0, 15.0], [3800.0, 10.0], [3900.0, 9.0], [4000.0, 4.0], [4100.0, 9.0], [4200.0, 2.0], [4300.0, 3.0], [4500.0, 3.0], [4400.0, 1.0], [4600.0, 1.0], [4700.0, 3.0], [4800.0, 1.0], [4900.0, 2.0], [5100.0, 2.0], [5000.0, 1.0], [5200.0, 1.0], [5300.0, 1.0], [5700.0, 1.0]], "isOverall": false, "label": "Item Details", "isController": false}, {"data": [[2000.0, 2.0], [2100.0, 3.0], [2300.0, 2.0], [2200.0, 3.0], [2400.0, 1.0], [2500.0, 5.0], [2600.0, 4.0], [2700.0, 9.0], [2800.0, 7.0], [2900.0, 8.0], [3000.0, 5.0], [3100.0, 8.0], [3200.0, 4.0], [3300.0, 7.0], [3400.0, 2.0], [3500.0, 2.0], [3600.0, 4.0], [3700.0, 3.0], [3800.0, 1.0], [3900.0, 2.0], [4000.0, 1.0], [4300.0, 3.0], [4200.0, 2.0], [4500.0, 1.0], [4400.0, 1.0], [4700.0, 2.0], [5100.0, 2.0], [5200.0, 1.0], [5500.0, 1.0], [5600.0, 2.0], [5700.0, 2.0]], "isOverall": false, "label": "View Items", "isController": false}, {"data": [[2100.0, 1.0], [2200.0, 23.0], [2300.0, 33.0], [2400.0, 19.0], [2500.0, 11.0], [2600.0, 3.0], [2700.0, 4.0], [2800.0, 2.0], [2900.0, 2.0], [3000.0, 1.0], [3100.0, 1.0]], "isOverall": false, "label": "Compare Item", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 5700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 400.0, "minX": 2.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 400.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 400.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 43.355, "minX": 1.57312194E12, "maxY": 43.355, "series": [{"data": [[1.57312194E12, 43.355]], "isOverall": false, "label": "User_50-10", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57312194E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1853.0, "minX": 1.0, "maxY": 5337.2, "series": [{"data": [[32.0, 3172.0], [39.0, 4299.0], [40.0, 2886.0], [41.0, 4575.0], [42.0, 4501.0], [43.0, 3803.25], [44.0, 2948.333333333333], [45.0, 3271.75], [46.0, 1999.5], [47.0, 1909.0], [48.0, 1918.0], [49.0, 1853.0], [50.0, 2207.8666666666672], [15.0, 2620.75], [16.0, 2007.0], [17.0, 2199.0], [18.0, 1890.0], [19.0, 1912.0], [20.0, 1941.0], [21.0, 1922.0], [22.0, 1922.0], [23.0, 1945.0], [24.0, 1951.0], [25.0, 1899.0]], "isOverall": false, "label": "Category Drill down", "isController": false}, {"data": [[43.44999999999998, 2420.43]], "isOverall": false, "label": "Category Drill down-Aggregated", "isController": false}, {"data": [[33.0, 3696.0], [35.0, 3668.0], [39.0, 3803.3333333333335], [38.0, 3717.5], [41.0, 3712.0], [43.0, 4052.0], [42.0, 4155.0], [45.0, 4618.0], [46.0, 4386.0], [49.0, 4051.3333333333335], [48.0, 3929.0], [50.0, 4103.460317460317], [14.0, 3511.0], [20.0, 3426.0], [21.0, 3588.5], [24.0, 3462.0], [26.0, 3720.6666666666665], [27.0, 3766.0], [29.0, 3765.5], [30.0, 3847.0], [31.0, 3657.0]], "isOverall": false, "label": "Item Details", "isController": false}, {"data": [[44.06, 3994.809999999999]], "isOverall": false, "label": "Item Details-Aggregated", "isController": false}, {"data": [[39.0, 3478.6666666666665], [40.0, 3300.0], [41.0, 4784.0], [42.0, 3471.3333333333335], [43.0, 4548.666666666666], [44.0, 5337.2], [45.0, 2729.0], [47.0, 3186.5], [46.0, 3305.0], [49.0, 3207.6666666666665], [48.0, 3095.0], [50.0, 3069.585714285714]], "isOverall": false, "label": "View Items", "isController": false}, {"data": [[48.16, 3326.080000000001]], "isOverall": false, "label": "View Items-Aggregated", "isController": false}, {"data": [[2.0, 2270.0], [3.0, 2254.0], [4.0, 2245.0], [5.0, 2326.0], [6.0, 2333.0], [7.0, 2427.0], [8.0, 2370.0], [9.0, 2336.0], [10.0, 2284.0], [11.0, 2348.0], [12.0, 2306.0], [13.0, 2269.0], [14.0, 2263.0], [15.0, 2386.0], [16.0, 2292.0], [17.0, 2299.0], [18.0, 2191.0], [19.0, 2279.0], [20.0, 2228.0], [21.0, 2344.0], [22.0, 2383.0], [23.0, 2263.0], [24.0, 2308.0], [25.0, 2295.0], [26.0, 2302.0], [27.0, 2302.0], [28.0, 2273.0], [29.0, 2305.0], [30.0, 2410.0], [31.0, 2468.0], [33.0, 2506.0], [32.0, 2652.0], [35.0, 2357.0], [34.0, 2361.0], [37.0, 2336.0], [36.0, 2352.0], [39.0, 2297.0], [38.0, 2486.0], [41.0, 2663.0], [40.0, 2497.0], [43.0, 2467.0], [42.0, 2397.0], [45.0, 2472.0], [44.0, 2436.0], [47.0, 2382.0], [46.0, 2459.0], [49.0, 2497.0], [48.0, 2406.0], [50.0, 2505.9215686274515], [1.0, 2284.0]], "isOverall": false, "label": "Compare Item", "isController": false}, {"data": [[37.750000000000014, 2434.680000000001]], "isOverall": false, "label": "Compare Item-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 50.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 1523.3333333333333, "minX": 1.57312194E12, "maxY": 994008.3333333334, "series": [{"data": [[1.57312194E12, 994008.3333333334]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.57312194E12, 1523.3333333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57312194E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 2420.43, "minX": 1.57312194E12, "maxY": 3994.809999999999, "series": [{"data": [[1.57312194E12, 2420.43]], "isOverall": false, "label": "Category Drill down", "isController": false}, {"data": [[1.57312194E12, 3994.809999999999]], "isOverall": false, "label": "Item Details", "isController": false}, {"data": [[1.57312194E12, 3326.080000000001]], "isOverall": false, "label": "View Items", "isController": false}, {"data": [[1.57312194E12, 2434.680000000001]], "isOverall": false, "label": "Compare Item", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57312194E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1010.8200000000003, "minX": 1.57312194E12, "maxY": 1819.8399999999997, "series": [{"data": [[1.57312194E12, 1195.5300000000009]], "isOverall": false, "label": "Category Drill down", "isController": false}, {"data": [[1.57312194E12, 1564.3800000000003]], "isOverall": false, "label": "Item Details", "isController": false}, {"data": [[1.57312194E12, 1819.8399999999997]], "isOverall": false, "label": "View Items", "isController": false}, {"data": [[1.57312194E12, 1010.8200000000003]], "isOverall": false, "label": "Compare Item", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57312194E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 134.7, "minX": 1.57312194E12, "maxY": 203.57, "series": [{"data": [[1.57312194E12, 201.21000000000004]], "isOverall": false, "label": "Category Drill down", "isController": false}, {"data": [[1.57312194E12, 202.00000000000003]], "isOverall": false, "label": "Item Details", "isController": false}, {"data": [[1.57312194E12, 134.7]], "isOverall": false, "label": "View Items", "isController": false}, {"data": [[1.57312194E12, 203.57]], "isOverall": false, "label": "Compare Item", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57312194E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1853.0, "minX": 1.57312194E12, "maxY": 5766.0, "series": [{"data": [[1.57312194E12, 5766.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.57312194E12, 1853.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.57312194E12, 4303.5]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.57312194E12, 5698.620000000001]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.57312194E12, 4728.9]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57312194E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1943.0, "minX": 1.0, "maxY": 4157.0, "series": [{"data": [[2.0, 2825.0], [8.0, 2342.0], [9.0, 2264.0], [11.0, 3171.0], [12.0, 3641.0], [13.0, 2308.0], [14.0, 2735.5], [15.0, 2587.0], [1.0, 2728.0], [16.0, 3438.0], [18.0, 4157.0], [5.0, 1943.0], [20.0, 3378.5], [21.0, 2269.0], [23.0, 2719.0], [24.0, 3002.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 24.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 720.5, "minX": 1.0, "maxY": 2425.0, "series": [{"data": [[2.0, 1589.0], [8.0, 912.5], [9.0, 1070.0], [11.0, 1302.0], [12.0, 1338.0], [13.0, 860.0], [14.0, 1203.5], [15.0, 1166.0], [1.0, 1410.5], [16.0, 1660.5], [18.0, 2425.0], [5.0, 720.5], [20.0, 1377.0], [21.0, 931.0], [23.0, 1095.0], [24.0, 1322.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 24.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 6.666666666666667, "minX": 1.57312194E12, "maxY": 6.666666666666667, "series": [{"data": [[1.57312194E12, 6.666666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57312194E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 6.666666666666667, "minX": 1.57312194E12, "maxY": 6.666666666666667, "series": [{"data": [[1.57312194E12, 6.666666666666667]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57312194E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.6666666666666667, "minX": 1.57312194E12, "maxY": 1.6666666666666667, "series": [{"data": [[1.57312194E12, 1.6666666666666667]], "isOverall": false, "label": "Compare Item-success", "isController": false}, {"data": [[1.57312194E12, 1.6666666666666667]], "isOverall": false, "label": "Category Drill down-success", "isController": false}, {"data": [[1.57312194E12, 1.6666666666666667]], "isOverall": false, "label": "Item Details-success", "isController": false}, {"data": [[1.57312194E12, 1.6666666666666667]], "isOverall": false, "label": "View Items-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57312194E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 6.666666666666667, "minX": 1.57312194E12, "maxY": 6.666666666666667, "series": [{"data": [[1.57312194E12, 6.666666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57312194E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

