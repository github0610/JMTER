/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1639.0, "minX": 0.0, "maxY": 7647.0, "series": [{"data": [[0.0, 1639.0], [0.1, 1639.0], [0.2, 1639.0], [0.3, 1639.0], [0.4, 1639.0], [0.5, 1639.0], [0.6, 1639.0], [0.7, 1639.0], [0.8, 1639.0], [0.9, 1639.0], [1.0, 1690.0], [1.1, 1690.0], [1.2, 1690.0], [1.3, 1690.0], [1.4, 1690.0], [1.5, 1690.0], [1.6, 1690.0], [1.7, 1690.0], [1.8, 1690.0], [1.9, 1690.0], [2.0, 1698.0], [2.1, 1698.0], [2.2, 1698.0], [2.3, 1698.0], [2.4, 1698.0], [2.5, 1698.0], [2.6, 1698.0], [2.7, 1698.0], [2.8, 1698.0], [2.9, 1698.0], [3.0, 1703.0], [3.1, 1703.0], [3.2, 1703.0], [3.3, 1703.0], [3.4, 1703.0], [3.5, 1703.0], [3.6, 1703.0], [3.7, 1703.0], [3.8, 1703.0], [3.9, 1703.0], [4.0, 1708.0], [4.1, 1708.0], [4.2, 1708.0], [4.3, 1708.0], [4.4, 1708.0], [4.5, 1708.0], [4.6, 1708.0], [4.7, 1708.0], [4.8, 1708.0], [4.9, 1708.0], [5.0, 1708.0], [5.1, 1708.0], [5.2, 1708.0], [5.3, 1708.0], [5.4, 1708.0], [5.5, 1708.0], [5.6, 1708.0], [5.7, 1708.0], [5.8, 1708.0], [5.9, 1708.0], [6.0, 1712.0], [6.1, 1712.0], [6.2, 1712.0], [6.3, 1712.0], [6.4, 1712.0], [6.5, 1712.0], [6.6, 1712.0], [6.7, 1712.0], [6.8, 1712.0], [6.9, 1712.0], [7.0, 1713.0], [7.1, 1713.0], [7.2, 1713.0], [7.3, 1713.0], [7.4, 1713.0], [7.5, 1713.0], [7.6, 1713.0], [7.7, 1713.0], [7.8, 1713.0], [7.9, 1713.0], [8.0, 1715.0], [8.1, 1715.0], [8.2, 1715.0], [8.3, 1715.0], [8.4, 1715.0], [8.5, 1715.0], [8.6, 1715.0], [8.7, 1715.0], [8.8, 1715.0], [8.9, 1715.0], [9.0, 1716.0], [9.1, 1716.0], [9.2, 1716.0], [9.3, 1716.0], [9.4, 1716.0], [9.5, 1716.0], [9.6, 1716.0], [9.7, 1716.0], [9.8, 1716.0], [9.9, 1716.0], [10.0, 1720.0], [10.1, 1720.0], [10.2, 1720.0], [10.3, 1720.0], [10.4, 1720.0], [10.5, 1720.0], [10.6, 1720.0], [10.7, 1720.0], [10.8, 1720.0], [10.9, 1720.0], [11.0, 1724.0], [11.1, 1724.0], [11.2, 1724.0], [11.3, 1724.0], [11.4, 1724.0], [11.5, 1724.0], [11.6, 1724.0], [11.7, 1724.0], [11.8, 1724.0], [11.9, 1724.0], [12.0, 1729.0], [12.1, 1729.0], [12.2, 1729.0], [12.3, 1729.0], [12.4, 1729.0], [12.5, 1729.0], [12.6, 1729.0], [12.7, 1729.0], [12.8, 1729.0], [12.9, 1729.0], [13.0, 1730.0], [13.1, 1730.0], [13.2, 1730.0], [13.3, 1730.0], [13.4, 1730.0], [13.5, 1730.0], [13.6, 1730.0], [13.7, 1730.0], [13.8, 1730.0], [13.9, 1730.0], [14.0, 1740.0], [14.1, 1740.0], [14.2, 1740.0], [14.3, 1740.0], [14.4, 1740.0], [14.5, 1740.0], [14.6, 1740.0], [14.7, 1740.0], [14.8, 1740.0], [14.9, 1740.0], [15.0, 1750.0], [15.1, 1750.0], [15.2, 1750.0], [15.3, 1750.0], [15.4, 1750.0], [15.5, 1750.0], [15.6, 1750.0], [15.7, 1750.0], [15.8, 1750.0], [15.9, 1750.0], [16.0, 1751.0], [16.1, 1751.0], [16.2, 1751.0], [16.3, 1751.0], [16.4, 1751.0], [16.5, 1751.0], [16.6, 1751.0], [16.7, 1751.0], [16.8, 1751.0], [16.9, 1751.0], [17.0, 1772.0], [17.1, 1772.0], [17.2, 1772.0], [17.3, 1772.0], [17.4, 1772.0], [17.5, 1772.0], [17.6, 1772.0], [17.7, 1772.0], [17.8, 1772.0], [17.9, 1772.0], [18.0, 1785.0], [18.1, 1785.0], [18.2, 1785.0], [18.3, 1785.0], [18.4, 1785.0], [18.5, 1785.0], [18.6, 1785.0], [18.7, 1785.0], [18.8, 1785.0], [18.9, 1785.0], [19.0, 1785.0], [19.1, 1785.0], [19.2, 1785.0], [19.3, 1785.0], [19.4, 1785.0], [19.5, 1785.0], [19.6, 1785.0], [19.7, 1785.0], [19.8, 1785.0], [19.9, 1785.0], [20.0, 1790.0], [20.1, 1790.0], [20.2, 1790.0], [20.3, 1790.0], [20.4, 1790.0], [20.5, 1790.0], [20.6, 1790.0], [20.7, 1790.0], [20.8, 1790.0], [20.9, 1790.0], [21.0, 1795.0], [21.1, 1795.0], [21.2, 1795.0], [21.3, 1795.0], [21.4, 1795.0], [21.5, 1795.0], [21.6, 1795.0], [21.7, 1795.0], [21.8, 1795.0], [21.9, 1795.0], [22.0, 1811.0], [22.1, 1811.0], [22.2, 1811.0], [22.3, 1811.0], [22.4, 1811.0], [22.5, 1811.0], [22.6, 1811.0], [22.7, 1811.0], [22.8, 1811.0], [22.9, 1811.0], [23.0, 1814.0], [23.1, 1814.0], [23.2, 1814.0], [23.3, 1814.0], [23.4, 1814.0], [23.5, 1814.0], [23.6, 1814.0], [23.7, 1814.0], [23.8, 1814.0], [23.9, 1814.0], [24.0, 1816.0], [24.1, 1816.0], [24.2, 1816.0], [24.3, 1816.0], [24.4, 1816.0], [24.5, 1816.0], [24.6, 1816.0], [24.7, 1816.0], [24.8, 1816.0], [24.9, 1816.0], [25.0, 1818.0], [25.1, 1818.0], [25.2, 1818.0], [25.3, 1818.0], [25.4, 1818.0], [25.5, 1818.0], [25.6, 1818.0], [25.7, 1818.0], [25.8, 1818.0], [25.9, 1818.0], [26.0, 1829.0], [26.1, 1829.0], [26.2, 1829.0], [26.3, 1829.0], [26.4, 1829.0], [26.5, 1829.0], [26.6, 1829.0], [26.7, 1829.0], [26.8, 1829.0], [26.9, 1829.0], [27.0, 1832.0], [27.1, 1832.0], [27.2, 1832.0], [27.3, 1832.0], [27.4, 1832.0], [27.5, 1832.0], [27.6, 1832.0], [27.7, 1832.0], [27.8, 1832.0], [27.9, 1832.0], [28.0, 1848.0], [28.1, 1848.0], [28.2, 1848.0], [28.3, 1848.0], [28.4, 1848.0], [28.5, 1848.0], [28.6, 1848.0], [28.7, 1848.0], [28.8, 1848.0], [28.9, 1848.0], [29.0, 1873.0], [29.1, 1873.0], [29.2, 1873.0], [29.3, 1873.0], [29.4, 1873.0], [29.5, 1873.0], [29.6, 1873.0], [29.7, 1873.0], [29.8, 1873.0], [29.9, 1873.0], [30.0, 1877.0], [30.1, 1877.0], [30.2, 1877.0], [30.3, 1877.0], [30.4, 1877.0], [30.5, 1877.0], [30.6, 1877.0], [30.7, 1877.0], [30.8, 1877.0], [30.9, 1877.0], [31.0, 1896.0], [31.1, 1896.0], [31.2, 1896.0], [31.3, 1896.0], [31.4, 1896.0], [31.5, 1896.0], [31.6, 1896.0], [31.7, 1896.0], [31.8, 1896.0], [31.9, 1896.0], [32.0, 1904.0], [32.1, 1904.0], [32.2, 1904.0], [32.3, 1904.0], [32.4, 1904.0], [32.5, 1904.0], [32.6, 1904.0], [32.7, 1904.0], [32.8, 1904.0], [32.9, 1904.0], [33.0, 1911.0], [33.1, 1911.0], [33.2, 1911.0], [33.3, 1911.0], [33.4, 1911.0], [33.5, 1911.0], [33.6, 1911.0], [33.7, 1911.0], [33.8, 1911.0], [33.9, 1911.0], [34.0, 1933.0], [34.1, 1933.0], [34.2, 1933.0], [34.3, 1933.0], [34.4, 1933.0], [34.5, 1933.0], [34.6, 1933.0], [34.7, 1933.0], [34.8, 1933.0], [34.9, 1933.0], [35.0, 1948.0], [35.1, 1948.0], [35.2, 1948.0], [35.3, 1948.0], [35.4, 1948.0], [35.5, 1948.0], [35.6, 1948.0], [35.7, 1948.0], [35.8, 1948.0], [35.9, 1948.0], [36.0, 2022.0], [36.1, 2022.0], [36.2, 2022.0], [36.3, 2022.0], [36.4, 2022.0], [36.5, 2022.0], [36.6, 2022.0], [36.7, 2022.0], [36.8, 2022.0], [36.9, 2022.0], [37.0, 2028.0], [37.1, 2028.0], [37.2, 2028.0], [37.3, 2028.0], [37.4, 2028.0], [37.5, 2028.0], [37.6, 2028.0], [37.7, 2028.0], [37.8, 2028.0], [37.9, 2028.0], [38.0, 2028.0], [38.1, 2028.0], [38.2, 2028.0], [38.3, 2028.0], [38.4, 2028.0], [38.5, 2028.0], [38.6, 2028.0], [38.7, 2028.0], [38.8, 2028.0], [38.9, 2028.0], [39.0, 2039.0], [39.1, 2039.0], [39.2, 2039.0], [39.3, 2039.0], [39.4, 2039.0], [39.5, 2039.0], [39.6, 2039.0], [39.7, 2039.0], [39.8, 2039.0], [39.9, 2039.0], [40.0, 2043.0], [40.1, 2043.0], [40.2, 2043.0], [40.3, 2043.0], [40.4, 2043.0], [40.5, 2043.0], [40.6, 2043.0], [40.7, 2043.0], [40.8, 2043.0], [40.9, 2043.0], [41.0, 2050.0], [41.1, 2050.0], [41.2, 2050.0], [41.3, 2050.0], [41.4, 2050.0], [41.5, 2050.0], [41.6, 2050.0], [41.7, 2050.0], [41.8, 2050.0], [41.9, 2050.0], [42.0, 2061.0], [42.1, 2061.0], [42.2, 2061.0], [42.3, 2061.0], [42.4, 2061.0], [42.5, 2061.0], [42.6, 2061.0], [42.7, 2061.0], [42.8, 2061.0], [42.9, 2061.0], [43.0, 2074.0], [43.1, 2074.0], [43.2, 2074.0], [43.3, 2074.0], [43.4, 2074.0], [43.5, 2074.0], [43.6, 2074.0], [43.7, 2074.0], [43.8, 2074.0], [43.9, 2074.0], [44.0, 2080.0], [44.1, 2080.0], [44.2, 2080.0], [44.3, 2080.0], [44.4, 2080.0], [44.5, 2080.0], [44.6, 2080.0], [44.7, 2080.0], [44.8, 2080.0], [44.9, 2080.0], [45.0, 2122.0], [45.1, 2122.0], [45.2, 2122.0], [45.3, 2122.0], [45.4, 2122.0], [45.5, 2122.0], [45.6, 2122.0], [45.7, 2122.0], [45.8, 2122.0], [45.9, 2122.0], [46.0, 2136.0], [46.1, 2136.0], [46.2, 2136.0], [46.3, 2136.0], [46.4, 2136.0], [46.5, 2136.0], [46.6, 2136.0], [46.7, 2136.0], [46.8, 2136.0], [46.9, 2136.0], [47.0, 2160.0], [47.1, 2160.0], [47.2, 2160.0], [47.3, 2160.0], [47.4, 2160.0], [47.5, 2160.0], [47.6, 2160.0], [47.7, 2160.0], [47.8, 2160.0], [47.9, 2160.0], [48.0, 2211.0], [48.1, 2211.0], [48.2, 2211.0], [48.3, 2211.0], [48.4, 2211.0], [48.5, 2211.0], [48.6, 2211.0], [48.7, 2211.0], [48.8, 2211.0], [48.9, 2211.0], [49.0, 2242.0], [49.1, 2242.0], [49.2, 2242.0], [49.3, 2242.0], [49.4, 2242.0], [49.5, 2242.0], [49.6, 2242.0], [49.7, 2242.0], [49.8, 2242.0], [49.9, 2242.0], [50.0, 2248.0], [50.1, 2248.0], [50.2, 2248.0], [50.3, 2248.0], [50.4, 2248.0], [50.5, 2248.0], [50.6, 2248.0], [50.7, 2248.0], [50.8, 2248.0], [50.9, 2248.0], [51.0, 2253.0], [51.1, 2253.0], [51.2, 2253.0], [51.3, 2253.0], [51.4, 2253.0], [51.5, 2253.0], [51.6, 2253.0], [51.7, 2253.0], [51.8, 2253.0], [51.9, 2253.0], [52.0, 2262.0], [52.1, 2262.0], [52.2, 2262.0], [52.3, 2262.0], [52.4, 2262.0], [52.5, 2262.0], [52.6, 2262.0], [52.7, 2262.0], [52.8, 2262.0], [52.9, 2262.0], [53.0, 2287.0], [53.1, 2287.0], [53.2, 2287.0], [53.3, 2287.0], [53.4, 2287.0], [53.5, 2287.0], [53.6, 2287.0], [53.7, 2287.0], [53.8, 2287.0], [53.9, 2287.0], [54.0, 2293.0], [54.1, 2293.0], [54.2, 2293.0], [54.3, 2293.0], [54.4, 2293.0], [54.5, 2293.0], [54.6, 2293.0], [54.7, 2293.0], [54.8, 2293.0], [54.9, 2293.0], [55.0, 2296.0], [55.1, 2296.0], [55.2, 2296.0], [55.3, 2296.0], [55.4, 2296.0], [55.5, 2296.0], [55.6, 2296.0], [55.7, 2296.0], [55.8, 2296.0], [55.9, 2296.0], [56.0, 2313.0], [56.1, 2313.0], [56.2, 2313.0], [56.3, 2313.0], [56.4, 2313.0], [56.5, 2313.0], [56.6, 2313.0], [56.7, 2313.0], [56.8, 2313.0], [56.9, 2313.0], [57.0, 2322.0], [57.1, 2322.0], [57.2, 2322.0], [57.3, 2322.0], [57.4, 2322.0], [57.5, 2322.0], [57.6, 2322.0], [57.7, 2322.0], [57.8, 2322.0], [57.9, 2322.0], [58.0, 2380.0], [58.1, 2380.0], [58.2, 2380.0], [58.3, 2380.0], [58.4, 2380.0], [58.5, 2380.0], [58.6, 2380.0], [58.7, 2380.0], [58.8, 2380.0], [58.9, 2380.0], [59.0, 2435.0], [59.1, 2435.0], [59.2, 2435.0], [59.3, 2435.0], [59.4, 2435.0], [59.5, 2435.0], [59.6, 2435.0], [59.7, 2435.0], [59.8, 2435.0], [59.9, 2435.0], [60.0, 2437.0], [60.1, 2437.0], [60.2, 2437.0], [60.3, 2437.0], [60.4, 2437.0], [60.5, 2437.0], [60.6, 2437.0], [60.7, 2437.0], [60.8, 2437.0], [60.9, 2437.0], [61.0, 2477.0], [61.1, 2477.0], [61.2, 2477.0], [61.3, 2477.0], [61.4, 2477.0], [61.5, 2477.0], [61.6, 2477.0], [61.7, 2477.0], [61.8, 2477.0], [61.9, 2477.0], [62.0, 2477.0], [62.1, 2477.0], [62.2, 2477.0], [62.3, 2477.0], [62.4, 2477.0], [62.5, 2477.0], [62.6, 2477.0], [62.7, 2477.0], [62.8, 2477.0], [62.9, 2477.0], [63.0, 2526.0], [63.1, 2526.0], [63.2, 2526.0], [63.3, 2526.0], [63.4, 2526.0], [63.5, 2526.0], [63.6, 2526.0], [63.7, 2526.0], [63.8, 2526.0], [63.9, 2526.0], [64.0, 2546.0], [64.1, 2546.0], [64.2, 2546.0], [64.3, 2546.0], [64.4, 2546.0], [64.5, 2546.0], [64.6, 2546.0], [64.7, 2546.0], [64.8, 2546.0], [64.9, 2546.0], [65.0, 2618.0], [65.1, 2618.0], [65.2, 2618.0], [65.3, 2618.0], [65.4, 2618.0], [65.5, 2618.0], [65.6, 2618.0], [65.7, 2618.0], [65.8, 2618.0], [65.9, 2618.0], [66.0, 2633.0], [66.1, 2633.0], [66.2, 2633.0], [66.3, 2633.0], [66.4, 2633.0], [66.5, 2633.0], [66.6, 2633.0], [66.7, 2633.0], [66.8, 2633.0], [66.9, 2633.0], [67.0, 2637.0], [67.1, 2637.0], [67.2, 2637.0], [67.3, 2637.0], [67.4, 2637.0], [67.5, 2637.0], [67.6, 2637.0], [67.7, 2637.0], [67.8, 2637.0], [67.9, 2637.0], [68.0, 2656.0], [68.1, 2656.0], [68.2, 2656.0], [68.3, 2656.0], [68.4, 2656.0], [68.5, 2656.0], [68.6, 2656.0], [68.7, 2656.0], [68.8, 2656.0], [68.9, 2656.0], [69.0, 2660.0], [69.1, 2660.0], [69.2, 2660.0], [69.3, 2660.0], [69.4, 2660.0], [69.5, 2660.0], [69.6, 2660.0], [69.7, 2660.0], [69.8, 2660.0], [69.9, 2660.0], [70.0, 2673.0], [70.1, 2673.0], [70.2, 2673.0], [70.3, 2673.0], [70.4, 2673.0], [70.5, 2673.0], [70.6, 2673.0], [70.7, 2673.0], [70.8, 2673.0], [70.9, 2673.0], [71.0, 2701.0], [71.1, 2701.0], [71.2, 2701.0], [71.3, 2701.0], [71.4, 2701.0], [71.5, 2701.0], [71.6, 2701.0], [71.7, 2701.0], [71.8, 2701.0], [71.9, 2701.0], [72.0, 2703.0], [72.1, 2703.0], [72.2, 2703.0], [72.3, 2703.0], [72.4, 2703.0], [72.5, 2703.0], [72.6, 2703.0], [72.7, 2703.0], [72.8, 2703.0], [72.9, 2703.0], [73.0, 2706.0], [73.1, 2706.0], [73.2, 2706.0], [73.3, 2706.0], [73.4, 2706.0], [73.5, 2706.0], [73.6, 2706.0], [73.7, 2706.0], [73.8, 2706.0], [73.9, 2706.0], [74.0, 2726.0], [74.1, 2726.0], [74.2, 2726.0], [74.3, 2726.0], [74.4, 2726.0], [74.5, 2726.0], [74.6, 2726.0], [74.7, 2726.0], [74.8, 2726.0], [74.9, 2726.0], [75.0, 2751.0], [75.1, 2751.0], [75.2, 2751.0], [75.3, 2751.0], [75.4, 2751.0], [75.5, 2751.0], [75.6, 2751.0], [75.7, 2751.0], [75.8, 2751.0], [75.9, 2751.0], [76.0, 2753.0], [76.1, 2753.0], [76.2, 2753.0], [76.3, 2753.0], [76.4, 2753.0], [76.5, 2753.0], [76.6, 2753.0], [76.7, 2753.0], [76.8, 2753.0], [76.9, 2753.0], [77.0, 2760.0], [77.1, 2760.0], [77.2, 2760.0], [77.3, 2760.0], [77.4, 2760.0], [77.5, 2760.0], [77.6, 2760.0], [77.7, 2760.0], [77.8, 2760.0], [77.9, 2760.0], [78.0, 2803.0], [78.1, 2803.0], [78.2, 2803.0], [78.3, 2803.0], [78.4, 2803.0], [78.5, 2803.0], [78.6, 2803.0], [78.7, 2803.0], [78.8, 2803.0], [78.9, 2803.0], [79.0, 2812.0], [79.1, 2812.0], [79.2, 2812.0], [79.3, 2812.0], [79.4, 2812.0], [79.5, 2812.0], [79.6, 2812.0], [79.7, 2812.0], [79.8, 2812.0], [79.9, 2812.0], [80.0, 2823.0], [80.1, 2823.0], [80.2, 2823.0], [80.3, 2823.0], [80.4, 2823.0], [80.5, 2823.0], [80.6, 2823.0], [80.7, 2823.0], [80.8, 2823.0], [80.9, 2823.0], [81.0, 2837.0], [81.1, 2837.0], [81.2, 2837.0], [81.3, 2837.0], [81.4, 2837.0], [81.5, 2837.0], [81.6, 2837.0], [81.7, 2837.0], [81.8, 2837.0], [81.9, 2837.0], [82.0, 2883.0], [82.1, 2883.0], [82.2, 2883.0], [82.3, 2883.0], [82.4, 2883.0], [82.5, 2883.0], [82.6, 2883.0], [82.7, 2883.0], [82.8, 2883.0], [82.9, 2883.0], [83.0, 2917.0], [83.1, 2917.0], [83.2, 2917.0], [83.3, 2917.0], [83.4, 2917.0], [83.5, 2917.0], [83.6, 2917.0], [83.7, 2917.0], [83.8, 2917.0], [83.9, 2917.0], [84.0, 2944.0], [84.1, 2944.0], [84.2, 2944.0], [84.3, 2944.0], [84.4, 2944.0], [84.5, 2944.0], [84.6, 2944.0], [84.7, 2944.0], [84.8, 2944.0], [84.9, 2944.0], [85.0, 2963.0], [85.1, 2963.0], [85.2, 2963.0], [85.3, 2963.0], [85.4, 2963.0], [85.5, 2963.0], [85.6, 2963.0], [85.7, 2963.0], [85.8, 2963.0], [85.9, 2963.0], [86.0, 2987.0], [86.1, 2987.0], [86.2, 2987.0], [86.3, 2987.0], [86.4, 2987.0], [86.5, 2987.0], [86.6, 2987.0], [86.7, 2987.0], [86.8, 2987.0], [86.9, 2987.0], [87.0, 3042.0], [87.1, 3042.0], [87.2, 3042.0], [87.3, 3042.0], [87.4, 3042.0], [87.5, 3042.0], [87.6, 3042.0], [87.7, 3042.0], [87.8, 3042.0], [87.9, 3042.0], [88.0, 3116.0], [88.1, 3116.0], [88.2, 3116.0], [88.3, 3116.0], [88.4, 3116.0], [88.5, 3116.0], [88.6, 3116.0], [88.7, 3116.0], [88.8, 3116.0], [88.9, 3116.0], [89.0, 3169.0], [89.1, 3169.0], [89.2, 3169.0], [89.3, 3169.0], [89.4, 3169.0], [89.5, 3169.0], [89.6, 3169.0], [89.7, 3169.0], [89.8, 3169.0], [89.9, 3169.0], [90.0, 3249.0], [90.1, 3249.0], [90.2, 3249.0], [90.3, 3249.0], [90.4, 3249.0], [90.5, 3249.0], [90.6, 3249.0], [90.7, 3249.0], [90.8, 3249.0], [90.9, 3249.0], [91.0, 3317.0], [91.1, 3317.0], [91.2, 3317.0], [91.3, 3317.0], [91.4, 3317.0], [91.5, 3317.0], [91.6, 3317.0], [91.7, 3317.0], [91.8, 3317.0], [91.9, 3317.0], [92.0, 3343.0], [92.1, 3343.0], [92.2, 3343.0], [92.3, 3343.0], [92.4, 3343.0], [92.5, 3343.0], [92.6, 3343.0], [92.7, 3343.0], [92.8, 3343.0], [92.9, 3343.0], [93.0, 3587.0], [93.1, 3587.0], [93.2, 3587.0], [93.3, 3587.0], [93.4, 3587.0], [93.5, 3587.0], [93.6, 3587.0], [93.7, 3587.0], [93.8, 3587.0], [93.9, 3587.0], [94.0, 3672.0], [94.1, 3672.0], [94.2, 3672.0], [94.3, 3672.0], [94.4, 3672.0], [94.5, 3672.0], [94.6, 3672.0], [94.7, 3672.0], [94.8, 3672.0], [94.9, 3672.0], [95.0, 3732.0], [95.1, 3732.0], [95.2, 3732.0], [95.3, 3732.0], [95.4, 3732.0], [95.5, 3732.0], [95.6, 3732.0], [95.7, 3732.0], [95.8, 3732.0], [95.9, 3732.0], [96.0, 3757.0], [96.1, 3757.0], [96.2, 3757.0], [96.3, 3757.0], [96.4, 3757.0], [96.5, 3757.0], [96.6, 3757.0], [96.7, 3757.0], [96.8, 3757.0], [96.9, 3757.0], [97.0, 3870.0], [97.1, 3870.0], [97.2, 3870.0], [97.3, 3870.0], [97.4, 3870.0], [97.5, 3870.0], [97.6, 3870.0], [97.7, 3870.0], [97.8, 3870.0], [97.9, 3870.0], [98.0, 4222.0], [98.1, 4222.0], [98.2, 4222.0], [98.3, 4222.0], [98.4, 4222.0], [98.5, 4222.0], [98.6, 4222.0], [98.7, 4222.0], [98.8, 4222.0], [98.9, 4222.0], [99.0, 4646.0], [99.1, 4646.0], [99.2, 4646.0], [99.3, 4646.0], [99.4, 4646.0], [99.5, 4646.0], [99.6, 4646.0], [99.7, 4646.0], [99.8, 4646.0], [99.9, 4646.0]], "isOverall": false, "label": "Category Drill down", "isController": false}, {"data": [[0.0, 3416.0], [0.1, 3416.0], [0.2, 3416.0], [0.3, 3416.0], [0.4, 3416.0], [0.5, 3416.0], [0.6, 3416.0], [0.7, 3416.0], [0.8, 3416.0], [0.9, 3416.0], [1.0, 3511.0], [1.1, 3511.0], [1.2, 3511.0], [1.3, 3511.0], [1.4, 3511.0], [1.5, 3511.0], [1.6, 3511.0], [1.7, 3511.0], [1.8, 3511.0], [1.9, 3511.0], [2.0, 3701.0], [2.1, 3701.0], [2.2, 3701.0], [2.3, 3701.0], [2.4, 3701.0], [2.5, 3701.0], [2.6, 3701.0], [2.7, 3701.0], [2.8, 3701.0], [2.9, 3701.0], [3.0, 3828.0], [3.1, 3828.0], [3.2, 3828.0], [3.3, 3828.0], [3.4, 3828.0], [3.5, 3828.0], [3.6, 3828.0], [3.7, 3828.0], [3.8, 3828.0], [3.9, 3828.0], [4.0, 3832.0], [4.1, 3832.0], [4.2, 3832.0], [4.3, 3832.0], [4.4, 3832.0], [4.5, 3832.0], [4.6, 3832.0], [4.7, 3832.0], [4.8, 3832.0], [4.9, 3832.0], [5.0, 3854.0], [5.1, 3854.0], [5.2, 3854.0], [5.3, 3854.0], [5.4, 3854.0], [5.5, 3854.0], [5.6, 3854.0], [5.7, 3854.0], [5.8, 3854.0], [5.9, 3854.0], [6.0, 3869.0], [6.1, 3869.0], [6.2, 3869.0], [6.3, 3869.0], [6.4, 3869.0], [6.5, 3869.0], [6.6, 3869.0], [6.7, 3869.0], [6.8, 3869.0], [6.9, 3869.0], [7.0, 3875.0], [7.1, 3875.0], [7.2, 3875.0], [7.3, 3875.0], [7.4, 3875.0], [7.5, 3875.0], [7.6, 3875.0], [7.7, 3875.0], [7.8, 3875.0], [7.9, 3875.0], [8.0, 3917.0], [8.1, 3917.0], [8.2, 3917.0], [8.3, 3917.0], [8.4, 3917.0], [8.5, 3917.0], [8.6, 3917.0], [8.7, 3917.0], [8.8, 3917.0], [8.9, 3917.0], [9.0, 4021.0], [9.1, 4021.0], [9.2, 4021.0], [9.3, 4021.0], [9.4, 4021.0], [9.5, 4021.0], [9.6, 4021.0], [9.7, 4021.0], [9.8, 4021.0], [9.9, 4021.0], [10.0, 4049.0], [10.1, 4049.0], [10.2, 4049.0], [10.3, 4049.0], [10.4, 4049.0], [10.5, 4049.0], [10.6, 4049.0], [10.7, 4049.0], [10.8, 4049.0], [10.9, 4049.0], [11.0, 4057.0], [11.1, 4057.0], [11.2, 4057.0], [11.3, 4057.0], [11.4, 4057.0], [11.5, 4057.0], [11.6, 4057.0], [11.7, 4057.0], [11.8, 4057.0], [11.9, 4057.0], [12.0, 4146.0], [12.1, 4146.0], [12.2, 4146.0], [12.3, 4146.0], [12.4, 4146.0], [12.5, 4146.0], [12.6, 4146.0], [12.7, 4146.0], [12.8, 4146.0], [12.9, 4146.0], [13.0, 4162.0], [13.1, 4162.0], [13.2, 4162.0], [13.3, 4162.0], [13.4, 4162.0], [13.5, 4162.0], [13.6, 4162.0], [13.7, 4162.0], [13.8, 4162.0], [13.9, 4162.0], [14.0, 4280.0], [14.1, 4280.0], [14.2, 4280.0], [14.3, 4280.0], [14.4, 4280.0], [14.5, 4280.0], [14.6, 4280.0], [14.7, 4280.0], [14.8, 4280.0], [14.9, 4280.0], [15.0, 4314.0], [15.1, 4314.0], [15.2, 4314.0], [15.3, 4314.0], [15.4, 4314.0], [15.5, 4314.0], [15.6, 4314.0], [15.7, 4314.0], [15.8, 4314.0], [15.9, 4314.0], [16.0, 4330.0], [16.1, 4330.0], [16.2, 4330.0], [16.3, 4330.0], [16.4, 4330.0], [16.5, 4330.0], [16.6, 4330.0], [16.7, 4330.0], [16.8, 4330.0], [16.9, 4330.0], [17.0, 4330.0], [17.1, 4330.0], [17.2, 4330.0], [17.3, 4330.0], [17.4, 4330.0], [17.5, 4330.0], [17.6, 4330.0], [17.7, 4330.0], [17.8, 4330.0], [17.9, 4330.0], [18.0, 4350.0], [18.1, 4350.0], [18.2, 4350.0], [18.3, 4350.0], [18.4, 4350.0], [18.5, 4350.0], [18.6, 4350.0], [18.7, 4350.0], [18.8, 4350.0], [18.9, 4350.0], [19.0, 4366.0], [19.1, 4366.0], [19.2, 4366.0], [19.3, 4366.0], [19.4, 4366.0], [19.5, 4366.0], [19.6, 4366.0], [19.7, 4366.0], [19.8, 4366.0], [19.9, 4366.0], [20.0, 4393.0], [20.1, 4393.0], [20.2, 4393.0], [20.3, 4393.0], [20.4, 4393.0], [20.5, 4393.0], [20.6, 4393.0], [20.7, 4393.0], [20.8, 4393.0], [20.9, 4393.0], [21.0, 4414.0], [21.1, 4414.0], [21.2, 4414.0], [21.3, 4414.0], [21.4, 4414.0], [21.5, 4414.0], [21.6, 4414.0], [21.7, 4414.0], [21.8, 4414.0], [21.9, 4414.0], [22.0, 4449.0], [22.1, 4449.0], [22.2, 4449.0], [22.3, 4449.0], [22.4, 4449.0], [22.5, 4449.0], [22.6, 4449.0], [22.7, 4449.0], [22.8, 4449.0], [22.9, 4449.0], [23.0, 4471.0], [23.1, 4471.0], [23.2, 4471.0], [23.3, 4471.0], [23.4, 4471.0], [23.5, 4471.0], [23.6, 4471.0], [23.7, 4471.0], [23.8, 4471.0], [23.9, 4471.0], [24.0, 4505.0], [24.1, 4505.0], [24.2, 4505.0], [24.3, 4505.0], [24.4, 4505.0], [24.5, 4505.0], [24.6, 4505.0], [24.7, 4505.0], [24.8, 4505.0], [24.9, 4505.0], [25.0, 4510.0], [25.1, 4510.0], [25.2, 4510.0], [25.3, 4510.0], [25.4, 4510.0], [25.5, 4510.0], [25.6, 4510.0], [25.7, 4510.0], [25.8, 4510.0], [25.9, 4510.0], [26.0, 4537.0], [26.1, 4537.0], [26.2, 4537.0], [26.3, 4537.0], [26.4, 4537.0], [26.5, 4537.0], [26.6, 4537.0], [26.7, 4537.0], [26.8, 4537.0], [26.9, 4537.0], [27.0, 4581.0], [27.1, 4581.0], [27.2, 4581.0], [27.3, 4581.0], [27.4, 4581.0], [27.5, 4581.0], [27.6, 4581.0], [27.7, 4581.0], [27.8, 4581.0], [27.9, 4581.0], [28.0, 4591.0], [28.1, 4591.0], [28.2, 4591.0], [28.3, 4591.0], [28.4, 4591.0], [28.5, 4591.0], [28.6, 4591.0], [28.7, 4591.0], [28.8, 4591.0], [28.9, 4591.0], [29.0, 4591.0], [29.1, 4591.0], [29.2, 4591.0], [29.3, 4591.0], [29.4, 4591.0], [29.5, 4591.0], [29.6, 4591.0], [29.7, 4591.0], [29.8, 4591.0], [29.9, 4591.0], [30.0, 4665.0], [30.1, 4665.0], [30.2, 4665.0], [30.3, 4665.0], [30.4, 4665.0], [30.5, 4665.0], [30.6, 4665.0], [30.7, 4665.0], [30.8, 4665.0], [30.9, 4665.0], [31.0, 4716.0], [31.1, 4716.0], [31.2, 4716.0], [31.3, 4716.0], [31.4, 4716.0], [31.5, 4716.0], [31.6, 4716.0], [31.7, 4716.0], [31.8, 4716.0], [31.9, 4716.0], [32.0, 4719.0], [32.1, 4719.0], [32.2, 4719.0], [32.3, 4719.0], [32.4, 4719.0], [32.5, 4719.0], [32.6, 4719.0], [32.7, 4719.0], [32.8, 4719.0], [32.9, 4719.0], [33.0, 4736.0], [33.1, 4736.0], [33.2, 4736.0], [33.3, 4736.0], [33.4, 4736.0], [33.5, 4736.0], [33.6, 4736.0], [33.7, 4736.0], [33.8, 4736.0], [33.9, 4736.0], [34.0, 4745.0], [34.1, 4745.0], [34.2, 4745.0], [34.3, 4745.0], [34.4, 4745.0], [34.5, 4745.0], [34.6, 4745.0], [34.7, 4745.0], [34.8, 4745.0], [34.9, 4745.0], [35.0, 4745.0], [35.1, 4745.0], [35.2, 4745.0], [35.3, 4745.0], [35.4, 4745.0], [35.5, 4745.0], [35.6, 4745.0], [35.7, 4745.0], [35.8, 4745.0], [35.9, 4745.0], [36.0, 4761.0], [36.1, 4761.0], [36.2, 4761.0], [36.3, 4761.0], [36.4, 4761.0], [36.5, 4761.0], [36.6, 4761.0], [36.7, 4761.0], [36.8, 4761.0], [36.9, 4761.0], [37.0, 4770.0], [37.1, 4770.0], [37.2, 4770.0], [37.3, 4770.0], [37.4, 4770.0], [37.5, 4770.0], [37.6, 4770.0], [37.7, 4770.0], [37.8, 4770.0], [37.9, 4770.0], [38.0, 4788.0], [38.1, 4788.0], [38.2, 4788.0], [38.3, 4788.0], [38.4, 4788.0], [38.5, 4788.0], [38.6, 4788.0], [38.7, 4788.0], [38.8, 4788.0], [38.9, 4788.0], [39.0, 4809.0], [39.1, 4809.0], [39.2, 4809.0], [39.3, 4809.0], [39.4, 4809.0], [39.5, 4809.0], [39.6, 4809.0], [39.7, 4809.0], [39.8, 4809.0], [39.9, 4809.0], [40.0, 4830.0], [40.1, 4830.0], [40.2, 4830.0], [40.3, 4830.0], [40.4, 4830.0], [40.5, 4830.0], [40.6, 4830.0], [40.7, 4830.0], [40.8, 4830.0], [40.9, 4830.0], [41.0, 4855.0], [41.1, 4855.0], [41.2, 4855.0], [41.3, 4855.0], [41.4, 4855.0], [41.5, 4855.0], [41.6, 4855.0], [41.7, 4855.0], [41.8, 4855.0], [41.9, 4855.0], [42.0, 4864.0], [42.1, 4864.0], [42.2, 4864.0], [42.3, 4864.0], [42.4, 4864.0], [42.5, 4864.0], [42.6, 4864.0], [42.7, 4864.0], [42.8, 4864.0], [42.9, 4864.0], [43.0, 4876.0], [43.1, 4876.0], [43.2, 4876.0], [43.3, 4876.0], [43.4, 4876.0], [43.5, 4876.0], [43.6, 4876.0], [43.7, 4876.0], [43.8, 4876.0], [43.9, 4876.0], [44.0, 4877.0], [44.1, 4877.0], [44.2, 4877.0], [44.3, 4877.0], [44.4, 4877.0], [44.5, 4877.0], [44.6, 4877.0], [44.7, 4877.0], [44.8, 4877.0], [44.9, 4877.0], [45.0, 4924.0], [45.1, 4924.0], [45.2, 4924.0], [45.3, 4924.0], [45.4, 4924.0], [45.5, 4924.0], [45.6, 4924.0], [45.7, 4924.0], [45.8, 4924.0], [45.9, 4924.0], [46.0, 4930.0], [46.1, 4930.0], [46.2, 4930.0], [46.3, 4930.0], [46.4, 4930.0], [46.5, 4930.0], [46.6, 4930.0], [46.7, 4930.0], [46.8, 4930.0], [46.9, 4930.0], [47.0, 4945.0], [47.1, 4945.0], [47.2, 4945.0], [47.3, 4945.0], [47.4, 4945.0], [47.5, 4945.0], [47.6, 4945.0], [47.7, 4945.0], [47.8, 4945.0], [47.9, 4945.0], [48.0, 4969.0], [48.1, 4969.0], [48.2, 4969.0], [48.3, 4969.0], [48.4, 4969.0], [48.5, 4969.0], [48.6, 4969.0], [48.7, 4969.0], [48.8, 4969.0], [48.9, 4969.0], [49.0, 4995.0], [49.1, 4995.0], [49.2, 4995.0], [49.3, 4995.0], [49.4, 4995.0], [49.5, 4995.0], [49.6, 4995.0], [49.7, 4995.0], [49.8, 4995.0], [49.9, 4995.0], [50.0, 5092.0], [50.1, 5092.0], [50.2, 5092.0], [50.3, 5092.0], [50.4, 5092.0], [50.5, 5092.0], [50.6, 5092.0], [50.7, 5092.0], [50.8, 5092.0], [50.9, 5092.0], [51.0, 5111.0], [51.1, 5111.0], [51.2, 5111.0], [51.3, 5111.0], [51.4, 5111.0], [51.5, 5111.0], [51.6, 5111.0], [51.7, 5111.0], [51.8, 5111.0], [51.9, 5111.0], [52.0, 5132.0], [52.1, 5132.0], [52.2, 5132.0], [52.3, 5132.0], [52.4, 5132.0], [52.5, 5132.0], [52.6, 5132.0], [52.7, 5132.0], [52.8, 5132.0], [52.9, 5132.0], [53.0, 5138.0], [53.1, 5138.0], [53.2, 5138.0], [53.3, 5138.0], [53.4, 5138.0], [53.5, 5138.0], [53.6, 5138.0], [53.7, 5138.0], [53.8, 5138.0], [53.9, 5138.0], [54.0, 5165.0], [54.1, 5165.0], [54.2, 5165.0], [54.3, 5165.0], [54.4, 5165.0], [54.5, 5165.0], [54.6, 5165.0], [54.7, 5165.0], [54.8, 5165.0], [54.9, 5165.0], [55.0, 5214.0], [55.1, 5214.0], [55.2, 5214.0], [55.3, 5214.0], [55.4, 5214.0], [55.5, 5214.0], [55.6, 5214.0], [55.7, 5214.0], [55.8, 5214.0], [55.9, 5214.0], [56.0, 5253.0], [56.1, 5253.0], [56.2, 5253.0], [56.3, 5253.0], [56.4, 5253.0], [56.5, 5253.0], [56.6, 5253.0], [56.7, 5253.0], [56.8, 5253.0], [56.9, 5253.0], [57.0, 5256.0], [57.1, 5256.0], [57.2, 5256.0], [57.3, 5256.0], [57.4, 5256.0], [57.5, 5256.0], [57.6, 5256.0], [57.7, 5256.0], [57.8, 5256.0], [57.9, 5256.0], [58.0, 5269.0], [58.1, 5269.0], [58.2, 5269.0], [58.3, 5269.0], [58.4, 5269.0], [58.5, 5269.0], [58.6, 5269.0], [58.7, 5269.0], [58.8, 5269.0], [58.9, 5269.0], [59.0, 5272.0], [59.1, 5272.0], [59.2, 5272.0], [59.3, 5272.0], [59.4, 5272.0], [59.5, 5272.0], [59.6, 5272.0], [59.7, 5272.0], [59.8, 5272.0], [59.9, 5272.0], [60.0, 5330.0], [60.1, 5330.0], [60.2, 5330.0], [60.3, 5330.0], [60.4, 5330.0], [60.5, 5330.0], [60.6, 5330.0], [60.7, 5330.0], [60.8, 5330.0], [60.9, 5330.0], [61.0, 5367.0], [61.1, 5367.0], [61.2, 5367.0], [61.3, 5367.0], [61.4, 5367.0], [61.5, 5367.0], [61.6, 5367.0], [61.7, 5367.0], [61.8, 5367.0], [61.9, 5367.0], [62.0, 5374.0], [62.1, 5374.0], [62.2, 5374.0], [62.3, 5374.0], [62.4, 5374.0], [62.5, 5374.0], [62.6, 5374.0], [62.7, 5374.0], [62.8, 5374.0], [62.9, 5374.0], [63.0, 5388.0], [63.1, 5388.0], [63.2, 5388.0], [63.3, 5388.0], [63.4, 5388.0], [63.5, 5388.0], [63.6, 5388.0], [63.7, 5388.0], [63.8, 5388.0], [63.9, 5388.0], [64.0, 5426.0], [64.1, 5426.0], [64.2, 5426.0], [64.3, 5426.0], [64.4, 5426.0], [64.5, 5426.0], [64.6, 5426.0], [64.7, 5426.0], [64.8, 5426.0], [64.9, 5426.0], [65.0, 5713.0], [65.1, 5713.0], [65.2, 5713.0], [65.3, 5713.0], [65.4, 5713.0], [65.5, 5713.0], [65.6, 5713.0], [65.7, 5713.0], [65.8, 5713.0], [65.9, 5713.0], [66.0, 5733.0], [66.1, 5733.0], [66.2, 5733.0], [66.3, 5733.0], [66.4, 5733.0], [66.5, 5733.0], [66.6, 5733.0], [66.7, 5733.0], [66.8, 5733.0], [66.9, 5733.0], [67.0, 5756.0], [67.1, 5756.0], [67.2, 5756.0], [67.3, 5756.0], [67.4, 5756.0], [67.5, 5756.0], [67.6, 5756.0], [67.7, 5756.0], [67.8, 5756.0], [67.9, 5756.0], [68.0, 5791.0], [68.1, 5791.0], [68.2, 5791.0], [68.3, 5791.0], [68.4, 5791.0], [68.5, 5791.0], [68.6, 5791.0], [68.7, 5791.0], [68.8, 5791.0], [68.9, 5791.0], [69.0, 5838.0], [69.1, 5838.0], [69.2, 5838.0], [69.3, 5838.0], [69.4, 5838.0], [69.5, 5838.0], [69.6, 5838.0], [69.7, 5838.0], [69.8, 5838.0], [69.9, 5838.0], [70.0, 5926.0], [70.1, 5926.0], [70.2, 5926.0], [70.3, 5926.0], [70.4, 5926.0], [70.5, 5926.0], [70.6, 5926.0], [70.7, 5926.0], [70.8, 5926.0], [70.9, 5926.0], [71.0, 5938.0], [71.1, 5938.0], [71.2, 5938.0], [71.3, 5938.0], [71.4, 5938.0], [71.5, 5938.0], [71.6, 5938.0], [71.7, 5938.0], [71.8, 5938.0], [71.9, 5938.0], [72.0, 5999.0], [72.1, 5999.0], [72.2, 5999.0], [72.3, 5999.0], [72.4, 5999.0], [72.5, 5999.0], [72.6, 5999.0], [72.7, 5999.0], [72.8, 5999.0], [72.9, 5999.0], [73.0, 6015.0], [73.1, 6015.0], [73.2, 6015.0], [73.3, 6015.0], [73.4, 6015.0], [73.5, 6015.0], [73.6, 6015.0], [73.7, 6015.0], [73.8, 6015.0], [73.9, 6015.0], [74.0, 6022.0], [74.1, 6022.0], [74.2, 6022.0], [74.3, 6022.0], [74.4, 6022.0], [74.5, 6022.0], [74.6, 6022.0], [74.7, 6022.0], [74.8, 6022.0], [74.9, 6022.0], [75.0, 6070.0], [75.1, 6070.0], [75.2, 6070.0], [75.3, 6070.0], [75.4, 6070.0], [75.5, 6070.0], [75.6, 6070.0], [75.7, 6070.0], [75.8, 6070.0], [75.9, 6070.0], [76.0, 6089.0], [76.1, 6089.0], [76.2, 6089.0], [76.3, 6089.0], [76.4, 6089.0], [76.5, 6089.0], [76.6, 6089.0], [76.7, 6089.0], [76.8, 6089.0], [76.9, 6089.0], [77.0, 6223.0], [77.1, 6223.0], [77.2, 6223.0], [77.3, 6223.0], [77.4, 6223.0], [77.5, 6223.0], [77.6, 6223.0], [77.7, 6223.0], [77.8, 6223.0], [77.9, 6223.0], [78.0, 6270.0], [78.1, 6270.0], [78.2, 6270.0], [78.3, 6270.0], [78.4, 6270.0], [78.5, 6270.0], [78.6, 6270.0], [78.7, 6270.0], [78.8, 6270.0], [78.9, 6270.0], [79.0, 6327.0], [79.1, 6327.0], [79.2, 6327.0], [79.3, 6327.0], [79.4, 6327.0], [79.5, 6327.0], [79.6, 6327.0], [79.7, 6327.0], [79.8, 6327.0], [79.9, 6327.0], [80.0, 6362.0], [80.1, 6362.0], [80.2, 6362.0], [80.3, 6362.0], [80.4, 6362.0], [80.5, 6362.0], [80.6, 6362.0], [80.7, 6362.0], [80.8, 6362.0], [80.9, 6362.0], [81.0, 6385.0], [81.1, 6385.0], [81.2, 6385.0], [81.3, 6385.0], [81.4, 6385.0], [81.5, 6385.0], [81.6, 6385.0], [81.7, 6385.0], [81.8, 6385.0], [81.9, 6385.0], [82.0, 6396.0], [82.1, 6396.0], [82.2, 6396.0], [82.3, 6396.0], [82.4, 6396.0], [82.5, 6396.0], [82.6, 6396.0], [82.7, 6396.0], [82.8, 6396.0], [82.9, 6396.0], [83.0, 6406.0], [83.1, 6406.0], [83.2, 6406.0], [83.3, 6406.0], [83.4, 6406.0], [83.5, 6406.0], [83.6, 6406.0], [83.7, 6406.0], [83.8, 6406.0], [83.9, 6406.0], [84.0, 6490.0], [84.1, 6490.0], [84.2, 6490.0], [84.3, 6490.0], [84.4, 6490.0], [84.5, 6490.0], [84.6, 6490.0], [84.7, 6490.0], [84.8, 6490.0], [84.9, 6490.0], [85.0, 6529.0], [85.1, 6529.0], [85.2, 6529.0], [85.3, 6529.0], [85.4, 6529.0], [85.5, 6529.0], [85.6, 6529.0], [85.7, 6529.0], [85.8, 6529.0], [85.9, 6529.0], [86.0, 6656.0], [86.1, 6656.0], [86.2, 6656.0], [86.3, 6656.0], [86.4, 6656.0], [86.5, 6656.0], [86.6, 6656.0], [86.7, 6656.0], [86.8, 6656.0], [86.9, 6656.0], [87.0, 6776.0], [87.1, 6776.0], [87.2, 6776.0], [87.3, 6776.0], [87.4, 6776.0], [87.5, 6776.0], [87.6, 6776.0], [87.7, 6776.0], [87.8, 6776.0], [87.9, 6776.0], [88.0, 6799.0], [88.1, 6799.0], [88.2, 6799.0], [88.3, 6799.0], [88.4, 6799.0], [88.5, 6799.0], [88.6, 6799.0], [88.7, 6799.0], [88.8, 6799.0], [88.9, 6799.0], [89.0, 6868.0], [89.1, 6868.0], [89.2, 6868.0], [89.3, 6868.0], [89.4, 6868.0], [89.5, 6868.0], [89.6, 6868.0], [89.7, 6868.0], [89.8, 6868.0], [89.9, 6868.0], [90.0, 6905.0], [90.1, 6905.0], [90.2, 6905.0], [90.3, 6905.0], [90.4, 6905.0], [90.5, 6905.0], [90.6, 6905.0], [90.7, 6905.0], [90.8, 6905.0], [90.9, 6905.0], [91.0, 6977.0], [91.1, 6977.0], [91.2, 6977.0], [91.3, 6977.0], [91.4, 6977.0], [91.5, 6977.0], [91.6, 6977.0], [91.7, 6977.0], [91.8, 6977.0], [91.9, 6977.0], [92.0, 7022.0], [92.1, 7022.0], [92.2, 7022.0], [92.3, 7022.0], [92.4, 7022.0], [92.5, 7022.0], [92.6, 7022.0], [92.7, 7022.0], [92.8, 7022.0], [92.9, 7022.0], [93.0, 7115.0], [93.1, 7115.0], [93.2, 7115.0], [93.3, 7115.0], [93.4, 7115.0], [93.5, 7115.0], [93.6, 7115.0], [93.7, 7115.0], [93.8, 7115.0], [93.9, 7115.0], [94.0, 7128.0], [94.1, 7128.0], [94.2, 7128.0], [94.3, 7128.0], [94.4, 7128.0], [94.5, 7128.0], [94.6, 7128.0], [94.7, 7128.0], [94.8, 7128.0], [94.9, 7128.0], [95.0, 7237.0], [95.1, 7237.0], [95.2, 7237.0], [95.3, 7237.0], [95.4, 7237.0], [95.5, 7237.0], [95.6, 7237.0], [95.7, 7237.0], [95.8, 7237.0], [95.9, 7237.0], [96.0, 7255.0], [96.1, 7255.0], [96.2, 7255.0], [96.3, 7255.0], [96.4, 7255.0], [96.5, 7255.0], [96.6, 7255.0], [96.7, 7255.0], [96.8, 7255.0], [96.9, 7255.0], [97.0, 7355.0], [97.1, 7355.0], [97.2, 7355.0], [97.3, 7355.0], [97.4, 7355.0], [97.5, 7355.0], [97.6, 7355.0], [97.7, 7355.0], [97.8, 7355.0], [97.9, 7355.0], [98.0, 7633.0], [98.1, 7633.0], [98.2, 7633.0], [98.3, 7633.0], [98.4, 7633.0], [98.5, 7633.0], [98.6, 7633.0], [98.7, 7633.0], [98.8, 7633.0], [98.9, 7633.0], [99.0, 7647.0], [99.1, 7647.0], [99.2, 7647.0], [99.3, 7647.0], [99.4, 7647.0], [99.5, 7647.0], [99.6, 7647.0], [99.7, 7647.0], [99.8, 7647.0], [99.9, 7647.0]], "isOverall": false, "label": "Item Details", "isController": false}, {"data": [[0.0, 2189.0], [0.1, 2189.0], [0.2, 2189.0], [0.3, 2189.0], [0.4, 2189.0], [0.5, 2189.0], [0.6, 2189.0], [0.7, 2189.0], [0.8, 2189.0], [0.9, 2189.0], [1.0, 2262.0], [1.1, 2262.0], [1.2, 2262.0], [1.3, 2262.0], [1.4, 2262.0], [1.5, 2262.0], [1.6, 2262.0], [1.7, 2262.0], [1.8, 2262.0], [1.9, 2262.0], [2.0, 2268.0], [2.1, 2268.0], [2.2, 2268.0], [2.3, 2268.0], [2.4, 2268.0], [2.5, 2268.0], [2.6, 2268.0], [2.7, 2268.0], [2.8, 2268.0], [2.9, 2268.0], [3.0, 2332.0], [3.1, 2332.0], [3.2, 2332.0], [3.3, 2332.0], [3.4, 2332.0], [3.5, 2332.0], [3.6, 2332.0], [3.7, 2332.0], [3.8, 2332.0], [3.9, 2332.0], [4.0, 2354.0], [4.1, 2354.0], [4.2, 2354.0], [4.3, 2354.0], [4.4, 2354.0], [4.5, 2354.0], [4.6, 2354.0], [4.7, 2354.0], [4.8, 2354.0], [4.9, 2354.0], [5.0, 2355.0], [5.1, 2355.0], [5.2, 2355.0], [5.3, 2355.0], [5.4, 2355.0], [5.5, 2355.0], [5.6, 2355.0], [5.7, 2355.0], [5.8, 2355.0], [5.9, 2355.0], [6.0, 2369.0], [6.1, 2369.0], [6.2, 2369.0], [6.3, 2369.0], [6.4, 2369.0], [6.5, 2369.0], [6.6, 2369.0], [6.7, 2369.0], [6.8, 2369.0], [6.9, 2369.0], [7.0, 2446.0], [7.1, 2446.0], [7.2, 2446.0], [7.3, 2446.0], [7.4, 2446.0], [7.5, 2446.0], [7.6, 2446.0], [7.7, 2446.0], [7.8, 2446.0], [7.9, 2446.0], [8.0, 2501.0], [8.1, 2501.0], [8.2, 2501.0], [8.3, 2501.0], [8.4, 2501.0], [8.5, 2501.0], [8.6, 2501.0], [8.7, 2501.0], [8.8, 2501.0], [8.9, 2501.0], [9.0, 2504.0], [9.1, 2504.0], [9.2, 2504.0], [9.3, 2504.0], [9.4, 2504.0], [9.5, 2504.0], [9.6, 2504.0], [9.7, 2504.0], [9.8, 2504.0], [9.9, 2504.0], [10.0, 2628.0], [10.1, 2628.0], [10.2, 2628.0], [10.3, 2628.0], [10.4, 2628.0], [10.5, 2628.0], [10.6, 2628.0], [10.7, 2628.0], [10.8, 2628.0], [10.9, 2628.0], [11.0, 2645.0], [11.1, 2645.0], [11.2, 2645.0], [11.3, 2645.0], [11.4, 2645.0], [11.5, 2645.0], [11.6, 2645.0], [11.7, 2645.0], [11.8, 2645.0], [11.9, 2645.0], [12.0, 2713.0], [12.1, 2713.0], [12.2, 2713.0], [12.3, 2713.0], [12.4, 2713.0], [12.5, 2713.0], [12.6, 2713.0], [12.7, 2713.0], [12.8, 2713.0], [12.9, 2713.0], [13.0, 2720.0], [13.1, 2720.0], [13.2, 2720.0], [13.3, 2720.0], [13.4, 2720.0], [13.5, 2720.0], [13.6, 2720.0], [13.7, 2720.0], [13.8, 2720.0], [13.9, 2720.0], [14.0, 2729.0], [14.1, 2729.0], [14.2, 2729.0], [14.3, 2729.0], [14.4, 2729.0], [14.5, 2729.0], [14.6, 2729.0], [14.7, 2729.0], [14.8, 2729.0], [14.9, 2729.0], [15.0, 2747.0], [15.1, 2747.0], [15.2, 2747.0], [15.3, 2747.0], [15.4, 2747.0], [15.5, 2747.0], [15.6, 2747.0], [15.7, 2747.0], [15.8, 2747.0], [15.9, 2747.0], [16.0, 2758.0], [16.1, 2758.0], [16.2, 2758.0], [16.3, 2758.0], [16.4, 2758.0], [16.5, 2758.0], [16.6, 2758.0], [16.7, 2758.0], [16.8, 2758.0], [16.9, 2758.0], [17.0, 2766.0], [17.1, 2766.0], [17.2, 2766.0], [17.3, 2766.0], [17.4, 2766.0], [17.5, 2766.0], [17.6, 2766.0], [17.7, 2766.0], [17.8, 2766.0], [17.9, 2766.0], [18.0, 2771.0], [18.1, 2771.0], [18.2, 2771.0], [18.3, 2771.0], [18.4, 2771.0], [18.5, 2771.0], [18.6, 2771.0], [18.7, 2771.0], [18.8, 2771.0], [18.9, 2771.0], [19.0, 2839.0], [19.1, 2839.0], [19.2, 2839.0], [19.3, 2839.0], [19.4, 2839.0], [19.5, 2839.0], [19.6, 2839.0], [19.7, 2839.0], [19.8, 2839.0], [19.9, 2839.0], [20.0, 2889.0], [20.1, 2889.0], [20.2, 2889.0], [20.3, 2889.0], [20.4, 2889.0], [20.5, 2889.0], [20.6, 2889.0], [20.7, 2889.0], [20.8, 2889.0], [20.9, 2889.0], [21.0, 2891.0], [21.1, 2891.0], [21.2, 2891.0], [21.3, 2891.0], [21.4, 2891.0], [21.5, 2891.0], [21.6, 2891.0], [21.7, 2891.0], [21.8, 2891.0], [21.9, 2891.0], [22.0, 2977.0], [22.1, 2977.0], [22.2, 2977.0], [22.3, 2977.0], [22.4, 2977.0], [22.5, 2977.0], [22.6, 2977.0], [22.7, 2977.0], [22.8, 2977.0], [22.9, 2977.0], [23.0, 3009.0], [23.1, 3009.0], [23.2, 3009.0], [23.3, 3009.0], [23.4, 3009.0], [23.5, 3009.0], [23.6, 3009.0], [23.7, 3009.0], [23.8, 3009.0], [23.9, 3009.0], [24.0, 3033.0], [24.1, 3033.0], [24.2, 3033.0], [24.3, 3033.0], [24.4, 3033.0], [24.5, 3033.0], [24.6, 3033.0], [24.7, 3033.0], [24.8, 3033.0], [24.9, 3033.0], [25.0, 3052.0], [25.1, 3052.0], [25.2, 3052.0], [25.3, 3052.0], [25.4, 3052.0], [25.5, 3052.0], [25.6, 3052.0], [25.7, 3052.0], [25.8, 3052.0], [25.9, 3052.0], [26.0, 3064.0], [26.1, 3064.0], [26.2, 3064.0], [26.3, 3064.0], [26.4, 3064.0], [26.5, 3064.0], [26.6, 3064.0], [26.7, 3064.0], [26.8, 3064.0], [26.9, 3064.0], [27.0, 3084.0], [27.1, 3084.0], [27.2, 3084.0], [27.3, 3084.0], [27.4, 3084.0], [27.5, 3084.0], [27.6, 3084.0], [27.7, 3084.0], [27.8, 3084.0], [27.9, 3084.0], [28.0, 3093.0], [28.1, 3093.0], [28.2, 3093.0], [28.3, 3093.0], [28.4, 3093.0], [28.5, 3093.0], [28.6, 3093.0], [28.7, 3093.0], [28.8, 3093.0], [28.9, 3093.0], [29.0, 3127.0], [29.1, 3127.0], [29.2, 3127.0], [29.3, 3127.0], [29.4, 3127.0], [29.5, 3127.0], [29.6, 3127.0], [29.7, 3127.0], [29.8, 3127.0], [29.9, 3127.0], [30.0, 3134.0], [30.1, 3134.0], [30.2, 3134.0], [30.3, 3134.0], [30.4, 3134.0], [30.5, 3134.0], [30.6, 3134.0], [30.7, 3134.0], [30.8, 3134.0], [30.9, 3134.0], [31.0, 3203.0], [31.1, 3203.0], [31.2, 3203.0], [31.3, 3203.0], [31.4, 3203.0], [31.5, 3203.0], [31.6, 3203.0], [31.7, 3203.0], [31.8, 3203.0], [31.9, 3203.0], [32.0, 3203.0], [32.1, 3203.0], [32.2, 3203.0], [32.3, 3203.0], [32.4, 3203.0], [32.5, 3203.0], [32.6, 3203.0], [32.7, 3203.0], [32.8, 3203.0], [32.9, 3203.0], [33.0, 3210.0], [33.1, 3210.0], [33.2, 3210.0], [33.3, 3210.0], [33.4, 3210.0], [33.5, 3210.0], [33.6, 3210.0], [33.7, 3210.0], [33.8, 3210.0], [33.9, 3210.0], [34.0, 3331.0], [34.1, 3331.0], [34.2, 3331.0], [34.3, 3331.0], [34.4, 3331.0], [34.5, 3331.0], [34.6, 3331.0], [34.7, 3331.0], [34.8, 3331.0], [34.9, 3331.0], [35.0, 3360.0], [35.1, 3360.0], [35.2, 3360.0], [35.3, 3360.0], [35.4, 3360.0], [35.5, 3360.0], [35.6, 3360.0], [35.7, 3360.0], [35.8, 3360.0], [35.9, 3360.0], [36.0, 3361.0], [36.1, 3361.0], [36.2, 3361.0], [36.3, 3361.0], [36.4, 3361.0], [36.5, 3361.0], [36.6, 3361.0], [36.7, 3361.0], [36.8, 3361.0], [36.9, 3361.0], [37.0, 3393.0], [37.1, 3393.0], [37.2, 3393.0], [37.3, 3393.0], [37.4, 3393.0], [37.5, 3393.0], [37.6, 3393.0], [37.7, 3393.0], [37.8, 3393.0], [37.9, 3393.0], [38.0, 3418.0], [38.1, 3418.0], [38.2, 3418.0], [38.3, 3418.0], [38.4, 3418.0], [38.5, 3418.0], [38.6, 3418.0], [38.7, 3418.0], [38.8, 3418.0], [38.9, 3418.0], [39.0, 3448.0], [39.1, 3448.0], [39.2, 3448.0], [39.3, 3448.0], [39.4, 3448.0], [39.5, 3448.0], [39.6, 3448.0], [39.7, 3448.0], [39.8, 3448.0], [39.9, 3448.0], [40.0, 3473.0], [40.1, 3473.0], [40.2, 3473.0], [40.3, 3473.0], [40.4, 3473.0], [40.5, 3473.0], [40.6, 3473.0], [40.7, 3473.0], [40.8, 3473.0], [40.9, 3473.0], [41.0, 3635.0], [41.1, 3635.0], [41.2, 3635.0], [41.3, 3635.0], [41.4, 3635.0], [41.5, 3635.0], [41.6, 3635.0], [41.7, 3635.0], [41.8, 3635.0], [41.9, 3635.0], [42.0, 3672.0], [42.1, 3672.0], [42.2, 3672.0], [42.3, 3672.0], [42.4, 3672.0], [42.5, 3672.0], [42.6, 3672.0], [42.7, 3672.0], [42.8, 3672.0], [42.9, 3672.0], [43.0, 3682.0], [43.1, 3682.0], [43.2, 3682.0], [43.3, 3682.0], [43.4, 3682.0], [43.5, 3682.0], [43.6, 3682.0], [43.7, 3682.0], [43.8, 3682.0], [43.9, 3682.0], [44.0, 3689.0], [44.1, 3689.0], [44.2, 3689.0], [44.3, 3689.0], [44.4, 3689.0], [44.5, 3689.0], [44.6, 3689.0], [44.7, 3689.0], [44.8, 3689.0], [44.9, 3689.0], [45.0, 3716.0], [45.1, 3716.0], [45.2, 3716.0], [45.3, 3716.0], [45.4, 3716.0], [45.5, 3716.0], [45.6, 3716.0], [45.7, 3716.0], [45.8, 3716.0], [45.9, 3716.0], [46.0, 3717.0], [46.1, 3717.0], [46.2, 3717.0], [46.3, 3717.0], [46.4, 3717.0], [46.5, 3717.0], [46.6, 3717.0], [46.7, 3717.0], [46.8, 3717.0], [46.9, 3717.0], [47.0, 3722.0], [47.1, 3722.0], [47.2, 3722.0], [47.3, 3722.0], [47.4, 3722.0], [47.5, 3722.0], [47.6, 3722.0], [47.7, 3722.0], [47.8, 3722.0], [47.9, 3722.0], [48.0, 3730.0], [48.1, 3730.0], [48.2, 3730.0], [48.3, 3730.0], [48.4, 3730.0], [48.5, 3730.0], [48.6, 3730.0], [48.7, 3730.0], [48.8, 3730.0], [48.9, 3730.0], [49.0, 3805.0], [49.1, 3805.0], [49.2, 3805.0], [49.3, 3805.0], [49.4, 3805.0], [49.5, 3805.0], [49.6, 3805.0], [49.7, 3805.0], [49.8, 3805.0], [49.9, 3805.0], [50.0, 3853.0], [50.1, 3853.0], [50.2, 3853.0], [50.3, 3853.0], [50.4, 3853.0], [50.5, 3853.0], [50.6, 3853.0], [50.7, 3853.0], [50.8, 3853.0], [50.9, 3853.0], [51.0, 3867.0], [51.1, 3867.0], [51.2, 3867.0], [51.3, 3867.0], [51.4, 3867.0], [51.5, 3867.0], [51.6, 3867.0], [51.7, 3867.0], [51.8, 3867.0], [51.9, 3867.0], [52.0, 3878.0], [52.1, 3878.0], [52.2, 3878.0], [52.3, 3878.0], [52.4, 3878.0], [52.5, 3878.0], [52.6, 3878.0], [52.7, 3878.0], [52.8, 3878.0], [52.9, 3878.0], [53.0, 3895.0], [53.1, 3895.0], [53.2, 3895.0], [53.3, 3895.0], [53.4, 3895.0], [53.5, 3895.0], [53.6, 3895.0], [53.7, 3895.0], [53.8, 3895.0], [53.9, 3895.0], [54.0, 3986.0], [54.1, 3986.0], [54.2, 3986.0], [54.3, 3986.0], [54.4, 3986.0], [54.5, 3986.0], [54.6, 3986.0], [54.7, 3986.0], [54.8, 3986.0], [54.9, 3986.0], [55.0, 4033.0], [55.1, 4033.0], [55.2, 4033.0], [55.3, 4033.0], [55.4, 4033.0], [55.5, 4033.0], [55.6, 4033.0], [55.7, 4033.0], [55.8, 4033.0], [55.9, 4033.0], [56.0, 4081.0], [56.1, 4081.0], [56.2, 4081.0], [56.3, 4081.0], [56.4, 4081.0], [56.5, 4081.0], [56.6, 4081.0], [56.7, 4081.0], [56.8, 4081.0], [56.9, 4081.0], [57.0, 4086.0], [57.1, 4086.0], [57.2, 4086.0], [57.3, 4086.0], [57.4, 4086.0], [57.5, 4086.0], [57.6, 4086.0], [57.7, 4086.0], [57.8, 4086.0], [57.9, 4086.0], [58.0, 4131.0], [58.1, 4131.0], [58.2, 4131.0], [58.3, 4131.0], [58.4, 4131.0], [58.5, 4131.0], [58.6, 4131.0], [58.7, 4131.0], [58.8, 4131.0], [58.9, 4131.0], [59.0, 4155.0], [59.1, 4155.0], [59.2, 4155.0], [59.3, 4155.0], [59.4, 4155.0], [59.5, 4155.0], [59.6, 4155.0], [59.7, 4155.0], [59.8, 4155.0], [59.9, 4155.0], [60.0, 4179.0], [60.1, 4179.0], [60.2, 4179.0], [60.3, 4179.0], [60.4, 4179.0], [60.5, 4179.0], [60.6, 4179.0], [60.7, 4179.0], [60.8, 4179.0], [60.9, 4179.0], [61.0, 4206.0], [61.1, 4206.0], [61.2, 4206.0], [61.3, 4206.0], [61.4, 4206.0], [61.5, 4206.0], [61.6, 4206.0], [61.7, 4206.0], [61.8, 4206.0], [61.9, 4206.0], [62.0, 4212.0], [62.1, 4212.0], [62.2, 4212.0], [62.3, 4212.0], [62.4, 4212.0], [62.5, 4212.0], [62.6, 4212.0], [62.7, 4212.0], [62.8, 4212.0], [62.9, 4212.0], [63.0, 4223.0], [63.1, 4223.0], [63.2, 4223.0], [63.3, 4223.0], [63.4, 4223.0], [63.5, 4223.0], [63.6, 4223.0], [63.7, 4223.0], [63.8, 4223.0], [63.9, 4223.0], [64.0, 4315.0], [64.1, 4315.0], [64.2, 4315.0], [64.3, 4315.0], [64.4, 4315.0], [64.5, 4315.0], [64.6, 4315.0], [64.7, 4315.0], [64.8, 4315.0], [64.9, 4315.0], [65.0, 4380.0], [65.1, 4380.0], [65.2, 4380.0], [65.3, 4380.0], [65.4, 4380.0], [65.5, 4380.0], [65.6, 4380.0], [65.7, 4380.0], [65.8, 4380.0], [65.9, 4380.0], [66.0, 4409.0], [66.1, 4409.0], [66.2, 4409.0], [66.3, 4409.0], [66.4, 4409.0], [66.5, 4409.0], [66.6, 4409.0], [66.7, 4409.0], [66.8, 4409.0], [66.9, 4409.0], [67.0, 4589.0], [67.1, 4589.0], [67.2, 4589.0], [67.3, 4589.0], [67.4, 4589.0], [67.5, 4589.0], [67.6, 4589.0], [67.7, 4589.0], [67.8, 4589.0], [67.9, 4589.0], [68.0, 4688.0], [68.1, 4688.0], [68.2, 4688.0], [68.3, 4688.0], [68.4, 4688.0], [68.5, 4688.0], [68.6, 4688.0], [68.7, 4688.0], [68.8, 4688.0], [68.9, 4688.0], [69.0, 4693.0], [69.1, 4693.0], [69.2, 4693.0], [69.3, 4693.0], [69.4, 4693.0], [69.5, 4693.0], [69.6, 4693.0], [69.7, 4693.0], [69.8, 4693.0], [69.9, 4693.0], [70.0, 4712.0], [70.1, 4712.0], [70.2, 4712.0], [70.3, 4712.0], [70.4, 4712.0], [70.5, 4712.0], [70.6, 4712.0], [70.7, 4712.0], [70.8, 4712.0], [70.9, 4712.0], [71.0, 4746.0], [71.1, 4746.0], [71.2, 4746.0], [71.3, 4746.0], [71.4, 4746.0], [71.5, 4746.0], [71.6, 4746.0], [71.7, 4746.0], [71.8, 4746.0], [71.9, 4746.0], [72.0, 4769.0], [72.1, 4769.0], [72.2, 4769.0], [72.3, 4769.0], [72.4, 4769.0], [72.5, 4769.0], [72.6, 4769.0], [72.7, 4769.0], [72.8, 4769.0], [72.9, 4769.0], [73.0, 4822.0], [73.1, 4822.0], [73.2, 4822.0], [73.3, 4822.0], [73.4, 4822.0], [73.5, 4822.0], [73.6, 4822.0], [73.7, 4822.0], [73.8, 4822.0], [73.9, 4822.0], [74.0, 4859.0], [74.1, 4859.0], [74.2, 4859.0], [74.3, 4859.0], [74.4, 4859.0], [74.5, 4859.0], [74.6, 4859.0], [74.7, 4859.0], [74.8, 4859.0], [74.9, 4859.0], [75.0, 4872.0], [75.1, 4872.0], [75.2, 4872.0], [75.3, 4872.0], [75.4, 4872.0], [75.5, 4872.0], [75.6, 4872.0], [75.7, 4872.0], [75.8, 4872.0], [75.9, 4872.0], [76.0, 4922.0], [76.1, 4922.0], [76.2, 4922.0], [76.3, 4922.0], [76.4, 4922.0], [76.5, 4922.0], [76.6, 4922.0], [76.7, 4922.0], [76.8, 4922.0], [76.9, 4922.0], [77.0, 5071.0], [77.1, 5071.0], [77.2, 5071.0], [77.3, 5071.0], [77.4, 5071.0], [77.5, 5071.0], [77.6, 5071.0], [77.7, 5071.0], [77.8, 5071.0], [77.9, 5071.0], [78.0, 5106.0], [78.1, 5106.0], [78.2, 5106.0], [78.3, 5106.0], [78.4, 5106.0], [78.5, 5106.0], [78.6, 5106.0], [78.7, 5106.0], [78.8, 5106.0], [78.9, 5106.0], [79.0, 5122.0], [79.1, 5122.0], [79.2, 5122.0], [79.3, 5122.0], [79.4, 5122.0], [79.5, 5122.0], [79.6, 5122.0], [79.7, 5122.0], [79.8, 5122.0], [79.9, 5122.0], [80.0, 5129.0], [80.1, 5129.0], [80.2, 5129.0], [80.3, 5129.0], [80.4, 5129.0], [80.5, 5129.0], [80.6, 5129.0], [80.7, 5129.0], [80.8, 5129.0], [80.9, 5129.0], [81.0, 5150.0], [81.1, 5150.0], [81.2, 5150.0], [81.3, 5150.0], [81.4, 5150.0], [81.5, 5150.0], [81.6, 5150.0], [81.7, 5150.0], [81.8, 5150.0], [81.9, 5150.0], [82.0, 5162.0], [82.1, 5162.0], [82.2, 5162.0], [82.3, 5162.0], [82.4, 5162.0], [82.5, 5162.0], [82.6, 5162.0], [82.7, 5162.0], [82.8, 5162.0], [82.9, 5162.0], [83.0, 5195.0], [83.1, 5195.0], [83.2, 5195.0], [83.3, 5195.0], [83.4, 5195.0], [83.5, 5195.0], [83.6, 5195.0], [83.7, 5195.0], [83.8, 5195.0], [83.9, 5195.0], [84.0, 5242.0], [84.1, 5242.0], [84.2, 5242.0], [84.3, 5242.0], [84.4, 5242.0], [84.5, 5242.0], [84.6, 5242.0], [84.7, 5242.0], [84.8, 5242.0], [84.9, 5242.0], [85.0, 5248.0], [85.1, 5248.0], [85.2, 5248.0], [85.3, 5248.0], [85.4, 5248.0], [85.5, 5248.0], [85.6, 5248.0], [85.7, 5248.0], [85.8, 5248.0], [85.9, 5248.0], [86.0, 5308.0], [86.1, 5308.0], [86.2, 5308.0], [86.3, 5308.0], [86.4, 5308.0], [86.5, 5308.0], [86.6, 5308.0], [86.7, 5308.0], [86.8, 5308.0], [86.9, 5308.0], [87.0, 5350.0], [87.1, 5350.0], [87.2, 5350.0], [87.3, 5350.0], [87.4, 5350.0], [87.5, 5350.0], [87.6, 5350.0], [87.7, 5350.0], [87.8, 5350.0], [87.9, 5350.0], [88.0, 5370.0], [88.1, 5370.0], [88.2, 5370.0], [88.3, 5370.0], [88.4, 5370.0], [88.5, 5370.0], [88.6, 5370.0], [88.7, 5370.0], [88.8, 5370.0], [88.9, 5370.0], [89.0, 5380.0], [89.1, 5380.0], [89.2, 5380.0], [89.3, 5380.0], [89.4, 5380.0], [89.5, 5380.0], [89.6, 5380.0], [89.7, 5380.0], [89.8, 5380.0], [89.9, 5380.0], [90.0, 5439.0], [90.1, 5439.0], [90.2, 5439.0], [90.3, 5439.0], [90.4, 5439.0], [90.5, 5439.0], [90.6, 5439.0], [90.7, 5439.0], [90.8, 5439.0], [90.9, 5439.0], [91.0, 5576.0], [91.1, 5576.0], [91.2, 5576.0], [91.3, 5576.0], [91.4, 5576.0], [91.5, 5576.0], [91.6, 5576.0], [91.7, 5576.0], [91.8, 5576.0], [91.9, 5576.0], [92.0, 5647.0], [92.1, 5647.0], [92.2, 5647.0], [92.3, 5647.0], [92.4, 5647.0], [92.5, 5647.0], [92.6, 5647.0], [92.7, 5647.0], [92.8, 5647.0], [92.9, 5647.0], [93.0, 5776.0], [93.1, 5776.0], [93.2, 5776.0], [93.3, 5776.0], [93.4, 5776.0], [93.5, 5776.0], [93.6, 5776.0], [93.7, 5776.0], [93.8, 5776.0], [93.9, 5776.0], [94.0, 5790.0], [94.1, 5790.0], [94.2, 5790.0], [94.3, 5790.0], [94.4, 5790.0], [94.5, 5790.0], [94.6, 5790.0], [94.7, 5790.0], [94.8, 5790.0], [94.9, 5790.0], [95.0, 5857.0], [95.1, 5857.0], [95.2, 5857.0], [95.3, 5857.0], [95.4, 5857.0], [95.5, 5857.0], [95.6, 5857.0], [95.7, 5857.0], [95.8, 5857.0], [95.9, 5857.0], [96.0, 6018.0], [96.1, 6018.0], [96.2, 6018.0], [96.3, 6018.0], [96.4, 6018.0], [96.5, 6018.0], [96.6, 6018.0], [96.7, 6018.0], [96.8, 6018.0], [96.9, 6018.0], [97.0, 6201.0], [97.1, 6201.0], [97.2, 6201.0], [97.3, 6201.0], [97.4, 6201.0], [97.5, 6201.0], [97.6, 6201.0], [97.7, 6201.0], [97.8, 6201.0], [97.9, 6201.0], [98.0, 6407.0], [98.1, 6407.0], [98.2, 6407.0], [98.3, 6407.0], [98.4, 6407.0], [98.5, 6407.0], [98.6, 6407.0], [98.7, 6407.0], [98.8, 6407.0], [98.9, 6407.0], [99.0, 6635.0], [99.1, 6635.0], [99.2, 6635.0], [99.3, 6635.0], [99.4, 6635.0], [99.5, 6635.0], [99.6, 6635.0], [99.7, 6635.0], [99.8, 6635.0], [99.9, 6635.0]], "isOverall": false, "label": "View Items", "isController": false}, {"data": [[0.0, 1821.0], [0.1, 1821.0], [0.2, 1821.0], [0.3, 1821.0], [0.4, 1821.0], [0.5, 1821.0], [0.6, 1821.0], [0.7, 1821.0], [0.8, 1821.0], [0.9, 1821.0], [1.0, 1846.0], [1.1, 1846.0], [1.2, 1846.0], [1.3, 1846.0], [1.4, 1846.0], [1.5, 1846.0], [1.6, 1846.0], [1.7, 1846.0], [1.8, 1846.0], [1.9, 1846.0], [2.0, 1846.0], [2.1, 1846.0], [2.2, 1846.0], [2.3, 1846.0], [2.4, 1846.0], [2.5, 1846.0], [2.6, 1846.0], [2.7, 1846.0], [2.8, 1846.0], [2.9, 1846.0], [3.0, 1875.0], [3.1, 1875.0], [3.2, 1875.0], [3.3, 1875.0], [3.4, 1875.0], [3.5, 1875.0], [3.6, 1875.0], [3.7, 1875.0], [3.8, 1875.0], [3.9, 1875.0], [4.0, 1910.0], [4.1, 1910.0], [4.2, 1910.0], [4.3, 1910.0], [4.4, 1910.0], [4.5, 1910.0], [4.6, 1910.0], [4.7, 1910.0], [4.8, 1910.0], [4.9, 1910.0], [5.0, 1916.0], [5.1, 1916.0], [5.2, 1916.0], [5.3, 1916.0], [5.4, 1916.0], [5.5, 1916.0], [5.6, 1916.0], [5.7, 1916.0], [5.8, 1916.0], [5.9, 1916.0], [6.0, 1926.0], [6.1, 1926.0], [6.2, 1926.0], [6.3, 1926.0], [6.4, 1926.0], [6.5, 1926.0], [6.6, 1926.0], [6.7, 1926.0], [6.8, 1926.0], [6.9, 1926.0], [7.0, 1930.0], [7.1, 1930.0], [7.2, 1930.0], [7.3, 1930.0], [7.4, 1930.0], [7.5, 1930.0], [7.6, 1930.0], [7.7, 1930.0], [7.8, 1930.0], [7.9, 1930.0], [8.0, 1938.0], [8.1, 1938.0], [8.2, 1938.0], [8.3, 1938.0], [8.4, 1938.0], [8.5, 1938.0], [8.6, 1938.0], [8.7, 1938.0], [8.8, 1938.0], [8.9, 1938.0], [9.0, 1940.0], [9.1, 1940.0], [9.2, 1940.0], [9.3, 1940.0], [9.4, 1940.0], [9.5, 1940.0], [9.6, 1940.0], [9.7, 1940.0], [9.8, 1940.0], [9.9, 1940.0], [10.0, 1944.0], [10.1, 1944.0], [10.2, 1944.0], [10.3, 1944.0], [10.4, 1944.0], [10.5, 1944.0], [10.6, 1944.0], [10.7, 1944.0], [10.8, 1944.0], [10.9, 1944.0], [11.0, 1946.0], [11.1, 1946.0], [11.2, 1946.0], [11.3, 1946.0], [11.4, 1946.0], [11.5, 1946.0], [11.6, 1946.0], [11.7, 1946.0], [11.8, 1946.0], [11.9, 1946.0], [12.0, 1949.0], [12.1, 1949.0], [12.2, 1949.0], [12.3, 1949.0], [12.4, 1949.0], [12.5, 1949.0], [12.6, 1949.0], [12.7, 1949.0], [12.8, 1949.0], [12.9, 1949.0], [13.0, 1952.0], [13.1, 1952.0], [13.2, 1952.0], [13.3, 1952.0], [13.4, 1952.0], [13.5, 1952.0], [13.6, 1952.0], [13.7, 1952.0], [13.8, 1952.0], [13.9, 1952.0], [14.0, 1959.0], [14.1, 1959.0], [14.2, 1959.0], [14.3, 1959.0], [14.4, 1959.0], [14.5, 1959.0], [14.6, 1959.0], [14.7, 1959.0], [14.8, 1959.0], [14.9, 1959.0], [15.0, 1960.0], [15.1, 1960.0], [15.2, 1960.0], [15.3, 1960.0], [15.4, 1960.0], [15.5, 1960.0], [15.6, 1960.0], [15.7, 1960.0], [15.8, 1960.0], [15.9, 1960.0], [16.0, 1963.0], [16.1, 1963.0], [16.2, 1963.0], [16.3, 1963.0], [16.4, 1963.0], [16.5, 1963.0], [16.6, 1963.0], [16.7, 1963.0], [16.8, 1963.0], [16.9, 1963.0], [17.0, 1978.0], [17.1, 1978.0], [17.2, 1978.0], [17.3, 1978.0], [17.4, 1978.0], [17.5, 1978.0], [17.6, 1978.0], [17.7, 1978.0], [17.8, 1978.0], [17.9, 1978.0], [18.0, 1988.0], [18.1, 1988.0], [18.2, 1988.0], [18.3, 1988.0], [18.4, 1988.0], [18.5, 1988.0], [18.6, 1988.0], [18.7, 1988.0], [18.8, 1988.0], [18.9, 1988.0], [19.0, 1990.0], [19.1, 1990.0], [19.2, 1990.0], [19.3, 1990.0], [19.4, 1990.0], [19.5, 1990.0], [19.6, 1990.0], [19.7, 1990.0], [19.8, 1990.0], [19.9, 1990.0], [20.0, 1995.0], [20.1, 1995.0], [20.2, 1995.0], [20.3, 1995.0], [20.4, 1995.0], [20.5, 1995.0], [20.6, 1995.0], [20.7, 1995.0], [20.8, 1995.0], [20.9, 1995.0], [21.0, 2005.0], [21.1, 2005.0], [21.2, 2005.0], [21.3, 2005.0], [21.4, 2005.0], [21.5, 2005.0], [21.6, 2005.0], [21.7, 2005.0], [21.8, 2005.0], [21.9, 2005.0], [22.0, 2021.0], [22.1, 2021.0], [22.2, 2021.0], [22.3, 2021.0], [22.4, 2021.0], [22.5, 2021.0], [22.6, 2021.0], [22.7, 2021.0], [22.8, 2021.0], [22.9, 2021.0], [23.0, 2024.0], [23.1, 2024.0], [23.2, 2024.0], [23.3, 2024.0], [23.4, 2024.0], [23.5, 2024.0], [23.6, 2024.0], [23.7, 2024.0], [23.8, 2024.0], [23.9, 2024.0], [24.0, 2039.0], [24.1, 2039.0], [24.2, 2039.0], [24.3, 2039.0], [24.4, 2039.0], [24.5, 2039.0], [24.6, 2039.0], [24.7, 2039.0], [24.8, 2039.0], [24.9, 2039.0], [25.0, 2042.0], [25.1, 2042.0], [25.2, 2042.0], [25.3, 2042.0], [25.4, 2042.0], [25.5, 2042.0], [25.6, 2042.0], [25.7, 2042.0], [25.8, 2042.0], [25.9, 2042.0], [26.0, 2081.0], [26.1, 2081.0], [26.2, 2081.0], [26.3, 2081.0], [26.4, 2081.0], [26.5, 2081.0], [26.6, 2081.0], [26.7, 2081.0], [26.8, 2081.0], [26.9, 2081.0], [27.0, 2091.0], [27.1, 2091.0], [27.2, 2091.0], [27.3, 2091.0], [27.4, 2091.0], [27.5, 2091.0], [27.6, 2091.0], [27.7, 2091.0], [27.8, 2091.0], [27.9, 2091.0], [28.0, 2098.0], [28.1, 2098.0], [28.2, 2098.0], [28.3, 2098.0], [28.4, 2098.0], [28.5, 2098.0], [28.6, 2098.0], [28.7, 2098.0], [28.8, 2098.0], [28.9, 2098.0], [29.0, 2129.0], [29.1, 2129.0], [29.2, 2129.0], [29.3, 2129.0], [29.4, 2129.0], [29.5, 2129.0], [29.6, 2129.0], [29.7, 2129.0], [29.8, 2129.0], [29.9, 2129.0], [30.0, 2151.0], [30.1, 2151.0], [30.2, 2151.0], [30.3, 2151.0], [30.4, 2151.0], [30.5, 2151.0], [30.6, 2151.0], [30.7, 2151.0], [30.8, 2151.0], [30.9, 2151.0], [31.0, 2161.0], [31.1, 2161.0], [31.2, 2161.0], [31.3, 2161.0], [31.4, 2161.0], [31.5, 2161.0], [31.6, 2161.0], [31.7, 2161.0], [31.8, 2161.0], [31.9, 2161.0], [32.0, 2163.0], [32.1, 2163.0], [32.2, 2163.0], [32.3, 2163.0], [32.4, 2163.0], [32.5, 2163.0], [32.6, 2163.0], [32.7, 2163.0], [32.8, 2163.0], [32.9, 2163.0], [33.0, 2165.0], [33.1, 2165.0], [33.2, 2165.0], [33.3, 2165.0], [33.4, 2165.0], [33.5, 2165.0], [33.6, 2165.0], [33.7, 2165.0], [33.8, 2165.0], [33.9, 2165.0], [34.0, 2165.0], [34.1, 2165.0], [34.2, 2165.0], [34.3, 2165.0], [34.4, 2165.0], [34.5, 2165.0], [34.6, 2165.0], [34.7, 2165.0], [34.8, 2165.0], [34.9, 2165.0], [35.0, 2184.0], [35.1, 2184.0], [35.2, 2184.0], [35.3, 2184.0], [35.4, 2184.0], [35.5, 2184.0], [35.6, 2184.0], [35.7, 2184.0], [35.8, 2184.0], [35.9, 2184.0], [36.0, 2218.0], [36.1, 2218.0], [36.2, 2218.0], [36.3, 2218.0], [36.4, 2218.0], [36.5, 2218.0], [36.6, 2218.0], [36.7, 2218.0], [36.8, 2218.0], [36.9, 2218.0], [37.0, 2231.0], [37.1, 2231.0], [37.2, 2231.0], [37.3, 2231.0], [37.4, 2231.0], [37.5, 2231.0], [37.6, 2231.0], [37.7, 2231.0], [37.8, 2231.0], [37.9, 2231.0], [38.0, 2273.0], [38.1, 2273.0], [38.2, 2273.0], [38.3, 2273.0], [38.4, 2273.0], [38.5, 2273.0], [38.6, 2273.0], [38.7, 2273.0], [38.8, 2273.0], [38.9, 2273.0], [39.0, 2287.0], [39.1, 2287.0], [39.2, 2287.0], [39.3, 2287.0], [39.4, 2287.0], [39.5, 2287.0], [39.6, 2287.0], [39.7, 2287.0], [39.8, 2287.0], [39.9, 2287.0], [40.0, 2297.0], [40.1, 2297.0], [40.2, 2297.0], [40.3, 2297.0], [40.4, 2297.0], [40.5, 2297.0], [40.6, 2297.0], [40.7, 2297.0], [40.8, 2297.0], [40.9, 2297.0], [41.0, 2354.0], [41.1, 2354.0], [41.2, 2354.0], [41.3, 2354.0], [41.4, 2354.0], [41.5, 2354.0], [41.6, 2354.0], [41.7, 2354.0], [41.8, 2354.0], [41.9, 2354.0], [42.0, 2449.0], [42.1, 2449.0], [42.2, 2449.0], [42.3, 2449.0], [42.4, 2449.0], [42.5, 2449.0], [42.6, 2449.0], [42.7, 2449.0], [42.8, 2449.0], [42.9, 2449.0], [43.0, 2480.0], [43.1, 2480.0], [43.2, 2480.0], [43.3, 2480.0], [43.4, 2480.0], [43.5, 2480.0], [43.6, 2480.0], [43.7, 2480.0], [43.8, 2480.0], [43.9, 2480.0], [44.0, 2489.0], [44.1, 2489.0], [44.2, 2489.0], [44.3, 2489.0], [44.4, 2489.0], [44.5, 2489.0], [44.6, 2489.0], [44.7, 2489.0], [44.8, 2489.0], [44.9, 2489.0], [45.0, 2501.0], [45.1, 2501.0], [45.2, 2501.0], [45.3, 2501.0], [45.4, 2501.0], [45.5, 2501.0], [45.6, 2501.0], [45.7, 2501.0], [45.8, 2501.0], [45.9, 2501.0], [46.0, 2503.0], [46.1, 2503.0], [46.2, 2503.0], [46.3, 2503.0], [46.4, 2503.0], [46.5, 2503.0], [46.6, 2503.0], [46.7, 2503.0], [46.8, 2503.0], [46.9, 2503.0], [47.0, 2505.0], [47.1, 2505.0], [47.2, 2505.0], [47.3, 2505.0], [47.4, 2505.0], [47.5, 2505.0], [47.6, 2505.0], [47.7, 2505.0], [47.8, 2505.0], [47.9, 2505.0], [48.0, 2506.0], [48.1, 2506.0], [48.2, 2506.0], [48.3, 2506.0], [48.4, 2506.0], [48.5, 2506.0], [48.6, 2506.0], [48.7, 2506.0], [48.8, 2506.0], [48.9, 2506.0], [49.0, 2550.0], [49.1, 2550.0], [49.2, 2550.0], [49.3, 2550.0], [49.4, 2550.0], [49.5, 2550.0], [49.6, 2550.0], [49.7, 2550.0], [49.8, 2550.0], [49.9, 2550.0], [50.0, 2651.0], [50.1, 2651.0], [50.2, 2651.0], [50.3, 2651.0], [50.4, 2651.0], [50.5, 2651.0], [50.6, 2651.0], [50.7, 2651.0], [50.8, 2651.0], [50.9, 2651.0], [51.0, 2676.0], [51.1, 2676.0], [51.2, 2676.0], [51.3, 2676.0], [51.4, 2676.0], [51.5, 2676.0], [51.6, 2676.0], [51.7, 2676.0], [51.8, 2676.0], [51.9, 2676.0], [52.0, 2773.0], [52.1, 2773.0], [52.2, 2773.0], [52.3, 2773.0], [52.4, 2773.0], [52.5, 2773.0], [52.6, 2773.0], [52.7, 2773.0], [52.8, 2773.0], [52.9, 2773.0], [53.0, 2821.0], [53.1, 2821.0], [53.2, 2821.0], [53.3, 2821.0], [53.4, 2821.0], [53.5, 2821.0], [53.6, 2821.0], [53.7, 2821.0], [53.8, 2821.0], [53.9, 2821.0], [54.0, 2834.0], [54.1, 2834.0], [54.2, 2834.0], [54.3, 2834.0], [54.4, 2834.0], [54.5, 2834.0], [54.6, 2834.0], [54.7, 2834.0], [54.8, 2834.0], [54.9, 2834.0], [55.0, 2886.0], [55.1, 2886.0], [55.2, 2886.0], [55.3, 2886.0], [55.4, 2886.0], [55.5, 2886.0], [55.6, 2886.0], [55.7, 2886.0], [55.8, 2886.0], [55.9, 2886.0], [56.0, 3029.0], [56.1, 3029.0], [56.2, 3029.0], [56.3, 3029.0], [56.4, 3029.0], [56.5, 3029.0], [56.6, 3029.0], [56.7, 3029.0], [56.8, 3029.0], [56.9, 3029.0], [57.0, 3054.0], [57.1, 3054.0], [57.2, 3054.0], [57.3, 3054.0], [57.4, 3054.0], [57.5, 3054.0], [57.6, 3054.0], [57.7, 3054.0], [57.8, 3054.0], [57.9, 3054.0], [58.0, 3074.0], [58.1, 3074.0], [58.2, 3074.0], [58.3, 3074.0], [58.4, 3074.0], [58.5, 3074.0], [58.6, 3074.0], [58.7, 3074.0], [58.8, 3074.0], [58.9, 3074.0], [59.0, 3121.0], [59.1, 3121.0], [59.2, 3121.0], [59.3, 3121.0], [59.4, 3121.0], [59.5, 3121.0], [59.6, 3121.0], [59.7, 3121.0], [59.8, 3121.0], [59.9, 3121.0], [60.0, 3357.0], [60.1, 3357.0], [60.2, 3357.0], [60.3, 3357.0], [60.4, 3357.0], [60.5, 3357.0], [60.6, 3357.0], [60.7, 3357.0], [60.8, 3357.0], [60.9, 3357.0], [61.0, 3524.0], [61.1, 3524.0], [61.2, 3524.0], [61.3, 3524.0], [61.4, 3524.0], [61.5, 3524.0], [61.6, 3524.0], [61.7, 3524.0], [61.8, 3524.0], [61.9, 3524.0], [62.0, 3544.0], [62.1, 3544.0], [62.2, 3544.0], [62.3, 3544.0], [62.4, 3544.0], [62.5, 3544.0], [62.6, 3544.0], [62.7, 3544.0], [62.8, 3544.0], [62.9, 3544.0], [63.0, 3560.0], [63.1, 3560.0], [63.2, 3560.0], [63.3, 3560.0], [63.4, 3560.0], [63.5, 3560.0], [63.6, 3560.0], [63.7, 3560.0], [63.8, 3560.0], [63.9, 3560.0], [64.0, 3654.0], [64.1, 3654.0], [64.2, 3654.0], [64.3, 3654.0], [64.4, 3654.0], [64.5, 3654.0], [64.6, 3654.0], [64.7, 3654.0], [64.8, 3654.0], [64.9, 3654.0], [65.0, 3751.0], [65.1, 3751.0], [65.2, 3751.0], [65.3, 3751.0], [65.4, 3751.0], [65.5, 3751.0], [65.6, 3751.0], [65.7, 3751.0], [65.8, 3751.0], [65.9, 3751.0], [66.0, 3808.0], [66.1, 3808.0], [66.2, 3808.0], [66.3, 3808.0], [66.4, 3808.0], [66.5, 3808.0], [66.6, 3808.0], [66.7, 3808.0], [66.8, 3808.0], [66.9, 3808.0], [67.0, 3876.0], [67.1, 3876.0], [67.2, 3876.0], [67.3, 3876.0], [67.4, 3876.0], [67.5, 3876.0], [67.6, 3876.0], [67.7, 3876.0], [67.8, 3876.0], [67.9, 3876.0], [68.0, 3902.0], [68.1, 3902.0], [68.2, 3902.0], [68.3, 3902.0], [68.4, 3902.0], [68.5, 3902.0], [68.6, 3902.0], [68.7, 3902.0], [68.8, 3902.0], [68.9, 3902.0], [69.0, 3927.0], [69.1, 3927.0], [69.2, 3927.0], [69.3, 3927.0], [69.4, 3927.0], [69.5, 3927.0], [69.6, 3927.0], [69.7, 3927.0], [69.8, 3927.0], [69.9, 3927.0], [70.0, 3929.0], [70.1, 3929.0], [70.2, 3929.0], [70.3, 3929.0], [70.4, 3929.0], [70.5, 3929.0], [70.6, 3929.0], [70.7, 3929.0], [70.8, 3929.0], [70.9, 3929.0], [71.0, 3963.0], [71.1, 3963.0], [71.2, 3963.0], [71.3, 3963.0], [71.4, 3963.0], [71.5, 3963.0], [71.6, 3963.0], [71.7, 3963.0], [71.8, 3963.0], [71.9, 3963.0], [72.0, 3986.0], [72.1, 3986.0], [72.2, 3986.0], [72.3, 3986.0], [72.4, 3986.0], [72.5, 3986.0], [72.6, 3986.0], [72.7, 3986.0], [72.8, 3986.0], [72.9, 3986.0], [73.0, 4004.0], [73.1, 4004.0], [73.2, 4004.0], [73.3, 4004.0], [73.4, 4004.0], [73.5, 4004.0], [73.6, 4004.0], [73.7, 4004.0], [73.8, 4004.0], [73.9, 4004.0], [74.0, 4099.0], [74.1, 4099.0], [74.2, 4099.0], [74.3, 4099.0], [74.4, 4099.0], [74.5, 4099.0], [74.6, 4099.0], [74.7, 4099.0], [74.8, 4099.0], [74.9, 4099.0], [75.0, 4128.0], [75.1, 4128.0], [75.2, 4128.0], [75.3, 4128.0], [75.4, 4128.0], [75.5, 4128.0], [75.6, 4128.0], [75.7, 4128.0], [75.8, 4128.0], [75.9, 4128.0], [76.0, 4134.0], [76.1, 4134.0], [76.2, 4134.0], [76.3, 4134.0], [76.4, 4134.0], [76.5, 4134.0], [76.6, 4134.0], [76.7, 4134.0], [76.8, 4134.0], [76.9, 4134.0], [77.0, 4154.0], [77.1, 4154.0], [77.2, 4154.0], [77.3, 4154.0], [77.4, 4154.0], [77.5, 4154.0], [77.6, 4154.0], [77.7, 4154.0], [77.8, 4154.0], [77.9, 4154.0], [78.0, 4158.0], [78.1, 4158.0], [78.2, 4158.0], [78.3, 4158.0], [78.4, 4158.0], [78.5, 4158.0], [78.6, 4158.0], [78.7, 4158.0], [78.8, 4158.0], [78.9, 4158.0], [79.0, 4168.0], [79.1, 4168.0], [79.2, 4168.0], [79.3, 4168.0], [79.4, 4168.0], [79.5, 4168.0], [79.6, 4168.0], [79.7, 4168.0], [79.8, 4168.0], [79.9, 4168.0], [80.0, 4186.0], [80.1, 4186.0], [80.2, 4186.0], [80.3, 4186.0], [80.4, 4186.0], [80.5, 4186.0], [80.6, 4186.0], [80.7, 4186.0], [80.8, 4186.0], [80.9, 4186.0], [81.0, 4204.0], [81.1, 4204.0], [81.2, 4204.0], [81.3, 4204.0], [81.4, 4204.0], [81.5, 4204.0], [81.6, 4204.0], [81.7, 4204.0], [81.8, 4204.0], [81.9, 4204.0], [82.0, 4219.0], [82.1, 4219.0], [82.2, 4219.0], [82.3, 4219.0], [82.4, 4219.0], [82.5, 4219.0], [82.6, 4219.0], [82.7, 4219.0], [82.8, 4219.0], [82.9, 4219.0], [83.0, 4220.0], [83.1, 4220.0], [83.2, 4220.0], [83.3, 4220.0], [83.4, 4220.0], [83.5, 4220.0], [83.6, 4220.0], [83.7, 4220.0], [83.8, 4220.0], [83.9, 4220.0], [84.0, 4232.0], [84.1, 4232.0], [84.2, 4232.0], [84.3, 4232.0], [84.4, 4232.0], [84.5, 4232.0], [84.6, 4232.0], [84.7, 4232.0], [84.8, 4232.0], [84.9, 4232.0], [85.0, 4254.0], [85.1, 4254.0], [85.2, 4254.0], [85.3, 4254.0], [85.4, 4254.0], [85.5, 4254.0], [85.6, 4254.0], [85.7, 4254.0], [85.8, 4254.0], [85.9, 4254.0], [86.0, 4273.0], [86.1, 4273.0], [86.2, 4273.0], [86.3, 4273.0], [86.4, 4273.0], [86.5, 4273.0], [86.6, 4273.0], [86.7, 4273.0], [86.8, 4273.0], [86.9, 4273.0], [87.0, 4306.0], [87.1, 4306.0], [87.2, 4306.0], [87.3, 4306.0], [87.4, 4306.0], [87.5, 4306.0], [87.6, 4306.0], [87.7, 4306.0], [87.8, 4306.0], [87.9, 4306.0], [88.0, 4324.0], [88.1, 4324.0], [88.2, 4324.0], [88.3, 4324.0], [88.4, 4324.0], [88.5, 4324.0], [88.6, 4324.0], [88.7, 4324.0], [88.8, 4324.0], [88.9, 4324.0], [89.0, 4342.0], [89.1, 4342.0], [89.2, 4342.0], [89.3, 4342.0], [89.4, 4342.0], [89.5, 4342.0], [89.6, 4342.0], [89.7, 4342.0], [89.8, 4342.0], [89.9, 4342.0], [90.0, 4386.0], [90.1, 4386.0], [90.2, 4386.0], [90.3, 4386.0], [90.4, 4386.0], [90.5, 4386.0], [90.6, 4386.0], [90.7, 4386.0], [90.8, 4386.0], [90.9, 4386.0], [91.0, 4511.0], [91.1, 4511.0], [91.2, 4511.0], [91.3, 4511.0], [91.4, 4511.0], [91.5, 4511.0], [91.6, 4511.0], [91.7, 4511.0], [91.8, 4511.0], [91.9, 4511.0], [92.0, 4553.0], [92.1, 4553.0], [92.2, 4553.0], [92.3, 4553.0], [92.4, 4553.0], [92.5, 4553.0], [92.6, 4553.0], [92.7, 4553.0], [92.8, 4553.0], [92.9, 4553.0], [93.0, 4612.0], [93.1, 4612.0], [93.2, 4612.0], [93.3, 4612.0], [93.4, 4612.0], [93.5, 4612.0], [93.6, 4612.0], [93.7, 4612.0], [93.8, 4612.0], [93.9, 4612.0], [94.0, 4638.0], [94.1, 4638.0], [94.2, 4638.0], [94.3, 4638.0], [94.4, 4638.0], [94.5, 4638.0], [94.6, 4638.0], [94.7, 4638.0], [94.8, 4638.0], [94.9, 4638.0], [95.0, 4796.0], [95.1, 4796.0], [95.2, 4796.0], [95.3, 4796.0], [95.4, 4796.0], [95.5, 4796.0], [95.6, 4796.0], [95.7, 4796.0], [95.8, 4796.0], [95.9, 4796.0], [96.0, 4886.0], [96.1, 4886.0], [96.2, 4886.0], [96.3, 4886.0], [96.4, 4886.0], [96.5, 4886.0], [96.6, 4886.0], [96.7, 4886.0], [96.8, 4886.0], [96.9, 4886.0], [97.0, 5019.0], [97.1, 5019.0], [97.2, 5019.0], [97.3, 5019.0], [97.4, 5019.0], [97.5, 5019.0], [97.6, 5019.0], [97.7, 5019.0], [97.8, 5019.0], [97.9, 5019.0], [98.0, 5184.0], [98.1, 5184.0], [98.2, 5184.0], [98.3, 5184.0], [98.4, 5184.0], [98.5, 5184.0], [98.6, 5184.0], [98.7, 5184.0], [98.8, 5184.0], [98.9, 5184.0], [99.0, 5224.0], [99.1, 5224.0], [99.2, 5224.0], [99.3, 5224.0], [99.4, 5224.0], [99.5, 5224.0], [99.6, 5224.0], [99.7, 5224.0], [99.8, 5224.0], [99.9, 5224.0]], "isOverall": false, "label": "Compare Item", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 1600.0, "maxY": 19.0, "series": [{"data": [[2100.0, 3.0], [2300.0, 3.0], [2200.0, 8.0], [2400.0, 4.0], [2500.0, 2.0], [2600.0, 6.0], [2700.0, 7.0], [2800.0, 5.0], [2900.0, 4.0], [3000.0, 1.0], [3100.0, 2.0], [3300.0, 2.0], [3200.0, 1.0], [3500.0, 1.0], [3700.0, 2.0], [3600.0, 1.0], [3800.0, 1.0], [4200.0, 1.0], [4600.0, 1.0], [1600.0, 3.0], [1700.0, 19.0], [1800.0, 10.0], [1900.0, 4.0], [2000.0, 9.0]], "isOverall": false, "label": "Category Drill down", "isController": false}, {"data": [[3400.0, 1.0], [3500.0, 1.0], [3700.0, 1.0], [3800.0, 5.0], [3900.0, 1.0], [4000.0, 3.0], [4300.0, 6.0], [4100.0, 2.0], [4200.0, 1.0], [4400.0, 3.0], [4500.0, 6.0], [4600.0, 1.0], [4700.0, 8.0], [4800.0, 6.0], [4900.0, 5.0], [5100.0, 4.0], [5000.0, 1.0], [5300.0, 4.0], [5200.0, 5.0], [5400.0, 1.0], [5700.0, 4.0], [5800.0, 1.0], [5900.0, 3.0], [6000.0, 4.0], [6300.0, 4.0], [6200.0, 2.0], [6500.0, 1.0], [6600.0, 1.0], [6400.0, 2.0], [6700.0, 2.0], [6800.0, 1.0], [6900.0, 2.0], [7100.0, 2.0], [7000.0, 1.0], [7300.0, 1.0], [7200.0, 2.0], [7600.0, 2.0]], "isOverall": false, "label": "Item Details", "isController": false}, {"data": [[2100.0, 1.0], [2300.0, 4.0], [2200.0, 2.0], [2400.0, 1.0], [2500.0, 2.0], [2600.0, 2.0], [2800.0, 3.0], [2700.0, 7.0], [2900.0, 1.0], [3000.0, 6.0], [3100.0, 2.0], [3200.0, 3.0], [3300.0, 4.0], [3400.0, 3.0], [3700.0, 4.0], [3600.0, 4.0], [3800.0, 5.0], [3900.0, 1.0], [4000.0, 3.0], [4100.0, 3.0], [4200.0, 3.0], [4300.0, 2.0], [4600.0, 2.0], [4400.0, 1.0], [4500.0, 1.0], [4700.0, 3.0], [4800.0, 3.0], [5000.0, 1.0], [4900.0, 1.0], [5100.0, 6.0], [5200.0, 2.0], [5300.0, 4.0], [5500.0, 1.0], [5600.0, 1.0], [5400.0, 1.0], [5700.0, 2.0], [5800.0, 1.0], [6000.0, 1.0], [6200.0, 1.0], [6400.0, 1.0], [6600.0, 1.0]], "isOverall": false, "label": "View Items", "isController": false}, {"data": [[1800.0, 4.0], [1900.0, 17.0], [2000.0, 8.0], [2100.0, 7.0], [2200.0, 5.0], [2300.0, 1.0], [2400.0, 3.0], [2500.0, 5.0], [2600.0, 2.0], [2800.0, 3.0], [2700.0, 1.0], [3000.0, 3.0], [3100.0, 1.0], [3300.0, 1.0], [3500.0, 3.0], [3700.0, 1.0], [3600.0, 1.0], [3800.0, 2.0], [3900.0, 5.0], [4000.0, 2.0], [4100.0, 6.0], [4300.0, 4.0], [4200.0, 6.0], [4600.0, 2.0], [4500.0, 2.0], [4700.0, 1.0], [4800.0, 1.0], [5000.0, 1.0], [5100.0, 1.0], [5200.0, 1.0]], "isOverall": false, "label": "Compare Item", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 7600.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 400.0, "minX": 2.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 400.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 400.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 67.07499999999997, "minX": 1.57312308E12, "maxY": 67.07499999999997, "series": [{"data": [[1.57312308E12, 67.07499999999997]], "isOverall": false, "label": "User_100-10", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57312308E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1694.5, "minX": 1.0, "maxY": 7355.0, "series": [{"data": [[21.0, 1976.5], [22.0, 1858.0], [24.0, 1757.0], [25.0, 1716.0], [26.0, 1708.0], [27.0, 1730.0], [28.0, 1703.0], [29.0, 1715.0], [30.0, 1713.0], [31.0, 1708.0], [32.0, 1698.0], [33.0, 1751.0], [34.0, 1701.0], [36.0, 1724.0], [37.0, 1694.5], [39.0, 1785.0], [41.0, 1818.0], [42.0, 1800.5], [43.0, 1740.0], [44.0, 1790.0], [46.0, 1814.0], [48.0, 1933.0], [50.0, 2050.0], [51.0, 2043.0], [52.0, 1952.5], [53.0, 1848.0], [55.0, 1811.0], [57.0, 2170.5], [60.0, 1948.0], [62.0, 2059.0], [63.0, 2703.0], [64.0, 2194.0], [65.0, 2253.0], [68.0, 2096.5], [72.0, 2087.5], [73.0, 2211.0], [74.0, 2248.0], [75.0, 2296.0], [77.0, 2028.0], [78.0, 2477.0], [80.0, 2211.0], [81.0, 2300.0], [83.0, 2217.5], [85.0, 2287.0], [86.0, 2242.0], [91.0, 3429.5], [95.0, 2809.0], [94.0, 3714.5], [93.0, 3732.0], [96.0, 2963.0], [97.0, 2748.5], [99.0, 2857.5], [100.0, 3005.5416666666665]], "isOverall": false, "label": "Category Drill down", "isController": false}, {"data": [[68.61999999999998, 2366.99]], "isOverall": false, "label": "Category Drill down-Aggregated", "isController": false}, {"data": [[35.0, 3416.0], [34.0, 3935.3333333333335], [37.0, 4049.0], [38.0, 4021.0], [41.0, 4393.333333333333], [43.0, 4733.0], [42.0, 3701.0], [44.0, 5214.0], [46.0, 4771.0], [49.0, 5038.0], [51.0, 6362.0], [50.0, 5081.428571428572], [53.0, 5713.0], [55.0, 7022.0], [54.0, 6270.0], [57.0, 6666.571428571428], [56.0, 7061.5], [59.0, 7128.0], [58.0, 7026.5], [61.0, 7355.0], [62.0, 6656.0], [65.0, 6597.5], [64.0, 6868.0], [71.0, 6776.0], [74.0, 6055.5], [72.0, 7115.0], [78.0, 6529.0], [81.0, 5485.0], [80.0, 5756.0], [86.0, 4788.0], [85.0, 5171.5], [84.0, 6015.0], [88.0, 5253.0], [95.0, 4403.5], [94.0, 5579.0], [93.0, 6327.0], [96.0, 4179.5], [97.0, 4916.499999999999], [98.0, 4366.0], [99.0, 4745.0], [100.0, 4801.235294117647], [18.0, 4057.0], [23.0, 3869.0], [31.0, 3511.0]], "isOverall": false, "label": "Item Details", "isController": false}, {"data": [[70.50999999999999, 5282.069999999998]], "isOverall": false, "label": "Item Details-Aggregated", "isController": false}, {"data": [[51.0, 2646.8], [54.0, 3206.5], [55.0, 2766.0], [56.0, 3020.5], [57.0, 2553.3333333333335], [59.0, 4168.75], [61.0, 4551.0], [62.0, 2891.0], [63.0, 3391.5], [64.0, 2355.0], [65.0, 4583.2], [66.0, 5136.0], [67.0, 3360.0], [70.0, 3084.0], [72.0, 2541.0], [73.0, 2758.0], [74.0, 3127.0], [75.0, 5350.0], [77.0, 2446.0], [78.0, 4733.8], [79.0, 4233.0], [80.0, 4620.857142857142], [81.0, 4715.5], [87.0, 3093.0], [86.0, 4206.0], [85.0, 4589.0], [90.0, 2839.0], [91.0, 3325.5], [88.0, 4712.0], [94.0, 3361.0], [93.0, 4081.0], [96.0, 3473.0], [98.0, 3899.0], [99.0, 3682.0], [97.0, 4390.8], [100.0, 3971.157894736842]], "isOverall": false, "label": "View Items", "isController": false}, {"data": [[78.66000000000001, 3957.5699999999997]], "isOverall": false, "label": "View Items-Aggregated", "isController": false}, {"data": [[2.0, 1846.0], [3.0, 1995.0], [4.0, 2354.0], [5.0, 1978.0], [6.0, 1988.0], [8.0, 1968.0], [9.0, 2165.0], [10.0, 2039.0], [11.0, 2231.0], [12.0, 2042.0], [13.0, 2098.0], [14.0, 2005.0], [15.0, 1938.0], [16.0, 2163.0], [17.0, 1963.0], [18.0, 1926.0], [19.0, 1952.0], [20.0, 1875.0], [21.0, 1940.0], [22.0, 1930.0], [23.0, 1960.0], [24.0, 1949.0], [25.0, 1846.0], [26.0, 1910.0], [27.0, 2024.0], [28.0, 2021.0], [29.0, 1959.0], [30.0, 1916.0], [31.0, 2506.0], [33.0, 2129.0], [32.0, 2480.0], [35.0, 1944.0], [34.0, 1821.0], [37.0, 2651.0], [36.0, 2151.0], [39.0, 2184.0], [38.0, 2505.0], [41.0, 2161.0], [40.0, 2297.0], [43.0, 2489.0], [42.0, 2287.0], [45.0, 2449.0], [44.0, 2273.0], [47.0, 2501.0], [46.0, 2081.0], [49.0, 2091.0], [48.0, 2550.0], [51.0, 2503.0], [50.0, 2165.0], [53.0, 2834.0], [52.0, 3654.0], [55.0, 2886.0], [54.0, 2773.0], [57.0, 5184.0], [56.0, 2676.0], [59.0, 4273.0], [58.0, 3876.0], [61.0, 3029.0], [60.0, 4186.0], [63.0, 3751.0], [62.0, 2821.0], [67.0, 5224.0], [66.0, 4511.0], [65.0, 4219.0], [64.0, 5019.0], [71.0, 4232.0], [70.0, 4168.0], [69.0, 3929.0], [68.0, 4004.0], [75.0, 3927.0], [74.0, 4099.0], [73.0, 4154.0], [72.0, 3902.0], [79.0, 4324.0], [78.0, 4638.0], [77.0, 4220.0], [76.0, 4886.0], [83.0, 4158.0], [82.0, 4204.0], [81.0, 4796.0], [80.0, 4553.0], [87.0, 4386.0], [86.0, 4342.0], [85.0, 4612.0], [84.0, 4134.0], [91.0, 3560.0], [90.0, 3544.0], [89.0, 4306.0], [88.0, 4254.0], [95.0, 3524.0], [94.0, 3986.0], [93.0, 4128.0], [92.0, 3963.0], [99.0, 3054.0], [98.0, 3121.0], [97.0, 3357.0], [96.0, 3808.0], [100.0, 3074.0], [1.0, 2218.0]], "isOverall": false, "label": "Compare Item", "isController": false}, {"data": [[50.510000000000005, 3026.4800000000005]], "isOverall": false, "label": "Compare Item-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 1523.3333333333333, "minX": 1.57312308E12, "maxY": 994008.3333333334, "series": [{"data": [[1.57312308E12, 994008.3333333334]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.57312308E12, 1523.3333333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57312308E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 2366.99, "minX": 1.57312308E12, "maxY": 5282.069999999998, "series": [{"data": [[1.57312308E12, 2366.99]], "isOverall": false, "label": "Category Drill down", "isController": false}, {"data": [[1.57312308E12, 5282.069999999998]], "isOverall": false, "label": "Item Details", "isController": false}, {"data": [[1.57312308E12, 3957.5699999999997]], "isOverall": false, "label": "View Items", "isController": false}, {"data": [[1.57312308E12, 3026.4800000000005]], "isOverall": false, "label": "Compare Item", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57312308E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1339.8999999999999, "minX": 1.57312308E12, "maxY": 3240.0800000000004, "series": [{"data": [[1.57312308E12, 1339.8999999999999]], "isOverall": false, "label": "Category Drill down", "isController": false}, {"data": [[1.57312308E12, 3240.0800000000004]], "isOverall": false, "label": "Item Details", "isController": false}, {"data": [[1.57312308E12, 2606.39]], "isOverall": false, "label": "View Items", "isController": false}, {"data": [[1.57312308E12, 1952.8000000000009]], "isOverall": false, "label": "Compare Item", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57312308E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 129.32999999999998, "minX": 1.57312308E12, "maxY": 202.54999999999998, "series": [{"data": [[1.57312308E12, 201.94000000000003]], "isOverall": false, "label": "Category Drill down", "isController": false}, {"data": [[1.57312308E12, 202.51000000000008]], "isOverall": false, "label": "Item Details", "isController": false}, {"data": [[1.57312308E12, 129.32999999999998]], "isOverall": false, "label": "View Items", "isController": false}, {"data": [[1.57312308E12, 202.54999999999998]], "isOverall": false, "label": "Compare Item", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57312308E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1639.0, "minX": 1.57312308E12, "maxY": 7647.0, "series": [{"data": [[1.57312308E12, 7647.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.57312308E12, 1639.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.57312308E12, 5753.700000000001]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.57312308E12, 7254.82]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.57312308E12, 6395.45]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57312308E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1715.0, "minX": 3.0, "maxY": 6034.5, "series": [{"data": [[32.0, 3699.5], [10.0, 1745.0], [11.0, 1715.0], [12.0, 2022.0], [3.0, 1995.0], [13.0, 2043.0], [14.0, 5339.0], [15.0, 4589.0], [17.0, 4638.0], [18.0, 3597.5], [19.0, 3148.0], [5.0, 1873.0], [22.0, 2828.5], [6.0, 2738.0], [24.0, 6034.5], [25.0, 2651.0], [27.0, 4033.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 32.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 678.0, "minX": 3.0, "maxY": 4026.0, "series": [{"data": [[32.0, 2241.0], [10.0, 715.0], [11.0, 678.0], [12.0, 934.5], [3.0, 815.0], [13.0, 1010.0], [14.0, 3977.5], [15.0, 3159.0], [17.0, 3370.0], [18.0, 2250.5], [19.0, 1990.5], [5.0, 876.0], [22.0, 1671.0], [6.0, 1645.0], [24.0, 4026.0], [25.0, 1420.0], [27.0, 2660.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 32.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 6.666666666666667, "minX": 1.57312308E12, "maxY": 6.666666666666667, "series": [{"data": [[1.57312308E12, 6.666666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57312308E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 6.666666666666667, "minX": 1.57312308E12, "maxY": 6.666666666666667, "series": [{"data": [[1.57312308E12, 6.666666666666667]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57312308E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.6666666666666667, "minX": 1.57312308E12, "maxY": 1.6666666666666667, "series": [{"data": [[1.57312308E12, 1.6666666666666667]], "isOverall": false, "label": "Compare Item-success", "isController": false}, {"data": [[1.57312308E12, 1.6666666666666667]], "isOverall": false, "label": "Category Drill down-success", "isController": false}, {"data": [[1.57312308E12, 1.6666666666666667]], "isOverall": false, "label": "Item Details-success", "isController": false}, {"data": [[1.57312308E12, 1.6666666666666667]], "isOverall": false, "label": "View Items-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57312308E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 6.666666666666667, "minX": 1.57312308E12, "maxY": 6.666666666666667, "series": [{"data": [[1.57312308E12, 6.666666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57312308E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

