/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1667.0, "minX": 0.0, "maxY": 5289.0, "series": [{"data": [[0.0, 1667.0], [0.1, 1667.0], [0.2, 1667.0], [0.3, 1667.0], [0.4, 1667.0], [0.5, 1667.0], [0.6, 1667.0], [0.7, 1667.0], [0.8, 1667.0], [0.9, 1667.0], [1.0, 1674.0], [1.1, 1674.0], [1.2, 1674.0], [1.3, 1674.0], [1.4, 1674.0], [1.5, 1674.0], [1.6, 1674.0], [1.7, 1674.0], [1.8, 1674.0], [1.9, 1674.0], [2.0, 1674.0], [2.1, 1674.0], [2.2, 1674.0], [2.3, 1674.0], [2.4, 1674.0], [2.5, 1674.0], [2.6, 1674.0], [2.7, 1674.0], [2.8, 1674.0], [2.9, 1674.0], [3.0, 1681.0], [3.1, 1681.0], [3.2, 1681.0], [3.3, 1681.0], [3.4, 1681.0], [3.5, 1681.0], [3.6, 1681.0], [3.7, 1681.0], [3.8, 1681.0], [3.9, 1681.0], [4.0, 1681.0], [4.1, 1681.0], [4.2, 1681.0], [4.3, 1681.0], [4.4, 1681.0], [4.5, 1681.0], [4.6, 1681.0], [4.7, 1681.0], [4.8, 1681.0], [4.9, 1681.0], [5.0, 1686.0], [5.1, 1686.0], [5.2, 1686.0], [5.3, 1686.0], [5.4, 1686.0], [5.5, 1686.0], [5.6, 1686.0], [5.7, 1686.0], [5.8, 1686.0], [5.9, 1686.0], [6.0, 1690.0], [6.1, 1690.0], [6.2, 1690.0], [6.3, 1690.0], [6.4, 1690.0], [6.5, 1690.0], [6.6, 1690.0], [6.7, 1690.0], [6.8, 1690.0], [6.9, 1690.0], [7.0, 1696.0], [7.1, 1696.0], [7.2, 1696.0], [7.3, 1696.0], [7.4, 1696.0], [7.5, 1696.0], [7.6, 1696.0], [7.7, 1696.0], [7.8, 1696.0], [7.9, 1696.0], [8.0, 1699.0], [8.1, 1699.0], [8.2, 1699.0], [8.3, 1699.0], [8.4, 1699.0], [8.5, 1699.0], [8.6, 1699.0], [8.7, 1699.0], [8.8, 1699.0], [8.9, 1699.0], [9.0, 1702.0], [9.1, 1702.0], [9.2, 1702.0], [9.3, 1702.0], [9.4, 1702.0], [9.5, 1702.0], [9.6, 1702.0], [9.7, 1702.0], [9.8, 1702.0], [9.9, 1702.0], [10.0, 1704.0], [10.1, 1704.0], [10.2, 1704.0], [10.3, 1704.0], [10.4, 1704.0], [10.5, 1704.0], [10.6, 1704.0], [10.7, 1704.0], [10.8, 1704.0], [10.9, 1704.0], [11.0, 1706.0], [11.1, 1706.0], [11.2, 1706.0], [11.3, 1706.0], [11.4, 1706.0], [11.5, 1706.0], [11.6, 1706.0], [11.7, 1706.0], [11.8, 1706.0], [11.9, 1706.0], [12.0, 1708.0], [12.1, 1708.0], [12.2, 1708.0], [12.3, 1708.0], [12.4, 1708.0], [12.5, 1708.0], [12.6, 1708.0], [12.7, 1708.0], [12.8, 1708.0], [12.9, 1708.0], [13.0, 1717.0], [13.1, 1717.0], [13.2, 1717.0], [13.3, 1717.0], [13.4, 1717.0], [13.5, 1717.0], [13.6, 1717.0], [13.7, 1717.0], [13.8, 1717.0], [13.9, 1717.0], [14.0, 1730.0], [14.1, 1730.0], [14.2, 1730.0], [14.3, 1730.0], [14.4, 1730.0], [14.5, 1730.0], [14.6, 1730.0], [14.7, 1730.0], [14.8, 1730.0], [14.9, 1730.0], [15.0, 1732.0], [15.1, 1732.0], [15.2, 1732.0], [15.3, 1732.0], [15.4, 1732.0], [15.5, 1732.0], [15.6, 1732.0], [15.7, 1732.0], [15.8, 1732.0], [15.9, 1732.0], [16.0, 1737.0], [16.1, 1737.0], [16.2, 1737.0], [16.3, 1737.0], [16.4, 1737.0], [16.5, 1737.0], [16.6, 1737.0], [16.7, 1737.0], [16.8, 1737.0], [16.9, 1737.0], [17.0, 1741.0], [17.1, 1741.0], [17.2, 1741.0], [17.3, 1741.0], [17.4, 1741.0], [17.5, 1741.0], [17.6, 1741.0], [17.7, 1741.0], [17.8, 1741.0], [17.9, 1741.0], [18.0, 1763.0], [18.1, 1763.0], [18.2, 1763.0], [18.3, 1763.0], [18.4, 1763.0], [18.5, 1763.0], [18.6, 1763.0], [18.7, 1763.0], [18.8, 1763.0], [18.9, 1763.0], [19.0, 1784.0], [19.1, 1784.0], [19.2, 1784.0], [19.3, 1784.0], [19.4, 1784.0], [19.5, 1784.0], [19.6, 1784.0], [19.7, 1784.0], [19.8, 1784.0], [19.9, 1784.0], [20.0, 1785.0], [20.1, 1785.0], [20.2, 1785.0], [20.3, 1785.0], [20.4, 1785.0], [20.5, 1785.0], [20.6, 1785.0], [20.7, 1785.0], [20.8, 1785.0], [20.9, 1785.0], [21.0, 1787.0], [21.1, 1787.0], [21.2, 1787.0], [21.3, 1787.0], [21.4, 1787.0], [21.5, 1787.0], [21.6, 1787.0], [21.7, 1787.0], [21.8, 1787.0], [21.9, 1787.0], [22.0, 1841.0], [22.1, 1841.0], [22.2, 1841.0], [22.3, 1841.0], [22.4, 1841.0], [22.5, 1841.0], [22.6, 1841.0], [22.7, 1841.0], [22.8, 1841.0], [22.9, 1841.0], [23.0, 1843.0], [23.1, 1843.0], [23.2, 1843.0], [23.3, 1843.0], [23.4, 1843.0], [23.5, 1843.0], [23.6, 1843.0], [23.7, 1843.0], [23.8, 1843.0], [23.9, 1843.0], [24.0, 1858.0], [24.1, 1858.0], [24.2, 1858.0], [24.3, 1858.0], [24.4, 1858.0], [24.5, 1858.0], [24.6, 1858.0], [24.7, 1858.0], [24.8, 1858.0], [24.9, 1858.0], [25.0, 1866.0], [25.1, 1866.0], [25.2, 1866.0], [25.3, 1866.0], [25.4, 1866.0], [25.5, 1866.0], [25.6, 1866.0], [25.7, 1866.0], [25.8, 1866.0], [25.9, 1866.0], [26.0, 1884.0], [26.1, 1884.0], [26.2, 1884.0], [26.3, 1884.0], [26.4, 1884.0], [26.5, 1884.0], [26.6, 1884.0], [26.7, 1884.0], [26.8, 1884.0], [26.9, 1884.0], [27.0, 1887.0], [27.1, 1887.0], [27.2, 1887.0], [27.3, 1887.0], [27.4, 1887.0], [27.5, 1887.0], [27.6, 1887.0], [27.7, 1887.0], [27.8, 1887.0], [27.9, 1887.0], [28.0, 1892.0], [28.1, 1892.0], [28.2, 1892.0], [28.3, 1892.0], [28.4, 1892.0], [28.5, 1892.0], [28.6, 1892.0], [28.7, 1892.0], [28.8, 1892.0], [28.9, 1892.0], [29.0, 1894.0], [29.1, 1894.0], [29.2, 1894.0], [29.3, 1894.0], [29.4, 1894.0], [29.5, 1894.0], [29.6, 1894.0], [29.7, 1894.0], [29.8, 1894.0], [29.9, 1894.0], [30.0, 1896.0], [30.1, 1896.0], [30.2, 1896.0], [30.3, 1896.0], [30.4, 1896.0], [30.5, 1896.0], [30.6, 1896.0], [30.7, 1896.0], [30.8, 1896.0], [30.9, 1896.0], [31.0, 1905.0], [31.1, 1905.0], [31.2, 1905.0], [31.3, 1905.0], [31.4, 1905.0], [31.5, 1905.0], [31.6, 1905.0], [31.7, 1905.0], [31.8, 1905.0], [31.9, 1905.0], [32.0, 1918.0], [32.1, 1918.0], [32.2, 1918.0], [32.3, 1918.0], [32.4, 1918.0], [32.5, 1918.0], [32.6, 1918.0], [32.7, 1918.0], [32.8, 1918.0], [32.9, 1918.0], [33.0, 1933.0], [33.1, 1933.0], [33.2, 1933.0], [33.3, 1933.0], [33.4, 1933.0], [33.5, 1933.0], [33.6, 1933.0], [33.7, 1933.0], [33.8, 1933.0], [33.9, 1933.0], [34.0, 1936.0], [34.1, 1936.0], [34.2, 1936.0], [34.3, 1936.0], [34.4, 1936.0], [34.5, 1936.0], [34.6, 1936.0], [34.7, 1936.0], [34.8, 1936.0], [34.9, 1936.0], [35.0, 1936.0], [35.1, 1936.0], [35.2, 1936.0], [35.3, 1936.0], [35.4, 1936.0], [35.5, 1936.0], [35.6, 1936.0], [35.7, 1936.0], [35.8, 1936.0], [35.9, 1936.0], [36.0, 1960.0], [36.1, 1960.0], [36.2, 1960.0], [36.3, 1960.0], [36.4, 1960.0], [36.5, 1960.0], [36.6, 1960.0], [36.7, 1960.0], [36.8, 1960.0], [36.9, 1960.0], [37.0, 1967.0], [37.1, 1967.0], [37.2, 1967.0], [37.3, 1967.0], [37.4, 1967.0], [37.5, 1967.0], [37.6, 1967.0], [37.7, 1967.0], [37.8, 1967.0], [37.9, 1967.0], [38.0, 1976.0], [38.1, 1976.0], [38.2, 1976.0], [38.3, 1976.0], [38.4, 1976.0], [38.5, 1976.0], [38.6, 1976.0], [38.7, 1976.0], [38.8, 1976.0], [38.9, 1976.0], [39.0, 1981.0], [39.1, 1981.0], [39.2, 1981.0], [39.3, 1981.0], [39.4, 1981.0], [39.5, 1981.0], [39.6, 1981.0], [39.7, 1981.0], [39.8, 1981.0], [39.9, 1981.0], [40.0, 1985.0], [40.1, 1985.0], [40.2, 1985.0], [40.3, 1985.0], [40.4, 1985.0], [40.5, 1985.0], [40.6, 1985.0], [40.7, 1985.0], [40.8, 1985.0], [40.9, 1985.0], [41.0, 1995.0], [41.1, 1995.0], [41.2, 1995.0], [41.3, 1995.0], [41.4, 1995.0], [41.5, 1995.0], [41.6, 1995.0], [41.7, 1995.0], [41.8, 1995.0], [41.9, 1995.0], [42.0, 2004.0], [42.1, 2004.0], [42.2, 2004.0], [42.3, 2004.0], [42.4, 2004.0], [42.5, 2004.0], [42.6, 2004.0], [42.7, 2004.0], [42.8, 2004.0], [42.9, 2004.0], [43.0, 2009.0], [43.1, 2009.0], [43.2, 2009.0], [43.3, 2009.0], [43.4, 2009.0], [43.5, 2009.0], [43.6, 2009.0], [43.7, 2009.0], [43.8, 2009.0], [43.9, 2009.0], [44.0, 2014.0], [44.1, 2014.0], [44.2, 2014.0], [44.3, 2014.0], [44.4, 2014.0], [44.5, 2014.0], [44.6, 2014.0], [44.7, 2014.0], [44.8, 2014.0], [44.9, 2014.0], [45.0, 2026.0], [45.1, 2026.0], [45.2, 2026.0], [45.3, 2026.0], [45.4, 2026.0], [45.5, 2026.0], [45.6, 2026.0], [45.7, 2026.0], [45.8, 2026.0], [45.9, 2026.0], [46.0, 2044.0], [46.1, 2044.0], [46.2, 2044.0], [46.3, 2044.0], [46.4, 2044.0], [46.5, 2044.0], [46.6, 2044.0], [46.7, 2044.0], [46.8, 2044.0], [46.9, 2044.0], [47.0, 2062.0], [47.1, 2062.0], [47.2, 2062.0], [47.3, 2062.0], [47.4, 2062.0], [47.5, 2062.0], [47.6, 2062.0], [47.7, 2062.0], [47.8, 2062.0], [47.9, 2062.0], [48.0, 2072.0], [48.1, 2072.0], [48.2, 2072.0], [48.3, 2072.0], [48.4, 2072.0], [48.5, 2072.0], [48.6, 2072.0], [48.7, 2072.0], [48.8, 2072.0], [48.9, 2072.0], [49.0, 2074.0], [49.1, 2074.0], [49.2, 2074.0], [49.3, 2074.0], [49.4, 2074.0], [49.5, 2074.0], [49.6, 2074.0], [49.7, 2074.0], [49.8, 2074.0], [49.9, 2074.0], [50.0, 2106.0], [50.1, 2106.0], [50.2, 2106.0], [50.3, 2106.0], [50.4, 2106.0], [50.5, 2106.0], [50.6, 2106.0], [50.7, 2106.0], [50.8, 2106.0], [50.9, 2106.0], [51.0, 2109.0], [51.1, 2109.0], [51.2, 2109.0], [51.3, 2109.0], [51.4, 2109.0], [51.5, 2109.0], [51.6, 2109.0], [51.7, 2109.0], [51.8, 2109.0], [51.9, 2109.0], [52.0, 2118.0], [52.1, 2118.0], [52.2, 2118.0], [52.3, 2118.0], [52.4, 2118.0], [52.5, 2118.0], [52.6, 2118.0], [52.7, 2118.0], [52.8, 2118.0], [52.9, 2118.0], [53.0, 2122.0], [53.1, 2122.0], [53.2, 2122.0], [53.3, 2122.0], [53.4, 2122.0], [53.5, 2122.0], [53.6, 2122.0], [53.7, 2122.0], [53.8, 2122.0], [53.9, 2122.0], [54.0, 2223.0], [54.1, 2223.0], [54.2, 2223.0], [54.3, 2223.0], [54.4, 2223.0], [54.5, 2223.0], [54.6, 2223.0], [54.7, 2223.0], [54.8, 2223.0], [54.9, 2223.0], [55.0, 2236.0], [55.1, 2236.0], [55.2, 2236.0], [55.3, 2236.0], [55.4, 2236.0], [55.5, 2236.0], [55.6, 2236.0], [55.7, 2236.0], [55.8, 2236.0], [55.9, 2236.0], [56.0, 2239.0], [56.1, 2239.0], [56.2, 2239.0], [56.3, 2239.0], [56.4, 2239.0], [56.5, 2239.0], [56.6, 2239.0], [56.7, 2239.0], [56.8, 2239.0], [56.9, 2239.0], [57.0, 2242.0], [57.1, 2242.0], [57.2, 2242.0], [57.3, 2242.0], [57.4, 2242.0], [57.5, 2242.0], [57.6, 2242.0], [57.7, 2242.0], [57.8, 2242.0], [57.9, 2242.0], [58.0, 2250.0], [58.1, 2250.0], [58.2, 2250.0], [58.3, 2250.0], [58.4, 2250.0], [58.5, 2250.0], [58.6, 2250.0], [58.7, 2250.0], [58.8, 2250.0], [58.9, 2250.0], [59.0, 2259.0], [59.1, 2259.0], [59.2, 2259.0], [59.3, 2259.0], [59.4, 2259.0], [59.5, 2259.0], [59.6, 2259.0], [59.7, 2259.0], [59.8, 2259.0], [59.9, 2259.0], [60.0, 2269.0], [60.1, 2269.0], [60.2, 2269.0], [60.3, 2269.0], [60.4, 2269.0], [60.5, 2269.0], [60.6, 2269.0], [60.7, 2269.0], [60.8, 2269.0], [60.9, 2269.0], [61.0, 2269.0], [61.1, 2269.0], [61.2, 2269.0], [61.3, 2269.0], [61.4, 2269.0], [61.5, 2269.0], [61.6, 2269.0], [61.7, 2269.0], [61.8, 2269.0], [61.9, 2269.0], [62.0, 2332.0], [62.1, 2332.0], [62.2, 2332.0], [62.3, 2332.0], [62.4, 2332.0], [62.5, 2332.0], [62.6, 2332.0], [62.7, 2332.0], [62.8, 2332.0], [62.9, 2332.0], [63.0, 2351.0], [63.1, 2351.0], [63.2, 2351.0], [63.3, 2351.0], [63.4, 2351.0], [63.5, 2351.0], [63.6, 2351.0], [63.7, 2351.0], [63.8, 2351.0], [63.9, 2351.0], [64.0, 2355.0], [64.1, 2355.0], [64.2, 2355.0], [64.3, 2355.0], [64.4, 2355.0], [64.5, 2355.0], [64.6, 2355.0], [64.7, 2355.0], [64.8, 2355.0], [64.9, 2355.0], [65.0, 2357.0], [65.1, 2357.0], [65.2, 2357.0], [65.3, 2357.0], [65.4, 2357.0], [65.5, 2357.0], [65.6, 2357.0], [65.7, 2357.0], [65.8, 2357.0], [65.9, 2357.0], [66.0, 2370.0], [66.1, 2370.0], [66.2, 2370.0], [66.3, 2370.0], [66.4, 2370.0], [66.5, 2370.0], [66.6, 2370.0], [66.7, 2370.0], [66.8, 2370.0], [66.9, 2370.0], [67.0, 2391.0], [67.1, 2391.0], [67.2, 2391.0], [67.3, 2391.0], [67.4, 2391.0], [67.5, 2391.0], [67.6, 2391.0], [67.7, 2391.0], [67.8, 2391.0], [67.9, 2391.0], [68.0, 2444.0], [68.1, 2444.0], [68.2, 2444.0], [68.3, 2444.0], [68.4, 2444.0], [68.5, 2444.0], [68.6, 2444.0], [68.7, 2444.0], [68.8, 2444.0], [68.9, 2444.0], [69.0, 2459.0], [69.1, 2459.0], [69.2, 2459.0], [69.3, 2459.0], [69.4, 2459.0], [69.5, 2459.0], [69.6, 2459.0], [69.7, 2459.0], [69.8, 2459.0], [69.9, 2459.0], [70.0, 2506.0], [70.1, 2506.0], [70.2, 2506.0], [70.3, 2506.0], [70.4, 2506.0], [70.5, 2506.0], [70.6, 2506.0], [70.7, 2506.0], [70.8, 2506.0], [70.9, 2506.0], [71.0, 2534.0], [71.1, 2534.0], [71.2, 2534.0], [71.3, 2534.0], [71.4, 2534.0], [71.5, 2534.0], [71.6, 2534.0], [71.7, 2534.0], [71.8, 2534.0], [71.9, 2534.0], [72.0, 2539.0], [72.1, 2539.0], [72.2, 2539.0], [72.3, 2539.0], [72.4, 2539.0], [72.5, 2539.0], [72.6, 2539.0], [72.7, 2539.0], [72.8, 2539.0], [72.9, 2539.0], [73.0, 2545.0], [73.1, 2545.0], [73.2, 2545.0], [73.3, 2545.0], [73.4, 2545.0], [73.5, 2545.0], [73.6, 2545.0], [73.7, 2545.0], [73.8, 2545.0], [73.9, 2545.0], [74.0, 2555.0], [74.1, 2555.0], [74.2, 2555.0], [74.3, 2555.0], [74.4, 2555.0], [74.5, 2555.0], [74.6, 2555.0], [74.7, 2555.0], [74.8, 2555.0], [74.9, 2555.0], [75.0, 2570.0], [75.1, 2570.0], [75.2, 2570.0], [75.3, 2570.0], [75.4, 2570.0], [75.5, 2570.0], [75.6, 2570.0], [75.7, 2570.0], [75.8, 2570.0], [75.9, 2570.0], [76.0, 2603.0], [76.1, 2603.0], [76.2, 2603.0], [76.3, 2603.0], [76.4, 2603.0], [76.5, 2603.0], [76.6, 2603.0], [76.7, 2603.0], [76.8, 2603.0], [76.9, 2603.0], [77.0, 2618.0], [77.1, 2618.0], [77.2, 2618.0], [77.3, 2618.0], [77.4, 2618.0], [77.5, 2618.0], [77.6, 2618.0], [77.7, 2618.0], [77.8, 2618.0], [77.9, 2618.0], [78.0, 2645.0], [78.1, 2645.0], [78.2, 2645.0], [78.3, 2645.0], [78.4, 2645.0], [78.5, 2645.0], [78.6, 2645.0], [78.7, 2645.0], [78.8, 2645.0], [78.9, 2645.0], [79.0, 2664.0], [79.1, 2664.0], [79.2, 2664.0], [79.3, 2664.0], [79.4, 2664.0], [79.5, 2664.0], [79.6, 2664.0], [79.7, 2664.0], [79.8, 2664.0], [79.9, 2664.0], [80.0, 2699.0], [80.1, 2699.0], [80.2, 2699.0], [80.3, 2699.0], [80.4, 2699.0], [80.5, 2699.0], [80.6, 2699.0], [80.7, 2699.0], [80.8, 2699.0], [80.9, 2699.0], [81.0, 2718.0], [81.1, 2718.0], [81.2, 2718.0], [81.3, 2718.0], [81.4, 2718.0], [81.5, 2718.0], [81.6, 2718.0], [81.7, 2718.0], [81.8, 2718.0], [81.9, 2718.0], [82.0, 2733.0], [82.1, 2733.0], [82.2, 2733.0], [82.3, 2733.0], [82.4, 2733.0], [82.5, 2733.0], [82.6, 2733.0], [82.7, 2733.0], [82.8, 2733.0], [82.9, 2733.0], [83.0, 2745.0], [83.1, 2745.0], [83.2, 2745.0], [83.3, 2745.0], [83.4, 2745.0], [83.5, 2745.0], [83.6, 2745.0], [83.7, 2745.0], [83.8, 2745.0], [83.9, 2745.0], [84.0, 2749.0], [84.1, 2749.0], [84.2, 2749.0], [84.3, 2749.0], [84.4, 2749.0], [84.5, 2749.0], [84.6, 2749.0], [84.7, 2749.0], [84.8, 2749.0], [84.9, 2749.0], [85.0, 2753.0], [85.1, 2753.0], [85.2, 2753.0], [85.3, 2753.0], [85.4, 2753.0], [85.5, 2753.0], [85.6, 2753.0], [85.7, 2753.0], [85.8, 2753.0], [85.9, 2753.0], [86.0, 2792.0], [86.1, 2792.0], [86.2, 2792.0], [86.3, 2792.0], [86.4, 2792.0], [86.5, 2792.0], [86.6, 2792.0], [86.7, 2792.0], [86.8, 2792.0], [86.9, 2792.0], [87.0, 2892.0], [87.1, 2892.0], [87.2, 2892.0], [87.3, 2892.0], [87.4, 2892.0], [87.5, 2892.0], [87.6, 2892.0], [87.7, 2892.0], [87.8, 2892.0], [87.9, 2892.0], [88.0, 3000.0], [88.1, 3000.0], [88.2, 3000.0], [88.3, 3000.0], [88.4, 3000.0], [88.5, 3000.0], [88.6, 3000.0], [88.7, 3000.0], [88.8, 3000.0], [88.9, 3000.0], [89.0, 3020.0], [89.1, 3020.0], [89.2, 3020.0], [89.3, 3020.0], [89.4, 3020.0], [89.5, 3020.0], [89.6, 3020.0], [89.7, 3020.0], [89.8, 3020.0], [89.9, 3020.0], [90.0, 3133.0], [90.1, 3133.0], [90.2, 3133.0], [90.3, 3133.0], [90.4, 3133.0], [90.5, 3133.0], [90.6, 3133.0], [90.7, 3133.0], [90.8, 3133.0], [90.9, 3133.0], [91.0, 3164.0], [91.1, 3164.0], [91.2, 3164.0], [91.3, 3164.0], [91.4, 3164.0], [91.5, 3164.0], [91.6, 3164.0], [91.7, 3164.0], [91.8, 3164.0], [91.9, 3164.0], [92.0, 3236.0], [92.1, 3236.0], [92.2, 3236.0], [92.3, 3236.0], [92.4, 3236.0], [92.5, 3236.0], [92.6, 3236.0], [92.7, 3236.0], [92.8, 3236.0], [92.9, 3236.0], [93.0, 3417.0], [93.1, 3417.0], [93.2, 3417.0], [93.3, 3417.0], [93.4, 3417.0], [93.5, 3417.0], [93.6, 3417.0], [93.7, 3417.0], [93.8, 3417.0], [93.9, 3417.0], [94.0, 3445.0], [94.1, 3445.0], [94.2, 3445.0], [94.3, 3445.0], [94.4, 3445.0], [94.5, 3445.0], [94.6, 3445.0], [94.7, 3445.0], [94.8, 3445.0], [94.9, 3445.0], [95.0, 3498.0], [95.1, 3498.0], [95.2, 3498.0], [95.3, 3498.0], [95.4, 3498.0], [95.5, 3498.0], [95.6, 3498.0], [95.7, 3498.0], [95.8, 3498.0], [95.9, 3498.0], [96.0, 3649.0], [96.1, 3649.0], [96.2, 3649.0], [96.3, 3649.0], [96.4, 3649.0], [96.5, 3649.0], [96.6, 3649.0], [96.7, 3649.0], [96.8, 3649.0], [96.9, 3649.0], [97.0, 3863.0], [97.1, 3863.0], [97.2, 3863.0], [97.3, 3863.0], [97.4, 3863.0], [97.5, 3863.0], [97.6, 3863.0], [97.7, 3863.0], [97.8, 3863.0], [97.9, 3863.0], [98.0, 3899.0], [98.1, 3899.0], [98.2, 3899.0], [98.3, 3899.0], [98.4, 3899.0], [98.5, 3899.0], [98.6, 3899.0], [98.7, 3899.0], [98.8, 3899.0], [98.9, 3899.0], [99.0, 4070.0], [99.1, 4070.0], [99.2, 4070.0], [99.3, 4070.0], [99.4, 4070.0], [99.5, 4070.0], [99.6, 4070.0], [99.7, 4070.0], [99.8, 4070.0], [99.9, 4070.0]], "isOverall": false, "label": "Category Drill down", "isController": false}, {"data": [[0.0, 2996.0], [0.1, 2996.0], [0.2, 2996.0], [0.3, 2996.0], [0.4, 2996.0], [0.5, 2996.0], [0.6, 2996.0], [0.7, 2996.0], [0.8, 2996.0], [0.9, 2996.0], [1.0, 2996.0], [1.1, 2996.0], [1.2, 2996.0], [1.3, 2996.0], [1.4, 2996.0], [1.5, 2996.0], [1.6, 2996.0], [1.7, 2996.0], [1.8, 2996.0], [1.9, 2996.0], [2.0, 3038.0], [2.1, 3038.0], [2.2, 3038.0], [2.3, 3038.0], [2.4, 3038.0], [2.5, 3038.0], [2.6, 3038.0], [2.7, 3038.0], [2.8, 3038.0], [2.9, 3038.0], [3.0, 3070.0], [3.1, 3070.0], [3.2, 3070.0], [3.3, 3070.0], [3.4, 3070.0], [3.5, 3070.0], [3.6, 3070.0], [3.7, 3070.0], [3.8, 3070.0], [3.9, 3070.0], [4.0, 3096.0], [4.1, 3096.0], [4.2, 3096.0], [4.3, 3096.0], [4.4, 3096.0], [4.5, 3096.0], [4.6, 3096.0], [4.7, 3096.0], [4.8, 3096.0], [4.9, 3096.0], [5.0, 3110.0], [5.1, 3110.0], [5.2, 3110.0], [5.3, 3110.0], [5.4, 3110.0], [5.5, 3110.0], [5.6, 3110.0], [5.7, 3110.0], [5.8, 3110.0], [5.9, 3110.0], [6.0, 3114.0], [6.1, 3114.0], [6.2, 3114.0], [6.3, 3114.0], [6.4, 3114.0], [6.5, 3114.0], [6.6, 3114.0], [6.7, 3114.0], [6.8, 3114.0], [6.9, 3114.0], [7.0, 3154.0], [7.1, 3154.0], [7.2, 3154.0], [7.3, 3154.0], [7.4, 3154.0], [7.5, 3154.0], [7.6, 3154.0], [7.7, 3154.0], [7.8, 3154.0], [7.9, 3154.0], [8.0, 3164.0], [8.1, 3164.0], [8.2, 3164.0], [8.3, 3164.0], [8.4, 3164.0], [8.5, 3164.0], [8.6, 3164.0], [8.7, 3164.0], [8.8, 3164.0], [8.9, 3164.0], [9.0, 3192.0], [9.1, 3192.0], [9.2, 3192.0], [9.3, 3192.0], [9.4, 3192.0], [9.5, 3192.0], [9.6, 3192.0], [9.7, 3192.0], [9.8, 3192.0], [9.9, 3192.0], [10.0, 3209.0], [10.1, 3209.0], [10.2, 3209.0], [10.3, 3209.0], [10.4, 3209.0], [10.5, 3209.0], [10.6, 3209.0], [10.7, 3209.0], [10.8, 3209.0], [10.9, 3209.0], [11.0, 3220.0], [11.1, 3220.0], [11.2, 3220.0], [11.3, 3220.0], [11.4, 3220.0], [11.5, 3220.0], [11.6, 3220.0], [11.7, 3220.0], [11.8, 3220.0], [11.9, 3220.0], [12.0, 3257.0], [12.1, 3257.0], [12.2, 3257.0], [12.3, 3257.0], [12.4, 3257.0], [12.5, 3257.0], [12.6, 3257.0], [12.7, 3257.0], [12.8, 3257.0], [12.9, 3257.0], [13.0, 3266.0], [13.1, 3266.0], [13.2, 3266.0], [13.3, 3266.0], [13.4, 3266.0], [13.5, 3266.0], [13.6, 3266.0], [13.7, 3266.0], [13.8, 3266.0], [13.9, 3266.0], [14.0, 3273.0], [14.1, 3273.0], [14.2, 3273.0], [14.3, 3273.0], [14.4, 3273.0], [14.5, 3273.0], [14.6, 3273.0], [14.7, 3273.0], [14.8, 3273.0], [14.9, 3273.0], [15.0, 3278.0], [15.1, 3278.0], [15.2, 3278.0], [15.3, 3278.0], [15.4, 3278.0], [15.5, 3278.0], [15.6, 3278.0], [15.7, 3278.0], [15.8, 3278.0], [15.9, 3278.0], [16.0, 3294.0], [16.1, 3294.0], [16.2, 3294.0], [16.3, 3294.0], [16.4, 3294.0], [16.5, 3294.0], [16.6, 3294.0], [16.7, 3294.0], [16.8, 3294.0], [16.9, 3294.0], [17.0, 3304.0], [17.1, 3304.0], [17.2, 3304.0], [17.3, 3304.0], [17.4, 3304.0], [17.5, 3304.0], [17.6, 3304.0], [17.7, 3304.0], [17.8, 3304.0], [17.9, 3304.0], [18.0, 3349.0], [18.1, 3349.0], [18.2, 3349.0], [18.3, 3349.0], [18.4, 3349.0], [18.5, 3349.0], [18.6, 3349.0], [18.7, 3349.0], [18.8, 3349.0], [18.9, 3349.0], [19.0, 3359.0], [19.1, 3359.0], [19.2, 3359.0], [19.3, 3359.0], [19.4, 3359.0], [19.5, 3359.0], [19.6, 3359.0], [19.7, 3359.0], [19.8, 3359.0], [19.9, 3359.0], [20.0, 3401.0], [20.1, 3401.0], [20.2, 3401.0], [20.3, 3401.0], [20.4, 3401.0], [20.5, 3401.0], [20.6, 3401.0], [20.7, 3401.0], [20.8, 3401.0], [20.9, 3401.0], [21.0, 3408.0], [21.1, 3408.0], [21.2, 3408.0], [21.3, 3408.0], [21.4, 3408.0], [21.5, 3408.0], [21.6, 3408.0], [21.7, 3408.0], [21.8, 3408.0], [21.9, 3408.0], [22.0, 3422.0], [22.1, 3422.0], [22.2, 3422.0], [22.3, 3422.0], [22.4, 3422.0], [22.5, 3422.0], [22.6, 3422.0], [22.7, 3422.0], [22.8, 3422.0], [22.9, 3422.0], [23.0, 3424.0], [23.1, 3424.0], [23.2, 3424.0], [23.3, 3424.0], [23.4, 3424.0], [23.5, 3424.0], [23.6, 3424.0], [23.7, 3424.0], [23.8, 3424.0], [23.9, 3424.0], [24.0, 3445.0], [24.1, 3445.0], [24.2, 3445.0], [24.3, 3445.0], [24.4, 3445.0], [24.5, 3445.0], [24.6, 3445.0], [24.7, 3445.0], [24.8, 3445.0], [24.9, 3445.0], [25.0, 3449.0], [25.1, 3449.0], [25.2, 3449.0], [25.3, 3449.0], [25.4, 3449.0], [25.5, 3449.0], [25.6, 3449.0], [25.7, 3449.0], [25.8, 3449.0], [25.9, 3449.0], [26.0, 3451.0], [26.1, 3451.0], [26.2, 3451.0], [26.3, 3451.0], [26.4, 3451.0], [26.5, 3451.0], [26.6, 3451.0], [26.7, 3451.0], [26.8, 3451.0], [26.9, 3451.0], [27.0, 3463.0], [27.1, 3463.0], [27.2, 3463.0], [27.3, 3463.0], [27.4, 3463.0], [27.5, 3463.0], [27.6, 3463.0], [27.7, 3463.0], [27.8, 3463.0], [27.9, 3463.0], [28.0, 3472.0], [28.1, 3472.0], [28.2, 3472.0], [28.3, 3472.0], [28.4, 3472.0], [28.5, 3472.0], [28.6, 3472.0], [28.7, 3472.0], [28.8, 3472.0], [28.9, 3472.0], [29.0, 3477.0], [29.1, 3477.0], [29.2, 3477.0], [29.3, 3477.0], [29.4, 3477.0], [29.5, 3477.0], [29.6, 3477.0], [29.7, 3477.0], [29.8, 3477.0], [29.9, 3477.0], [30.0, 3517.0], [30.1, 3517.0], [30.2, 3517.0], [30.3, 3517.0], [30.4, 3517.0], [30.5, 3517.0], [30.6, 3517.0], [30.7, 3517.0], [30.8, 3517.0], [30.9, 3517.0], [31.0, 3518.0], [31.1, 3518.0], [31.2, 3518.0], [31.3, 3518.0], [31.4, 3518.0], [31.5, 3518.0], [31.6, 3518.0], [31.7, 3518.0], [31.8, 3518.0], [31.9, 3518.0], [32.0, 3552.0], [32.1, 3552.0], [32.2, 3552.0], [32.3, 3552.0], [32.4, 3552.0], [32.5, 3552.0], [32.6, 3552.0], [32.7, 3552.0], [32.8, 3552.0], [32.9, 3552.0], [33.0, 3567.0], [33.1, 3567.0], [33.2, 3567.0], [33.3, 3567.0], [33.4, 3567.0], [33.5, 3567.0], [33.6, 3567.0], [33.7, 3567.0], [33.8, 3567.0], [33.9, 3567.0], [34.0, 3580.0], [34.1, 3580.0], [34.2, 3580.0], [34.3, 3580.0], [34.4, 3580.0], [34.5, 3580.0], [34.6, 3580.0], [34.7, 3580.0], [34.8, 3580.0], [34.9, 3580.0], [35.0, 3603.0], [35.1, 3603.0], [35.2, 3603.0], [35.3, 3603.0], [35.4, 3603.0], [35.5, 3603.0], [35.6, 3603.0], [35.7, 3603.0], [35.8, 3603.0], [35.9, 3603.0], [36.0, 3617.0], [36.1, 3617.0], [36.2, 3617.0], [36.3, 3617.0], [36.4, 3617.0], [36.5, 3617.0], [36.6, 3617.0], [36.7, 3617.0], [36.8, 3617.0], [36.9, 3617.0], [37.0, 3619.0], [37.1, 3619.0], [37.2, 3619.0], [37.3, 3619.0], [37.4, 3619.0], [37.5, 3619.0], [37.6, 3619.0], [37.7, 3619.0], [37.8, 3619.0], [37.9, 3619.0], [38.0, 3657.0], [38.1, 3657.0], [38.2, 3657.0], [38.3, 3657.0], [38.4, 3657.0], [38.5, 3657.0], [38.6, 3657.0], [38.7, 3657.0], [38.8, 3657.0], [38.9, 3657.0], [39.0, 3667.0], [39.1, 3667.0], [39.2, 3667.0], [39.3, 3667.0], [39.4, 3667.0], [39.5, 3667.0], [39.6, 3667.0], [39.7, 3667.0], [39.8, 3667.0], [39.9, 3667.0], [40.0, 3697.0], [40.1, 3697.0], [40.2, 3697.0], [40.3, 3697.0], [40.4, 3697.0], [40.5, 3697.0], [40.6, 3697.0], [40.7, 3697.0], [40.8, 3697.0], [40.9, 3697.0], [41.0, 3731.0], [41.1, 3731.0], [41.2, 3731.0], [41.3, 3731.0], [41.4, 3731.0], [41.5, 3731.0], [41.6, 3731.0], [41.7, 3731.0], [41.8, 3731.0], [41.9, 3731.0], [42.0, 3751.0], [42.1, 3751.0], [42.2, 3751.0], [42.3, 3751.0], [42.4, 3751.0], [42.5, 3751.0], [42.6, 3751.0], [42.7, 3751.0], [42.8, 3751.0], [42.9, 3751.0], [43.0, 3765.0], [43.1, 3765.0], [43.2, 3765.0], [43.3, 3765.0], [43.4, 3765.0], [43.5, 3765.0], [43.6, 3765.0], [43.7, 3765.0], [43.8, 3765.0], [43.9, 3765.0], [44.0, 3771.0], [44.1, 3771.0], [44.2, 3771.0], [44.3, 3771.0], [44.4, 3771.0], [44.5, 3771.0], [44.6, 3771.0], [44.7, 3771.0], [44.8, 3771.0], [44.9, 3771.0], [45.0, 3802.0], [45.1, 3802.0], [45.2, 3802.0], [45.3, 3802.0], [45.4, 3802.0], [45.5, 3802.0], [45.6, 3802.0], [45.7, 3802.0], [45.8, 3802.0], [45.9, 3802.0], [46.0, 3811.0], [46.1, 3811.0], [46.2, 3811.0], [46.3, 3811.0], [46.4, 3811.0], [46.5, 3811.0], [46.6, 3811.0], [46.7, 3811.0], [46.8, 3811.0], [46.9, 3811.0], [47.0, 3817.0], [47.1, 3817.0], [47.2, 3817.0], [47.3, 3817.0], [47.4, 3817.0], [47.5, 3817.0], [47.6, 3817.0], [47.7, 3817.0], [47.8, 3817.0], [47.9, 3817.0], [48.0, 3831.0], [48.1, 3831.0], [48.2, 3831.0], [48.3, 3831.0], [48.4, 3831.0], [48.5, 3831.0], [48.6, 3831.0], [48.7, 3831.0], [48.8, 3831.0], [48.9, 3831.0], [49.0, 3835.0], [49.1, 3835.0], [49.2, 3835.0], [49.3, 3835.0], [49.4, 3835.0], [49.5, 3835.0], [49.6, 3835.0], [49.7, 3835.0], [49.8, 3835.0], [49.9, 3835.0], [50.0, 3846.0], [50.1, 3846.0], [50.2, 3846.0], [50.3, 3846.0], [50.4, 3846.0], [50.5, 3846.0], [50.6, 3846.0], [50.7, 3846.0], [50.8, 3846.0], [50.9, 3846.0], [51.0, 3892.0], [51.1, 3892.0], [51.2, 3892.0], [51.3, 3892.0], [51.4, 3892.0], [51.5, 3892.0], [51.6, 3892.0], [51.7, 3892.0], [51.8, 3892.0], [51.9, 3892.0], [52.0, 3897.0], [52.1, 3897.0], [52.2, 3897.0], [52.3, 3897.0], [52.4, 3897.0], [52.5, 3897.0], [52.6, 3897.0], [52.7, 3897.0], [52.8, 3897.0], [52.9, 3897.0], [53.0, 3914.0], [53.1, 3914.0], [53.2, 3914.0], [53.3, 3914.0], [53.4, 3914.0], [53.5, 3914.0], [53.6, 3914.0], [53.7, 3914.0], [53.8, 3914.0], [53.9, 3914.0], [54.0, 3927.0], [54.1, 3927.0], [54.2, 3927.0], [54.3, 3927.0], [54.4, 3927.0], [54.5, 3927.0], [54.6, 3927.0], [54.7, 3927.0], [54.8, 3927.0], [54.9, 3927.0], [55.0, 3943.0], [55.1, 3943.0], [55.2, 3943.0], [55.3, 3943.0], [55.4, 3943.0], [55.5, 3943.0], [55.6, 3943.0], [55.7, 3943.0], [55.8, 3943.0], [55.9, 3943.0], [56.0, 3990.0], [56.1, 3990.0], [56.2, 3990.0], [56.3, 3990.0], [56.4, 3990.0], [56.5, 3990.0], [56.6, 3990.0], [56.7, 3990.0], [56.8, 3990.0], [56.9, 3990.0], [57.0, 3992.0], [57.1, 3992.0], [57.2, 3992.0], [57.3, 3992.0], [57.4, 3992.0], [57.5, 3992.0], [57.6, 3992.0], [57.7, 3992.0], [57.8, 3992.0], [57.9, 3992.0], [58.0, 3999.0], [58.1, 3999.0], [58.2, 3999.0], [58.3, 3999.0], [58.4, 3999.0], [58.5, 3999.0], [58.6, 3999.0], [58.7, 3999.0], [58.8, 3999.0], [58.9, 3999.0], [59.0, 4021.0], [59.1, 4021.0], [59.2, 4021.0], [59.3, 4021.0], [59.4, 4021.0], [59.5, 4021.0], [59.6, 4021.0], [59.7, 4021.0], [59.8, 4021.0], [59.9, 4021.0], [60.0, 4038.0], [60.1, 4038.0], [60.2, 4038.0], [60.3, 4038.0], [60.4, 4038.0], [60.5, 4038.0], [60.6, 4038.0], [60.7, 4038.0], [60.8, 4038.0], [60.9, 4038.0], [61.0, 4071.0], [61.1, 4071.0], [61.2, 4071.0], [61.3, 4071.0], [61.4, 4071.0], [61.5, 4071.0], [61.6, 4071.0], [61.7, 4071.0], [61.8, 4071.0], [61.9, 4071.0], [62.0, 4071.0], [62.1, 4071.0], [62.2, 4071.0], [62.3, 4071.0], [62.4, 4071.0], [62.5, 4071.0], [62.6, 4071.0], [62.7, 4071.0], [62.8, 4071.0], [62.9, 4071.0], [63.0, 4074.0], [63.1, 4074.0], [63.2, 4074.0], [63.3, 4074.0], [63.4, 4074.0], [63.5, 4074.0], [63.6, 4074.0], [63.7, 4074.0], [63.8, 4074.0], [63.9, 4074.0], [64.0, 4083.0], [64.1, 4083.0], [64.2, 4083.0], [64.3, 4083.0], [64.4, 4083.0], [64.5, 4083.0], [64.6, 4083.0], [64.7, 4083.0], [64.8, 4083.0], [64.9, 4083.0], [65.0, 4125.0], [65.1, 4125.0], [65.2, 4125.0], [65.3, 4125.0], [65.4, 4125.0], [65.5, 4125.0], [65.6, 4125.0], [65.7, 4125.0], [65.8, 4125.0], [65.9, 4125.0], [66.0, 4125.0], [66.1, 4125.0], [66.2, 4125.0], [66.3, 4125.0], [66.4, 4125.0], [66.5, 4125.0], [66.6, 4125.0], [66.7, 4125.0], [66.8, 4125.0], [66.9, 4125.0], [67.0, 4148.0], [67.1, 4148.0], [67.2, 4148.0], [67.3, 4148.0], [67.4, 4148.0], [67.5, 4148.0], [67.6, 4148.0], [67.7, 4148.0], [67.8, 4148.0], [67.9, 4148.0], [68.0, 4187.0], [68.1, 4187.0], [68.2, 4187.0], [68.3, 4187.0], [68.4, 4187.0], [68.5, 4187.0], [68.6, 4187.0], [68.7, 4187.0], [68.8, 4187.0], [68.9, 4187.0], [69.0, 4199.0], [69.1, 4199.0], [69.2, 4199.0], [69.3, 4199.0], [69.4, 4199.0], [69.5, 4199.0], [69.6, 4199.0], [69.7, 4199.0], [69.8, 4199.0], [69.9, 4199.0], [70.0, 4255.0], [70.1, 4255.0], [70.2, 4255.0], [70.3, 4255.0], [70.4, 4255.0], [70.5, 4255.0], [70.6, 4255.0], [70.7, 4255.0], [70.8, 4255.0], [70.9, 4255.0], [71.0, 4266.0], [71.1, 4266.0], [71.2, 4266.0], [71.3, 4266.0], [71.4, 4266.0], [71.5, 4266.0], [71.6, 4266.0], [71.7, 4266.0], [71.8, 4266.0], [71.9, 4266.0], [72.0, 4284.0], [72.1, 4284.0], [72.2, 4284.0], [72.3, 4284.0], [72.4, 4284.0], [72.5, 4284.0], [72.6, 4284.0], [72.7, 4284.0], [72.8, 4284.0], [72.9, 4284.0], [73.0, 4288.0], [73.1, 4288.0], [73.2, 4288.0], [73.3, 4288.0], [73.4, 4288.0], [73.5, 4288.0], [73.6, 4288.0], [73.7, 4288.0], [73.8, 4288.0], [73.9, 4288.0], [74.0, 4288.0], [74.1, 4288.0], [74.2, 4288.0], [74.3, 4288.0], [74.4, 4288.0], [74.5, 4288.0], [74.6, 4288.0], [74.7, 4288.0], [74.8, 4288.0], [74.9, 4288.0], [75.0, 4293.0], [75.1, 4293.0], [75.2, 4293.0], [75.3, 4293.0], [75.4, 4293.0], [75.5, 4293.0], [75.6, 4293.0], [75.7, 4293.0], [75.8, 4293.0], [75.9, 4293.0], [76.0, 4315.0], [76.1, 4315.0], [76.2, 4315.0], [76.3, 4315.0], [76.4, 4315.0], [76.5, 4315.0], [76.6, 4315.0], [76.7, 4315.0], [76.8, 4315.0], [76.9, 4315.0], [77.0, 4333.0], [77.1, 4333.0], [77.2, 4333.0], [77.3, 4333.0], [77.4, 4333.0], [77.5, 4333.0], [77.6, 4333.0], [77.7, 4333.0], [77.8, 4333.0], [77.9, 4333.0], [78.0, 4397.0], [78.1, 4397.0], [78.2, 4397.0], [78.3, 4397.0], [78.4, 4397.0], [78.5, 4397.0], [78.6, 4397.0], [78.7, 4397.0], [78.8, 4397.0], [78.9, 4397.0], [79.0, 4441.0], [79.1, 4441.0], [79.2, 4441.0], [79.3, 4441.0], [79.4, 4441.0], [79.5, 4441.0], [79.6, 4441.0], [79.7, 4441.0], [79.8, 4441.0], [79.9, 4441.0], [80.0, 4462.0], [80.1, 4462.0], [80.2, 4462.0], [80.3, 4462.0], [80.4, 4462.0], [80.5, 4462.0], [80.6, 4462.0], [80.7, 4462.0], [80.8, 4462.0], [80.9, 4462.0], [81.0, 4496.0], [81.1, 4496.0], [81.2, 4496.0], [81.3, 4496.0], [81.4, 4496.0], [81.5, 4496.0], [81.6, 4496.0], [81.7, 4496.0], [81.8, 4496.0], [81.9, 4496.0], [82.0, 4503.0], [82.1, 4503.0], [82.2, 4503.0], [82.3, 4503.0], [82.4, 4503.0], [82.5, 4503.0], [82.6, 4503.0], [82.7, 4503.0], [82.8, 4503.0], [82.9, 4503.0], [83.0, 4538.0], [83.1, 4538.0], [83.2, 4538.0], [83.3, 4538.0], [83.4, 4538.0], [83.5, 4538.0], [83.6, 4538.0], [83.7, 4538.0], [83.8, 4538.0], [83.9, 4538.0], [84.0, 4542.0], [84.1, 4542.0], [84.2, 4542.0], [84.3, 4542.0], [84.4, 4542.0], [84.5, 4542.0], [84.6, 4542.0], [84.7, 4542.0], [84.8, 4542.0], [84.9, 4542.0], [85.0, 4615.0], [85.1, 4615.0], [85.2, 4615.0], [85.3, 4615.0], [85.4, 4615.0], [85.5, 4615.0], [85.6, 4615.0], [85.7, 4615.0], [85.8, 4615.0], [85.9, 4615.0], [86.0, 4619.0], [86.1, 4619.0], [86.2, 4619.0], [86.3, 4619.0], [86.4, 4619.0], [86.5, 4619.0], [86.6, 4619.0], [86.7, 4619.0], [86.8, 4619.0], [86.9, 4619.0], [87.0, 4621.0], [87.1, 4621.0], [87.2, 4621.0], [87.3, 4621.0], [87.4, 4621.0], [87.5, 4621.0], [87.6, 4621.0], [87.7, 4621.0], [87.8, 4621.0], [87.9, 4621.0], [88.0, 4714.0], [88.1, 4714.0], [88.2, 4714.0], [88.3, 4714.0], [88.4, 4714.0], [88.5, 4714.0], [88.6, 4714.0], [88.7, 4714.0], [88.8, 4714.0], [88.9, 4714.0], [89.0, 4720.0], [89.1, 4720.0], [89.2, 4720.0], [89.3, 4720.0], [89.4, 4720.0], [89.5, 4720.0], [89.6, 4720.0], [89.7, 4720.0], [89.8, 4720.0], [89.9, 4720.0], [90.0, 4724.0], [90.1, 4724.0], [90.2, 4724.0], [90.3, 4724.0], [90.4, 4724.0], [90.5, 4724.0], [90.6, 4724.0], [90.7, 4724.0], [90.8, 4724.0], [90.9, 4724.0], [91.0, 4840.0], [91.1, 4840.0], [91.2, 4840.0], [91.3, 4840.0], [91.4, 4840.0], [91.5, 4840.0], [91.6, 4840.0], [91.7, 4840.0], [91.8, 4840.0], [91.9, 4840.0], [92.0, 4912.0], [92.1, 4912.0], [92.2, 4912.0], [92.3, 4912.0], [92.4, 4912.0], [92.5, 4912.0], [92.6, 4912.0], [92.7, 4912.0], [92.8, 4912.0], [92.9, 4912.0], [93.0, 4919.0], [93.1, 4919.0], [93.2, 4919.0], [93.3, 4919.0], [93.4, 4919.0], [93.5, 4919.0], [93.6, 4919.0], [93.7, 4919.0], [93.8, 4919.0], [93.9, 4919.0], [94.0, 4925.0], [94.1, 4925.0], [94.2, 4925.0], [94.3, 4925.0], [94.4, 4925.0], [94.5, 4925.0], [94.6, 4925.0], [94.7, 4925.0], [94.8, 4925.0], [94.9, 4925.0], [95.0, 4987.0], [95.1, 4987.0], [95.2, 4987.0], [95.3, 4987.0], [95.4, 4987.0], [95.5, 4987.0], [95.6, 4987.0], [95.7, 4987.0], [95.8, 4987.0], [95.9, 4987.0], [96.0, 5050.0], [96.1, 5050.0], [96.2, 5050.0], [96.3, 5050.0], [96.4, 5050.0], [96.5, 5050.0], [96.6, 5050.0], [96.7, 5050.0], [96.8, 5050.0], [96.9, 5050.0], [97.0, 5147.0], [97.1, 5147.0], [97.2, 5147.0], [97.3, 5147.0], [97.4, 5147.0], [97.5, 5147.0], [97.6, 5147.0], [97.7, 5147.0], [97.8, 5147.0], [97.9, 5147.0], [98.0, 5223.0], [98.1, 5223.0], [98.2, 5223.0], [98.3, 5223.0], [98.4, 5223.0], [98.5, 5223.0], [98.6, 5223.0], [98.7, 5223.0], [98.8, 5223.0], [98.9, 5223.0], [99.0, 5289.0], [99.1, 5289.0], [99.2, 5289.0], [99.3, 5289.0], [99.4, 5289.0], [99.5, 5289.0], [99.6, 5289.0], [99.7, 5289.0], [99.8, 5289.0], [99.9, 5289.0]], "isOverall": false, "label": "Item Details", "isController": false}, {"data": [[0.0, 1936.0], [0.1, 1936.0], [0.2, 1936.0], [0.3, 1936.0], [0.4, 1936.0], [0.5, 1936.0], [0.6, 1936.0], [0.7, 1936.0], [0.8, 1936.0], [0.9, 1936.0], [1.0, 2162.0], [1.1, 2162.0], [1.2, 2162.0], [1.3, 2162.0], [1.4, 2162.0], [1.5, 2162.0], [1.6, 2162.0], [1.7, 2162.0], [1.8, 2162.0], [1.9, 2162.0], [2.0, 2210.0], [2.1, 2210.0], [2.2, 2210.0], [2.3, 2210.0], [2.4, 2210.0], [2.5, 2210.0], [2.6, 2210.0], [2.7, 2210.0], [2.8, 2210.0], [2.9, 2210.0], [3.0, 2253.0], [3.1, 2253.0], [3.2, 2253.0], [3.3, 2253.0], [3.4, 2253.0], [3.5, 2253.0], [3.6, 2253.0], [3.7, 2253.0], [3.8, 2253.0], [3.9, 2253.0], [4.0, 2320.0], [4.1, 2320.0], [4.2, 2320.0], [4.3, 2320.0], [4.4, 2320.0], [4.5, 2320.0], [4.6, 2320.0], [4.7, 2320.0], [4.8, 2320.0], [4.9, 2320.0], [5.0, 2357.0], [5.1, 2357.0], [5.2, 2357.0], [5.3, 2357.0], [5.4, 2357.0], [5.5, 2357.0], [5.6, 2357.0], [5.7, 2357.0], [5.8, 2357.0], [5.9, 2357.0], [6.0, 2372.0], [6.1, 2372.0], [6.2, 2372.0], [6.3, 2372.0], [6.4, 2372.0], [6.5, 2372.0], [6.6, 2372.0], [6.7, 2372.0], [6.8, 2372.0], [6.9, 2372.0], [7.0, 2376.0], [7.1, 2376.0], [7.2, 2376.0], [7.3, 2376.0], [7.4, 2376.0], [7.5, 2376.0], [7.6, 2376.0], [7.7, 2376.0], [7.8, 2376.0], [7.9, 2376.0], [8.0, 2405.0], [8.1, 2405.0], [8.2, 2405.0], [8.3, 2405.0], [8.4, 2405.0], [8.5, 2405.0], [8.6, 2405.0], [8.7, 2405.0], [8.8, 2405.0], [8.9, 2405.0], [9.0, 2433.0], [9.1, 2433.0], [9.2, 2433.0], [9.3, 2433.0], [9.4, 2433.0], [9.5, 2433.0], [9.6, 2433.0], [9.7, 2433.0], [9.8, 2433.0], [9.9, 2433.0], [10.0, 2439.0], [10.1, 2439.0], [10.2, 2439.0], [10.3, 2439.0], [10.4, 2439.0], [10.5, 2439.0], [10.6, 2439.0], [10.7, 2439.0], [10.8, 2439.0], [10.9, 2439.0], [11.0, 2440.0], [11.1, 2440.0], [11.2, 2440.0], [11.3, 2440.0], [11.4, 2440.0], [11.5, 2440.0], [11.6, 2440.0], [11.7, 2440.0], [11.8, 2440.0], [11.9, 2440.0], [12.0, 2489.0], [12.1, 2489.0], [12.2, 2489.0], [12.3, 2489.0], [12.4, 2489.0], [12.5, 2489.0], [12.6, 2489.0], [12.7, 2489.0], [12.8, 2489.0], [12.9, 2489.0], [13.0, 2492.0], [13.1, 2492.0], [13.2, 2492.0], [13.3, 2492.0], [13.4, 2492.0], [13.5, 2492.0], [13.6, 2492.0], [13.7, 2492.0], [13.8, 2492.0], [13.9, 2492.0], [14.0, 2543.0], [14.1, 2543.0], [14.2, 2543.0], [14.3, 2543.0], [14.4, 2543.0], [14.5, 2543.0], [14.6, 2543.0], [14.7, 2543.0], [14.8, 2543.0], [14.9, 2543.0], [15.0, 2563.0], [15.1, 2563.0], [15.2, 2563.0], [15.3, 2563.0], [15.4, 2563.0], [15.5, 2563.0], [15.6, 2563.0], [15.7, 2563.0], [15.8, 2563.0], [15.9, 2563.0], [16.0, 2569.0], [16.1, 2569.0], [16.2, 2569.0], [16.3, 2569.0], [16.4, 2569.0], [16.5, 2569.0], [16.6, 2569.0], [16.7, 2569.0], [16.8, 2569.0], [16.9, 2569.0], [17.0, 2572.0], [17.1, 2572.0], [17.2, 2572.0], [17.3, 2572.0], [17.4, 2572.0], [17.5, 2572.0], [17.6, 2572.0], [17.7, 2572.0], [17.8, 2572.0], [17.9, 2572.0], [18.0, 2573.0], [18.1, 2573.0], [18.2, 2573.0], [18.3, 2573.0], [18.4, 2573.0], [18.5, 2573.0], [18.6, 2573.0], [18.7, 2573.0], [18.8, 2573.0], [18.9, 2573.0], [19.0, 2576.0], [19.1, 2576.0], [19.2, 2576.0], [19.3, 2576.0], [19.4, 2576.0], [19.5, 2576.0], [19.6, 2576.0], [19.7, 2576.0], [19.8, 2576.0], [19.9, 2576.0], [20.0, 2577.0], [20.1, 2577.0], [20.2, 2577.0], [20.3, 2577.0], [20.4, 2577.0], [20.5, 2577.0], [20.6, 2577.0], [20.7, 2577.0], [20.8, 2577.0], [20.9, 2577.0], [21.0, 2582.0], [21.1, 2582.0], [21.2, 2582.0], [21.3, 2582.0], [21.4, 2582.0], [21.5, 2582.0], [21.6, 2582.0], [21.7, 2582.0], [21.8, 2582.0], [21.9, 2582.0], [22.0, 2594.0], [22.1, 2594.0], [22.2, 2594.0], [22.3, 2594.0], [22.4, 2594.0], [22.5, 2594.0], [22.6, 2594.0], [22.7, 2594.0], [22.8, 2594.0], [22.9, 2594.0], [23.0, 2603.0], [23.1, 2603.0], [23.2, 2603.0], [23.3, 2603.0], [23.4, 2603.0], [23.5, 2603.0], [23.6, 2603.0], [23.7, 2603.0], [23.8, 2603.0], [23.9, 2603.0], [24.0, 2606.0], [24.1, 2606.0], [24.2, 2606.0], [24.3, 2606.0], [24.4, 2606.0], [24.5, 2606.0], [24.6, 2606.0], [24.7, 2606.0], [24.8, 2606.0], [24.9, 2606.0], [25.0, 2608.0], [25.1, 2608.0], [25.2, 2608.0], [25.3, 2608.0], [25.4, 2608.0], [25.5, 2608.0], [25.6, 2608.0], [25.7, 2608.0], [25.8, 2608.0], [25.9, 2608.0], [26.0, 2615.0], [26.1, 2615.0], [26.2, 2615.0], [26.3, 2615.0], [26.4, 2615.0], [26.5, 2615.0], [26.6, 2615.0], [26.7, 2615.0], [26.8, 2615.0], [26.9, 2615.0], [27.0, 2642.0], [27.1, 2642.0], [27.2, 2642.0], [27.3, 2642.0], [27.4, 2642.0], [27.5, 2642.0], [27.6, 2642.0], [27.7, 2642.0], [27.8, 2642.0], [27.9, 2642.0], [28.0, 2664.0], [28.1, 2664.0], [28.2, 2664.0], [28.3, 2664.0], [28.4, 2664.0], [28.5, 2664.0], [28.6, 2664.0], [28.7, 2664.0], [28.8, 2664.0], [28.9, 2664.0], [29.0, 2695.0], [29.1, 2695.0], [29.2, 2695.0], [29.3, 2695.0], [29.4, 2695.0], [29.5, 2695.0], [29.6, 2695.0], [29.7, 2695.0], [29.8, 2695.0], [29.9, 2695.0], [30.0, 2700.0], [30.1, 2700.0], [30.2, 2700.0], [30.3, 2700.0], [30.4, 2700.0], [30.5, 2700.0], [30.6, 2700.0], [30.7, 2700.0], [30.8, 2700.0], [30.9, 2700.0], [31.0, 2733.0], [31.1, 2733.0], [31.2, 2733.0], [31.3, 2733.0], [31.4, 2733.0], [31.5, 2733.0], [31.6, 2733.0], [31.7, 2733.0], [31.8, 2733.0], [31.9, 2733.0], [32.0, 2745.0], [32.1, 2745.0], [32.2, 2745.0], [32.3, 2745.0], [32.4, 2745.0], [32.5, 2745.0], [32.6, 2745.0], [32.7, 2745.0], [32.8, 2745.0], [32.9, 2745.0], [33.0, 2756.0], [33.1, 2756.0], [33.2, 2756.0], [33.3, 2756.0], [33.4, 2756.0], [33.5, 2756.0], [33.6, 2756.0], [33.7, 2756.0], [33.8, 2756.0], [33.9, 2756.0], [34.0, 2779.0], [34.1, 2779.0], [34.2, 2779.0], [34.3, 2779.0], [34.4, 2779.0], [34.5, 2779.0], [34.6, 2779.0], [34.7, 2779.0], [34.8, 2779.0], [34.9, 2779.0], [35.0, 2784.0], [35.1, 2784.0], [35.2, 2784.0], [35.3, 2784.0], [35.4, 2784.0], [35.5, 2784.0], [35.6, 2784.0], [35.7, 2784.0], [35.8, 2784.0], [35.9, 2784.0], [36.0, 2816.0], [36.1, 2816.0], [36.2, 2816.0], [36.3, 2816.0], [36.4, 2816.0], [36.5, 2816.0], [36.6, 2816.0], [36.7, 2816.0], [36.8, 2816.0], [36.9, 2816.0], [37.0, 2825.0], [37.1, 2825.0], [37.2, 2825.0], [37.3, 2825.0], [37.4, 2825.0], [37.5, 2825.0], [37.6, 2825.0], [37.7, 2825.0], [37.8, 2825.0], [37.9, 2825.0], [38.0, 2837.0], [38.1, 2837.0], [38.2, 2837.0], [38.3, 2837.0], [38.4, 2837.0], [38.5, 2837.0], [38.6, 2837.0], [38.7, 2837.0], [38.8, 2837.0], [38.9, 2837.0], [39.0, 2879.0], [39.1, 2879.0], [39.2, 2879.0], [39.3, 2879.0], [39.4, 2879.0], [39.5, 2879.0], [39.6, 2879.0], [39.7, 2879.0], [39.8, 2879.0], [39.9, 2879.0], [40.0, 2887.0], [40.1, 2887.0], [40.2, 2887.0], [40.3, 2887.0], [40.4, 2887.0], [40.5, 2887.0], [40.6, 2887.0], [40.7, 2887.0], [40.8, 2887.0], [40.9, 2887.0], [41.0, 2899.0], [41.1, 2899.0], [41.2, 2899.0], [41.3, 2899.0], [41.4, 2899.0], [41.5, 2899.0], [41.6, 2899.0], [41.7, 2899.0], [41.8, 2899.0], [41.9, 2899.0], [42.0, 2931.0], [42.1, 2931.0], [42.2, 2931.0], [42.3, 2931.0], [42.4, 2931.0], [42.5, 2931.0], [42.6, 2931.0], [42.7, 2931.0], [42.8, 2931.0], [42.9, 2931.0], [43.0, 2936.0], [43.1, 2936.0], [43.2, 2936.0], [43.3, 2936.0], [43.4, 2936.0], [43.5, 2936.0], [43.6, 2936.0], [43.7, 2936.0], [43.8, 2936.0], [43.9, 2936.0], [44.0, 2966.0], [44.1, 2966.0], [44.2, 2966.0], [44.3, 2966.0], [44.4, 2966.0], [44.5, 2966.0], [44.6, 2966.0], [44.7, 2966.0], [44.8, 2966.0], [44.9, 2966.0], [45.0, 2972.0], [45.1, 2972.0], [45.2, 2972.0], [45.3, 2972.0], [45.4, 2972.0], [45.5, 2972.0], [45.6, 2972.0], [45.7, 2972.0], [45.8, 2972.0], [45.9, 2972.0], [46.0, 2988.0], [46.1, 2988.0], [46.2, 2988.0], [46.3, 2988.0], [46.4, 2988.0], [46.5, 2988.0], [46.6, 2988.0], [46.7, 2988.0], [46.8, 2988.0], [46.9, 2988.0], [47.0, 3009.0], [47.1, 3009.0], [47.2, 3009.0], [47.3, 3009.0], [47.4, 3009.0], [47.5, 3009.0], [47.6, 3009.0], [47.7, 3009.0], [47.8, 3009.0], [47.9, 3009.0], [48.0, 3074.0], [48.1, 3074.0], [48.2, 3074.0], [48.3, 3074.0], [48.4, 3074.0], [48.5, 3074.0], [48.6, 3074.0], [48.7, 3074.0], [48.8, 3074.0], [48.9, 3074.0], [49.0, 3102.0], [49.1, 3102.0], [49.2, 3102.0], [49.3, 3102.0], [49.4, 3102.0], [49.5, 3102.0], [49.6, 3102.0], [49.7, 3102.0], [49.8, 3102.0], [49.9, 3102.0], [50.0, 3120.0], [50.1, 3120.0], [50.2, 3120.0], [50.3, 3120.0], [50.4, 3120.0], [50.5, 3120.0], [50.6, 3120.0], [50.7, 3120.0], [50.8, 3120.0], [50.9, 3120.0], [51.0, 3156.0], [51.1, 3156.0], [51.2, 3156.0], [51.3, 3156.0], [51.4, 3156.0], [51.5, 3156.0], [51.6, 3156.0], [51.7, 3156.0], [51.8, 3156.0], [51.9, 3156.0], [52.0, 3179.0], [52.1, 3179.0], [52.2, 3179.0], [52.3, 3179.0], [52.4, 3179.0], [52.5, 3179.0], [52.6, 3179.0], [52.7, 3179.0], [52.8, 3179.0], [52.9, 3179.0], [53.0, 3204.0], [53.1, 3204.0], [53.2, 3204.0], [53.3, 3204.0], [53.4, 3204.0], [53.5, 3204.0], [53.6, 3204.0], [53.7, 3204.0], [53.8, 3204.0], [53.9, 3204.0], [54.0, 3213.0], [54.1, 3213.0], [54.2, 3213.0], [54.3, 3213.0], [54.4, 3213.0], [54.5, 3213.0], [54.6, 3213.0], [54.7, 3213.0], [54.8, 3213.0], [54.9, 3213.0], [55.0, 3220.0], [55.1, 3220.0], [55.2, 3220.0], [55.3, 3220.0], [55.4, 3220.0], [55.5, 3220.0], [55.6, 3220.0], [55.7, 3220.0], [55.8, 3220.0], [55.9, 3220.0], [56.0, 3248.0], [56.1, 3248.0], [56.2, 3248.0], [56.3, 3248.0], [56.4, 3248.0], [56.5, 3248.0], [56.6, 3248.0], [56.7, 3248.0], [56.8, 3248.0], [56.9, 3248.0], [57.0, 3249.0], [57.1, 3249.0], [57.2, 3249.0], [57.3, 3249.0], [57.4, 3249.0], [57.5, 3249.0], [57.6, 3249.0], [57.7, 3249.0], [57.8, 3249.0], [57.9, 3249.0], [58.0, 3250.0], [58.1, 3250.0], [58.2, 3250.0], [58.3, 3250.0], [58.4, 3250.0], [58.5, 3250.0], [58.6, 3250.0], [58.7, 3250.0], [58.8, 3250.0], [58.9, 3250.0], [59.0, 3257.0], [59.1, 3257.0], [59.2, 3257.0], [59.3, 3257.0], [59.4, 3257.0], [59.5, 3257.0], [59.6, 3257.0], [59.7, 3257.0], [59.8, 3257.0], [59.9, 3257.0], [60.0, 3267.0], [60.1, 3267.0], [60.2, 3267.0], [60.3, 3267.0], [60.4, 3267.0], [60.5, 3267.0], [60.6, 3267.0], [60.7, 3267.0], [60.8, 3267.0], [60.9, 3267.0], [61.0, 3273.0], [61.1, 3273.0], [61.2, 3273.0], [61.3, 3273.0], [61.4, 3273.0], [61.5, 3273.0], [61.6, 3273.0], [61.7, 3273.0], [61.8, 3273.0], [61.9, 3273.0], [62.0, 3287.0], [62.1, 3287.0], [62.2, 3287.0], [62.3, 3287.0], [62.4, 3287.0], [62.5, 3287.0], [62.6, 3287.0], [62.7, 3287.0], [62.8, 3287.0], [62.9, 3287.0], [63.0, 3296.0], [63.1, 3296.0], [63.2, 3296.0], [63.3, 3296.0], [63.4, 3296.0], [63.5, 3296.0], [63.6, 3296.0], [63.7, 3296.0], [63.8, 3296.0], [63.9, 3296.0], [64.0, 3304.0], [64.1, 3304.0], [64.2, 3304.0], [64.3, 3304.0], [64.4, 3304.0], [64.5, 3304.0], [64.6, 3304.0], [64.7, 3304.0], [64.8, 3304.0], [64.9, 3304.0], [65.0, 3307.0], [65.1, 3307.0], [65.2, 3307.0], [65.3, 3307.0], [65.4, 3307.0], [65.5, 3307.0], [65.6, 3307.0], [65.7, 3307.0], [65.8, 3307.0], [65.9, 3307.0], [66.0, 3345.0], [66.1, 3345.0], [66.2, 3345.0], [66.3, 3345.0], [66.4, 3345.0], [66.5, 3345.0], [66.6, 3345.0], [66.7, 3345.0], [66.8, 3345.0], [66.9, 3345.0], [67.0, 3390.0], [67.1, 3390.0], [67.2, 3390.0], [67.3, 3390.0], [67.4, 3390.0], [67.5, 3390.0], [67.6, 3390.0], [67.7, 3390.0], [67.8, 3390.0], [67.9, 3390.0], [68.0, 3399.0], [68.1, 3399.0], [68.2, 3399.0], [68.3, 3399.0], [68.4, 3399.0], [68.5, 3399.0], [68.6, 3399.0], [68.7, 3399.0], [68.8, 3399.0], [68.9, 3399.0], [69.0, 3418.0], [69.1, 3418.0], [69.2, 3418.0], [69.3, 3418.0], [69.4, 3418.0], [69.5, 3418.0], [69.6, 3418.0], [69.7, 3418.0], [69.8, 3418.0], [69.9, 3418.0], [70.0, 3439.0], [70.1, 3439.0], [70.2, 3439.0], [70.3, 3439.0], [70.4, 3439.0], [70.5, 3439.0], [70.6, 3439.0], [70.7, 3439.0], [70.8, 3439.0], [70.9, 3439.0], [71.0, 3440.0], [71.1, 3440.0], [71.2, 3440.0], [71.3, 3440.0], [71.4, 3440.0], [71.5, 3440.0], [71.6, 3440.0], [71.7, 3440.0], [71.8, 3440.0], [71.9, 3440.0], [72.0, 3451.0], [72.1, 3451.0], [72.2, 3451.0], [72.3, 3451.0], [72.4, 3451.0], [72.5, 3451.0], [72.6, 3451.0], [72.7, 3451.0], [72.8, 3451.0], [72.9, 3451.0], [73.0, 3514.0], [73.1, 3514.0], [73.2, 3514.0], [73.3, 3514.0], [73.4, 3514.0], [73.5, 3514.0], [73.6, 3514.0], [73.7, 3514.0], [73.8, 3514.0], [73.9, 3514.0], [74.0, 3578.0], [74.1, 3578.0], [74.2, 3578.0], [74.3, 3578.0], [74.4, 3578.0], [74.5, 3578.0], [74.6, 3578.0], [74.7, 3578.0], [74.8, 3578.0], [74.9, 3578.0], [75.0, 3610.0], [75.1, 3610.0], [75.2, 3610.0], [75.3, 3610.0], [75.4, 3610.0], [75.5, 3610.0], [75.6, 3610.0], [75.7, 3610.0], [75.8, 3610.0], [75.9, 3610.0], [76.0, 3620.0], [76.1, 3620.0], [76.2, 3620.0], [76.3, 3620.0], [76.4, 3620.0], [76.5, 3620.0], [76.6, 3620.0], [76.7, 3620.0], [76.8, 3620.0], [76.9, 3620.0], [77.0, 3656.0], [77.1, 3656.0], [77.2, 3656.0], [77.3, 3656.0], [77.4, 3656.0], [77.5, 3656.0], [77.6, 3656.0], [77.7, 3656.0], [77.8, 3656.0], [77.9, 3656.0], [78.0, 3659.0], [78.1, 3659.0], [78.2, 3659.0], [78.3, 3659.0], [78.4, 3659.0], [78.5, 3659.0], [78.6, 3659.0], [78.7, 3659.0], [78.8, 3659.0], [78.9, 3659.0], [79.0, 3662.0], [79.1, 3662.0], [79.2, 3662.0], [79.3, 3662.0], [79.4, 3662.0], [79.5, 3662.0], [79.6, 3662.0], [79.7, 3662.0], [79.8, 3662.0], [79.9, 3662.0], [80.0, 3663.0], [80.1, 3663.0], [80.2, 3663.0], [80.3, 3663.0], [80.4, 3663.0], [80.5, 3663.0], [80.6, 3663.0], [80.7, 3663.0], [80.8, 3663.0], [80.9, 3663.0], [81.0, 3675.0], [81.1, 3675.0], [81.2, 3675.0], [81.3, 3675.0], [81.4, 3675.0], [81.5, 3675.0], [81.6, 3675.0], [81.7, 3675.0], [81.8, 3675.0], [81.9, 3675.0], [82.0, 3703.0], [82.1, 3703.0], [82.2, 3703.0], [82.3, 3703.0], [82.4, 3703.0], [82.5, 3703.0], [82.6, 3703.0], [82.7, 3703.0], [82.8, 3703.0], [82.9, 3703.0], [83.0, 3717.0], [83.1, 3717.0], [83.2, 3717.0], [83.3, 3717.0], [83.4, 3717.0], [83.5, 3717.0], [83.6, 3717.0], [83.7, 3717.0], [83.8, 3717.0], [83.9, 3717.0], [84.0, 3721.0], [84.1, 3721.0], [84.2, 3721.0], [84.3, 3721.0], [84.4, 3721.0], [84.5, 3721.0], [84.6, 3721.0], [84.7, 3721.0], [84.8, 3721.0], [84.9, 3721.0], [85.0, 3735.0], [85.1, 3735.0], [85.2, 3735.0], [85.3, 3735.0], [85.4, 3735.0], [85.5, 3735.0], [85.6, 3735.0], [85.7, 3735.0], [85.8, 3735.0], [85.9, 3735.0], [86.0, 3743.0], [86.1, 3743.0], [86.2, 3743.0], [86.3, 3743.0], [86.4, 3743.0], [86.5, 3743.0], [86.6, 3743.0], [86.7, 3743.0], [86.8, 3743.0], [86.9, 3743.0], [87.0, 3750.0], [87.1, 3750.0], [87.2, 3750.0], [87.3, 3750.0], [87.4, 3750.0], [87.5, 3750.0], [87.6, 3750.0], [87.7, 3750.0], [87.8, 3750.0], [87.9, 3750.0], [88.0, 3753.0], [88.1, 3753.0], [88.2, 3753.0], [88.3, 3753.0], [88.4, 3753.0], [88.5, 3753.0], [88.6, 3753.0], [88.7, 3753.0], [88.8, 3753.0], [88.9, 3753.0], [89.0, 3781.0], [89.1, 3781.0], [89.2, 3781.0], [89.3, 3781.0], [89.4, 3781.0], [89.5, 3781.0], [89.6, 3781.0], [89.7, 3781.0], [89.8, 3781.0], [89.9, 3781.0], [90.0, 3785.0], [90.1, 3785.0], [90.2, 3785.0], [90.3, 3785.0], [90.4, 3785.0], [90.5, 3785.0], [90.6, 3785.0], [90.7, 3785.0], [90.8, 3785.0], [90.9, 3785.0], [91.0, 3843.0], [91.1, 3843.0], [91.2, 3843.0], [91.3, 3843.0], [91.4, 3843.0], [91.5, 3843.0], [91.6, 3843.0], [91.7, 3843.0], [91.8, 3843.0], [91.9, 3843.0], [92.0, 3967.0], [92.1, 3967.0], [92.2, 3967.0], [92.3, 3967.0], [92.4, 3967.0], [92.5, 3967.0], [92.6, 3967.0], [92.7, 3967.0], [92.8, 3967.0], [92.9, 3967.0], [93.0, 4102.0], [93.1, 4102.0], [93.2, 4102.0], [93.3, 4102.0], [93.4, 4102.0], [93.5, 4102.0], [93.6, 4102.0], [93.7, 4102.0], [93.8, 4102.0], [93.9, 4102.0], [94.0, 4183.0], [94.1, 4183.0], [94.2, 4183.0], [94.3, 4183.0], [94.4, 4183.0], [94.5, 4183.0], [94.6, 4183.0], [94.7, 4183.0], [94.8, 4183.0], [94.9, 4183.0], [95.0, 4208.0], [95.1, 4208.0], [95.2, 4208.0], [95.3, 4208.0], [95.4, 4208.0], [95.5, 4208.0], [95.6, 4208.0], [95.7, 4208.0], [95.8, 4208.0], [95.9, 4208.0], [96.0, 4212.0], [96.1, 4212.0], [96.2, 4212.0], [96.3, 4212.0], [96.4, 4212.0], [96.5, 4212.0], [96.6, 4212.0], [96.7, 4212.0], [96.8, 4212.0], [96.9, 4212.0], [97.0, 4233.0], [97.1, 4233.0], [97.2, 4233.0], [97.3, 4233.0], [97.4, 4233.0], [97.5, 4233.0], [97.6, 4233.0], [97.7, 4233.0], [97.8, 4233.0], [97.9, 4233.0], [98.0, 4362.0], [98.1, 4362.0], [98.2, 4362.0], [98.3, 4362.0], [98.4, 4362.0], [98.5, 4362.0], [98.6, 4362.0], [98.7, 4362.0], [98.8, 4362.0], [98.9, 4362.0], [99.0, 4984.0], [99.1, 4984.0], [99.2, 4984.0], [99.3, 4984.0], [99.4, 4984.0], [99.5, 4984.0], [99.6, 4984.0], [99.7, 4984.0], [99.8, 4984.0], [99.9, 4984.0]], "isOverall": false, "label": "View Items", "isController": false}, {"data": [[0.0, 1855.0], [0.1, 1855.0], [0.2, 1855.0], [0.3, 1855.0], [0.4, 1855.0], [0.5, 1855.0], [0.6, 1855.0], [0.7, 1855.0], [0.8, 1855.0], [0.9, 1855.0], [1.0, 1861.0], [1.1, 1861.0], [1.2, 1861.0], [1.3, 1861.0], [1.4, 1861.0], [1.5, 1861.0], [1.6, 1861.0], [1.7, 1861.0], [1.8, 1861.0], [1.9, 1861.0], [2.0, 1878.0], [2.1, 1878.0], [2.2, 1878.0], [2.3, 1878.0], [2.4, 1878.0], [2.5, 1878.0], [2.6, 1878.0], [2.7, 1878.0], [2.8, 1878.0], [2.9, 1878.0], [3.0, 1883.0], [3.1, 1883.0], [3.2, 1883.0], [3.3, 1883.0], [3.4, 1883.0], [3.5, 1883.0], [3.6, 1883.0], [3.7, 1883.0], [3.8, 1883.0], [3.9, 1883.0], [4.0, 1884.0], [4.1, 1884.0], [4.2, 1884.0], [4.3, 1884.0], [4.4, 1884.0], [4.5, 1884.0], [4.6, 1884.0], [4.7, 1884.0], [4.8, 1884.0], [4.9, 1884.0], [5.0, 1886.0], [5.1, 1886.0], [5.2, 1886.0], [5.3, 1886.0], [5.4, 1886.0], [5.5, 1886.0], [5.6, 1886.0], [5.7, 1886.0], [5.8, 1886.0], [5.9, 1886.0], [6.0, 1891.0], [6.1, 1891.0], [6.2, 1891.0], [6.3, 1891.0], [6.4, 1891.0], [6.5, 1891.0], [6.6, 1891.0], [6.7, 1891.0], [6.8, 1891.0], [6.9, 1891.0], [7.0, 1895.0], [7.1, 1895.0], [7.2, 1895.0], [7.3, 1895.0], [7.4, 1895.0], [7.5, 1895.0], [7.6, 1895.0], [7.7, 1895.0], [7.8, 1895.0], [7.9, 1895.0], [8.0, 1904.0], [8.1, 1904.0], [8.2, 1904.0], [8.3, 1904.0], [8.4, 1904.0], [8.5, 1904.0], [8.6, 1904.0], [8.7, 1904.0], [8.8, 1904.0], [8.9, 1904.0], [9.0, 1912.0], [9.1, 1912.0], [9.2, 1912.0], [9.3, 1912.0], [9.4, 1912.0], [9.5, 1912.0], [9.6, 1912.0], [9.7, 1912.0], [9.8, 1912.0], [9.9, 1912.0], [10.0, 1913.0], [10.1, 1913.0], [10.2, 1913.0], [10.3, 1913.0], [10.4, 1913.0], [10.5, 1913.0], [10.6, 1913.0], [10.7, 1913.0], [10.8, 1913.0], [10.9, 1913.0], [11.0, 1916.0], [11.1, 1916.0], [11.2, 1916.0], [11.3, 1916.0], [11.4, 1916.0], [11.5, 1916.0], [11.6, 1916.0], [11.7, 1916.0], [11.8, 1916.0], [11.9, 1916.0], [12.0, 1918.0], [12.1, 1918.0], [12.2, 1918.0], [12.3, 1918.0], [12.4, 1918.0], [12.5, 1918.0], [12.6, 1918.0], [12.7, 1918.0], [12.8, 1918.0], [12.9, 1918.0], [13.0, 1919.0], [13.1, 1919.0], [13.2, 1919.0], [13.3, 1919.0], [13.4, 1919.0], [13.5, 1919.0], [13.6, 1919.0], [13.7, 1919.0], [13.8, 1919.0], [13.9, 1919.0], [14.0, 1919.0], [14.1, 1919.0], [14.2, 1919.0], [14.3, 1919.0], [14.4, 1919.0], [14.5, 1919.0], [14.6, 1919.0], [14.7, 1919.0], [14.8, 1919.0], [14.9, 1919.0], [15.0, 1920.0], [15.1, 1920.0], [15.2, 1920.0], [15.3, 1920.0], [15.4, 1920.0], [15.5, 1920.0], [15.6, 1920.0], [15.7, 1920.0], [15.8, 1920.0], [15.9, 1920.0], [16.0, 1931.0], [16.1, 1931.0], [16.2, 1931.0], [16.3, 1931.0], [16.4, 1931.0], [16.5, 1931.0], [16.6, 1931.0], [16.7, 1931.0], [16.8, 1931.0], [16.9, 1931.0], [17.0, 1936.0], [17.1, 1936.0], [17.2, 1936.0], [17.3, 1936.0], [17.4, 1936.0], [17.5, 1936.0], [17.6, 1936.0], [17.7, 1936.0], [17.8, 1936.0], [17.9, 1936.0], [18.0, 1937.0], [18.1, 1937.0], [18.2, 1937.0], [18.3, 1937.0], [18.4, 1937.0], [18.5, 1937.0], [18.6, 1937.0], [18.7, 1937.0], [18.8, 1937.0], [18.9, 1937.0], [19.0, 1938.0], [19.1, 1938.0], [19.2, 1938.0], [19.3, 1938.0], [19.4, 1938.0], [19.5, 1938.0], [19.6, 1938.0], [19.7, 1938.0], [19.8, 1938.0], [19.9, 1938.0], [20.0, 1942.0], [20.1, 1942.0], [20.2, 1942.0], [20.3, 1942.0], [20.4, 1942.0], [20.5, 1942.0], [20.6, 1942.0], [20.7, 1942.0], [20.8, 1942.0], [20.9, 1942.0], [21.0, 1950.0], [21.1, 1950.0], [21.2, 1950.0], [21.3, 1950.0], [21.4, 1950.0], [21.5, 1950.0], [21.6, 1950.0], [21.7, 1950.0], [21.8, 1950.0], [21.9, 1950.0], [22.0, 1951.0], [22.1, 1951.0], [22.2, 1951.0], [22.3, 1951.0], [22.4, 1951.0], [22.5, 1951.0], [22.6, 1951.0], [22.7, 1951.0], [22.8, 1951.0], [22.9, 1951.0], [23.0, 1952.0], [23.1, 1952.0], [23.2, 1952.0], [23.3, 1952.0], [23.4, 1952.0], [23.5, 1952.0], [23.6, 1952.0], [23.7, 1952.0], [23.8, 1952.0], [23.9, 1952.0], [24.0, 1967.0], [24.1, 1967.0], [24.2, 1967.0], [24.3, 1967.0], [24.4, 1967.0], [24.5, 1967.0], [24.6, 1967.0], [24.7, 1967.0], [24.8, 1967.0], [24.9, 1967.0], [25.0, 1989.0], [25.1, 1989.0], [25.2, 1989.0], [25.3, 1989.0], [25.4, 1989.0], [25.5, 1989.0], [25.6, 1989.0], [25.7, 1989.0], [25.8, 1989.0], [25.9, 1989.0], [26.0, 1993.0], [26.1, 1993.0], [26.2, 1993.0], [26.3, 1993.0], [26.4, 1993.0], [26.5, 1993.0], [26.6, 1993.0], [26.7, 1993.0], [26.8, 1993.0], [26.9, 1993.0], [27.0, 2000.0], [27.1, 2000.0], [27.2, 2000.0], [27.3, 2000.0], [27.4, 2000.0], [27.5, 2000.0], [27.6, 2000.0], [27.7, 2000.0], [27.8, 2000.0], [27.9, 2000.0], [28.0, 2007.0], [28.1, 2007.0], [28.2, 2007.0], [28.3, 2007.0], [28.4, 2007.0], [28.5, 2007.0], [28.6, 2007.0], [28.7, 2007.0], [28.8, 2007.0], [28.9, 2007.0], [29.0, 2011.0], [29.1, 2011.0], [29.2, 2011.0], [29.3, 2011.0], [29.4, 2011.0], [29.5, 2011.0], [29.6, 2011.0], [29.7, 2011.0], [29.8, 2011.0], [29.9, 2011.0], [30.0, 2029.0], [30.1, 2029.0], [30.2, 2029.0], [30.3, 2029.0], [30.4, 2029.0], [30.5, 2029.0], [30.6, 2029.0], [30.7, 2029.0], [30.8, 2029.0], [30.9, 2029.0], [31.0, 2039.0], [31.1, 2039.0], [31.2, 2039.0], [31.3, 2039.0], [31.4, 2039.0], [31.5, 2039.0], [31.6, 2039.0], [31.7, 2039.0], [31.8, 2039.0], [31.9, 2039.0], [32.0, 2043.0], [32.1, 2043.0], [32.2, 2043.0], [32.3, 2043.0], [32.4, 2043.0], [32.5, 2043.0], [32.6, 2043.0], [32.7, 2043.0], [32.8, 2043.0], [32.9, 2043.0], [33.0, 2065.0], [33.1, 2065.0], [33.2, 2065.0], [33.3, 2065.0], [33.4, 2065.0], [33.5, 2065.0], [33.6, 2065.0], [33.7, 2065.0], [33.8, 2065.0], [33.9, 2065.0], [34.0, 2108.0], [34.1, 2108.0], [34.2, 2108.0], [34.3, 2108.0], [34.4, 2108.0], [34.5, 2108.0], [34.6, 2108.0], [34.7, 2108.0], [34.8, 2108.0], [34.9, 2108.0], [35.0, 2110.0], [35.1, 2110.0], [35.2, 2110.0], [35.3, 2110.0], [35.4, 2110.0], [35.5, 2110.0], [35.6, 2110.0], [35.7, 2110.0], [35.8, 2110.0], [35.9, 2110.0], [36.0, 2116.0], [36.1, 2116.0], [36.2, 2116.0], [36.3, 2116.0], [36.4, 2116.0], [36.5, 2116.0], [36.6, 2116.0], [36.7, 2116.0], [36.8, 2116.0], [36.9, 2116.0], [37.0, 2118.0], [37.1, 2118.0], [37.2, 2118.0], [37.3, 2118.0], [37.4, 2118.0], [37.5, 2118.0], [37.6, 2118.0], [37.7, 2118.0], [37.8, 2118.0], [37.9, 2118.0], [38.0, 2121.0], [38.1, 2121.0], [38.2, 2121.0], [38.3, 2121.0], [38.4, 2121.0], [38.5, 2121.0], [38.6, 2121.0], [38.7, 2121.0], [38.8, 2121.0], [38.9, 2121.0], [39.0, 2140.0], [39.1, 2140.0], [39.2, 2140.0], [39.3, 2140.0], [39.4, 2140.0], [39.5, 2140.0], [39.6, 2140.0], [39.7, 2140.0], [39.8, 2140.0], [39.9, 2140.0], [40.0, 2140.0], [40.1, 2140.0], [40.2, 2140.0], [40.3, 2140.0], [40.4, 2140.0], [40.5, 2140.0], [40.6, 2140.0], [40.7, 2140.0], [40.8, 2140.0], [40.9, 2140.0], [41.0, 2156.0], [41.1, 2156.0], [41.2, 2156.0], [41.3, 2156.0], [41.4, 2156.0], [41.5, 2156.0], [41.6, 2156.0], [41.7, 2156.0], [41.8, 2156.0], [41.9, 2156.0], [42.0, 2197.0], [42.1, 2197.0], [42.2, 2197.0], [42.3, 2197.0], [42.4, 2197.0], [42.5, 2197.0], [42.6, 2197.0], [42.7, 2197.0], [42.8, 2197.0], [42.9, 2197.0], [43.0, 2206.0], [43.1, 2206.0], [43.2, 2206.0], [43.3, 2206.0], [43.4, 2206.0], [43.5, 2206.0], [43.6, 2206.0], [43.7, 2206.0], [43.8, 2206.0], [43.9, 2206.0], [44.0, 2211.0], [44.1, 2211.0], [44.2, 2211.0], [44.3, 2211.0], [44.4, 2211.0], [44.5, 2211.0], [44.6, 2211.0], [44.7, 2211.0], [44.8, 2211.0], [44.9, 2211.0], [45.0, 2212.0], [45.1, 2212.0], [45.2, 2212.0], [45.3, 2212.0], [45.4, 2212.0], [45.5, 2212.0], [45.6, 2212.0], [45.7, 2212.0], [45.8, 2212.0], [45.9, 2212.0], [46.0, 2239.0], [46.1, 2239.0], [46.2, 2239.0], [46.3, 2239.0], [46.4, 2239.0], [46.5, 2239.0], [46.6, 2239.0], [46.7, 2239.0], [46.8, 2239.0], [46.9, 2239.0], [47.0, 2289.0], [47.1, 2289.0], [47.2, 2289.0], [47.3, 2289.0], [47.4, 2289.0], [47.5, 2289.0], [47.6, 2289.0], [47.7, 2289.0], [47.8, 2289.0], [47.9, 2289.0], [48.0, 2300.0], [48.1, 2300.0], [48.2, 2300.0], [48.3, 2300.0], [48.4, 2300.0], [48.5, 2300.0], [48.6, 2300.0], [48.7, 2300.0], [48.8, 2300.0], [48.9, 2300.0], [49.0, 2303.0], [49.1, 2303.0], [49.2, 2303.0], [49.3, 2303.0], [49.4, 2303.0], [49.5, 2303.0], [49.6, 2303.0], [49.7, 2303.0], [49.8, 2303.0], [49.9, 2303.0], [50.0, 2316.0], [50.1, 2316.0], [50.2, 2316.0], [50.3, 2316.0], [50.4, 2316.0], [50.5, 2316.0], [50.6, 2316.0], [50.7, 2316.0], [50.8, 2316.0], [50.9, 2316.0], [51.0, 2325.0], [51.1, 2325.0], [51.2, 2325.0], [51.3, 2325.0], [51.4, 2325.0], [51.5, 2325.0], [51.6, 2325.0], [51.7, 2325.0], [51.8, 2325.0], [51.9, 2325.0], [52.0, 2330.0], [52.1, 2330.0], [52.2, 2330.0], [52.3, 2330.0], [52.4, 2330.0], [52.5, 2330.0], [52.6, 2330.0], [52.7, 2330.0], [52.8, 2330.0], [52.9, 2330.0], [53.0, 2332.0], [53.1, 2332.0], [53.2, 2332.0], [53.3, 2332.0], [53.4, 2332.0], [53.5, 2332.0], [53.6, 2332.0], [53.7, 2332.0], [53.8, 2332.0], [53.9, 2332.0], [54.0, 2333.0], [54.1, 2333.0], [54.2, 2333.0], [54.3, 2333.0], [54.4, 2333.0], [54.5, 2333.0], [54.6, 2333.0], [54.7, 2333.0], [54.8, 2333.0], [54.9, 2333.0], [55.0, 2333.0], [55.1, 2333.0], [55.2, 2333.0], [55.3, 2333.0], [55.4, 2333.0], [55.5, 2333.0], [55.6, 2333.0], [55.7, 2333.0], [55.8, 2333.0], [55.9, 2333.0], [56.0, 2333.0], [56.1, 2333.0], [56.2, 2333.0], [56.3, 2333.0], [56.4, 2333.0], [56.5, 2333.0], [56.6, 2333.0], [56.7, 2333.0], [56.8, 2333.0], [56.9, 2333.0], [57.0, 2334.0], [57.1, 2334.0], [57.2, 2334.0], [57.3, 2334.0], [57.4, 2334.0], [57.5, 2334.0], [57.6, 2334.0], [57.7, 2334.0], [57.8, 2334.0], [57.9, 2334.0], [58.0, 2334.0], [58.1, 2334.0], [58.2, 2334.0], [58.3, 2334.0], [58.4, 2334.0], [58.5, 2334.0], [58.6, 2334.0], [58.7, 2334.0], [58.8, 2334.0], [58.9, 2334.0], [59.0, 2344.0], [59.1, 2344.0], [59.2, 2344.0], [59.3, 2344.0], [59.4, 2344.0], [59.5, 2344.0], [59.6, 2344.0], [59.7, 2344.0], [59.8, 2344.0], [59.9, 2344.0], [60.0, 2346.0], [60.1, 2346.0], [60.2, 2346.0], [60.3, 2346.0], [60.4, 2346.0], [60.5, 2346.0], [60.6, 2346.0], [60.7, 2346.0], [60.8, 2346.0], [60.9, 2346.0], [61.0, 2353.0], [61.1, 2353.0], [61.2, 2353.0], [61.3, 2353.0], [61.4, 2353.0], [61.5, 2353.0], [61.6, 2353.0], [61.7, 2353.0], [61.8, 2353.0], [61.9, 2353.0], [62.0, 2363.0], [62.1, 2363.0], [62.2, 2363.0], [62.3, 2363.0], [62.4, 2363.0], [62.5, 2363.0], [62.6, 2363.0], [62.7, 2363.0], [62.8, 2363.0], [62.9, 2363.0], [63.0, 2384.0], [63.1, 2384.0], [63.2, 2384.0], [63.3, 2384.0], [63.4, 2384.0], [63.5, 2384.0], [63.6, 2384.0], [63.7, 2384.0], [63.8, 2384.0], [63.9, 2384.0], [64.0, 2391.0], [64.1, 2391.0], [64.2, 2391.0], [64.3, 2391.0], [64.4, 2391.0], [64.5, 2391.0], [64.6, 2391.0], [64.7, 2391.0], [64.8, 2391.0], [64.9, 2391.0], [65.0, 2400.0], [65.1, 2400.0], [65.2, 2400.0], [65.3, 2400.0], [65.4, 2400.0], [65.5, 2400.0], [65.6, 2400.0], [65.7, 2400.0], [65.8, 2400.0], [65.9, 2400.0], [66.0, 2410.0], [66.1, 2410.0], [66.2, 2410.0], [66.3, 2410.0], [66.4, 2410.0], [66.5, 2410.0], [66.6, 2410.0], [66.7, 2410.0], [66.8, 2410.0], [66.9, 2410.0], [67.0, 2428.0], [67.1, 2428.0], [67.2, 2428.0], [67.3, 2428.0], [67.4, 2428.0], [67.5, 2428.0], [67.6, 2428.0], [67.7, 2428.0], [67.8, 2428.0], [67.9, 2428.0], [68.0, 2437.0], [68.1, 2437.0], [68.2, 2437.0], [68.3, 2437.0], [68.4, 2437.0], [68.5, 2437.0], [68.6, 2437.0], [68.7, 2437.0], [68.8, 2437.0], [68.9, 2437.0], [69.0, 2444.0], [69.1, 2444.0], [69.2, 2444.0], [69.3, 2444.0], [69.4, 2444.0], [69.5, 2444.0], [69.6, 2444.0], [69.7, 2444.0], [69.8, 2444.0], [69.9, 2444.0], [70.0, 2448.0], [70.1, 2448.0], [70.2, 2448.0], [70.3, 2448.0], [70.4, 2448.0], [70.5, 2448.0], [70.6, 2448.0], [70.7, 2448.0], [70.8, 2448.0], [70.9, 2448.0], [71.0, 2449.0], [71.1, 2449.0], [71.2, 2449.0], [71.3, 2449.0], [71.4, 2449.0], [71.5, 2449.0], [71.6, 2449.0], [71.7, 2449.0], [71.8, 2449.0], [71.9, 2449.0], [72.0, 2451.0], [72.1, 2451.0], [72.2, 2451.0], [72.3, 2451.0], [72.4, 2451.0], [72.5, 2451.0], [72.6, 2451.0], [72.7, 2451.0], [72.8, 2451.0], [72.9, 2451.0], [73.0, 2473.0], [73.1, 2473.0], [73.2, 2473.0], [73.3, 2473.0], [73.4, 2473.0], [73.5, 2473.0], [73.6, 2473.0], [73.7, 2473.0], [73.8, 2473.0], [73.9, 2473.0], [74.0, 2532.0], [74.1, 2532.0], [74.2, 2532.0], [74.3, 2532.0], [74.4, 2532.0], [74.5, 2532.0], [74.6, 2532.0], [74.7, 2532.0], [74.8, 2532.0], [74.9, 2532.0], [75.0, 2533.0], [75.1, 2533.0], [75.2, 2533.0], [75.3, 2533.0], [75.4, 2533.0], [75.5, 2533.0], [75.6, 2533.0], [75.7, 2533.0], [75.8, 2533.0], [75.9, 2533.0], [76.0, 2551.0], [76.1, 2551.0], [76.2, 2551.0], [76.3, 2551.0], [76.4, 2551.0], [76.5, 2551.0], [76.6, 2551.0], [76.7, 2551.0], [76.8, 2551.0], [76.9, 2551.0], [77.0, 2553.0], [77.1, 2553.0], [77.2, 2553.0], [77.3, 2553.0], [77.4, 2553.0], [77.5, 2553.0], [77.6, 2553.0], [77.7, 2553.0], [77.8, 2553.0], [77.9, 2553.0], [78.0, 2620.0], [78.1, 2620.0], [78.2, 2620.0], [78.3, 2620.0], [78.4, 2620.0], [78.5, 2620.0], [78.6, 2620.0], [78.7, 2620.0], [78.8, 2620.0], [78.9, 2620.0], [79.0, 2636.0], [79.1, 2636.0], [79.2, 2636.0], [79.3, 2636.0], [79.4, 2636.0], [79.5, 2636.0], [79.6, 2636.0], [79.7, 2636.0], [79.8, 2636.0], [79.9, 2636.0], [80.0, 2637.0], [80.1, 2637.0], [80.2, 2637.0], [80.3, 2637.0], [80.4, 2637.0], [80.5, 2637.0], [80.6, 2637.0], [80.7, 2637.0], [80.8, 2637.0], [80.9, 2637.0], [81.0, 2733.0], [81.1, 2733.0], [81.2, 2733.0], [81.3, 2733.0], [81.4, 2733.0], [81.5, 2733.0], [81.6, 2733.0], [81.7, 2733.0], [81.8, 2733.0], [81.9, 2733.0], [82.0, 2740.0], [82.1, 2740.0], [82.2, 2740.0], [82.3, 2740.0], [82.4, 2740.0], [82.5, 2740.0], [82.6, 2740.0], [82.7, 2740.0], [82.8, 2740.0], [82.9, 2740.0], [83.0, 2797.0], [83.1, 2797.0], [83.2, 2797.0], [83.3, 2797.0], [83.4, 2797.0], [83.5, 2797.0], [83.6, 2797.0], [83.7, 2797.0], [83.8, 2797.0], [83.9, 2797.0], [84.0, 2797.0], [84.1, 2797.0], [84.2, 2797.0], [84.3, 2797.0], [84.4, 2797.0], [84.5, 2797.0], [84.6, 2797.0], [84.7, 2797.0], [84.8, 2797.0], [84.9, 2797.0], [85.0, 2799.0], [85.1, 2799.0], [85.2, 2799.0], [85.3, 2799.0], [85.4, 2799.0], [85.5, 2799.0], [85.6, 2799.0], [85.7, 2799.0], [85.8, 2799.0], [85.9, 2799.0], [86.0, 2836.0], [86.1, 2836.0], [86.2, 2836.0], [86.3, 2836.0], [86.4, 2836.0], [86.5, 2836.0], [86.6, 2836.0], [86.7, 2836.0], [86.8, 2836.0], [86.9, 2836.0], [87.0, 2874.0], [87.1, 2874.0], [87.2, 2874.0], [87.3, 2874.0], [87.4, 2874.0], [87.5, 2874.0], [87.6, 2874.0], [87.7, 2874.0], [87.8, 2874.0], [87.9, 2874.0], [88.0, 2874.0], [88.1, 2874.0], [88.2, 2874.0], [88.3, 2874.0], [88.4, 2874.0], [88.5, 2874.0], [88.6, 2874.0], [88.7, 2874.0], [88.8, 2874.0], [88.9, 2874.0], [89.0, 2903.0], [89.1, 2903.0], [89.2, 2903.0], [89.3, 2903.0], [89.4, 2903.0], [89.5, 2903.0], [89.6, 2903.0], [89.7, 2903.0], [89.8, 2903.0], [89.9, 2903.0], [90.0, 2926.0], [90.1, 2926.0], [90.2, 2926.0], [90.3, 2926.0], [90.4, 2926.0], [90.5, 2926.0], [90.6, 2926.0], [90.7, 2926.0], [90.8, 2926.0], [90.9, 2926.0], [91.0, 2928.0], [91.1, 2928.0], [91.2, 2928.0], [91.3, 2928.0], [91.4, 2928.0], [91.5, 2928.0], [91.6, 2928.0], [91.7, 2928.0], [91.8, 2928.0], [91.9, 2928.0], [92.0, 3013.0], [92.1, 3013.0], [92.2, 3013.0], [92.3, 3013.0], [92.4, 3013.0], [92.5, 3013.0], [92.6, 3013.0], [92.7, 3013.0], [92.8, 3013.0], [92.9, 3013.0], [93.0, 3031.0], [93.1, 3031.0], [93.2, 3031.0], [93.3, 3031.0], [93.4, 3031.0], [93.5, 3031.0], [93.6, 3031.0], [93.7, 3031.0], [93.8, 3031.0], [93.9, 3031.0], [94.0, 3035.0], [94.1, 3035.0], [94.2, 3035.0], [94.3, 3035.0], [94.4, 3035.0], [94.5, 3035.0], [94.6, 3035.0], [94.7, 3035.0], [94.8, 3035.0], [94.9, 3035.0], [95.0, 3046.0], [95.1, 3046.0], [95.2, 3046.0], [95.3, 3046.0], [95.4, 3046.0], [95.5, 3046.0], [95.6, 3046.0], [95.7, 3046.0], [95.8, 3046.0], [95.9, 3046.0], [96.0, 3145.0], [96.1, 3145.0], [96.2, 3145.0], [96.3, 3145.0], [96.4, 3145.0], [96.5, 3145.0], [96.6, 3145.0], [96.7, 3145.0], [96.8, 3145.0], [96.9, 3145.0], [97.0, 3241.0], [97.1, 3241.0], [97.2, 3241.0], [97.3, 3241.0], [97.4, 3241.0], [97.5, 3241.0], [97.6, 3241.0], [97.7, 3241.0], [97.8, 3241.0], [97.9, 3241.0], [98.0, 3328.0], [98.1, 3328.0], [98.2, 3328.0], [98.3, 3328.0], [98.4, 3328.0], [98.5, 3328.0], [98.6, 3328.0], [98.7, 3328.0], [98.8, 3328.0], [98.9, 3328.0], [99.0, 3613.0], [99.1, 3613.0], [99.2, 3613.0], [99.3, 3613.0], [99.4, 3613.0], [99.5, 3613.0], [99.6, 3613.0], [99.7, 3613.0], [99.8, 3613.0], [99.9, 3613.0]], "isOverall": false, "label": "Compare Item", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 1600.0, "maxY": 19.0, "series": [{"data": [[2100.0, 4.0], [2200.0, 8.0], [2300.0, 6.0], [2400.0, 2.0], [2500.0, 6.0], [2600.0, 5.0], [2800.0, 1.0], [2700.0, 6.0], [3000.0, 2.0], [3100.0, 2.0], [3200.0, 1.0], [3400.0, 3.0], [3600.0, 1.0], [3800.0, 2.0], [4000.0, 1.0], [1600.0, 9.0], [1700.0, 13.0], [1800.0, 9.0], [1900.0, 11.0], [2000.0, 8.0]], "isOverall": false, "label": "Category Drill down", "isController": false}, {"data": [[2900.0, 2.0], [3000.0, 3.0], [3100.0, 5.0], [3300.0, 3.0], [3200.0, 7.0], [3400.0, 10.0], [3500.0, 5.0], [3700.0, 4.0], [3600.0, 6.0], [3800.0, 8.0], [3900.0, 6.0], [4000.0, 6.0], [4200.0, 6.0], [4100.0, 5.0], [4300.0, 3.0], [4600.0, 3.0], [4400.0, 3.0], [4500.0, 3.0], [4700.0, 3.0], [4800.0, 1.0], [4900.0, 4.0], [5100.0, 1.0], [5000.0, 1.0], [5200.0, 2.0]], "isOverall": false, "label": "Item Details", "isController": false}, {"data": [[2100.0, 1.0], [2300.0, 4.0], [2200.0, 2.0], [2400.0, 6.0], [2500.0, 9.0], [2600.0, 7.0], [2800.0, 6.0], [2700.0, 6.0], [2900.0, 5.0], [3000.0, 2.0], [3100.0, 4.0], [3200.0, 11.0], [3300.0, 5.0], [3400.0, 4.0], [3500.0, 2.0], [3700.0, 9.0], [3600.0, 7.0], [3800.0, 1.0], [3900.0, 1.0], [4200.0, 3.0], [4300.0, 1.0], [4100.0, 2.0], [4900.0, 1.0], [1900.0, 1.0]], "isOverall": false, "label": "View Items", "isController": false}, {"data": [[2100.0, 9.0], [2300.0, 17.0], [2200.0, 5.0], [2400.0, 9.0], [2500.0, 4.0], [2600.0, 3.0], [2800.0, 3.0], [2700.0, 5.0], [2900.0, 3.0], [3000.0, 4.0], [3100.0, 1.0], [3200.0, 1.0], [3300.0, 1.0], [3600.0, 1.0], [1800.0, 8.0], [1900.0, 19.0], [2000.0, 7.0]], "isOverall": false, "label": "Compare Item", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 5200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 400.0, "minX": 2.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 400.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 400.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 33.33898305084746, "minX": 1.57312284E12, "maxY": 43.88856304985333, "series": [{"data": [[1.5731229E12, 43.88856304985333], [1.57312284E12, 33.33898305084746]], "isOverall": false, "label": "User_50-10", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5731229E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1667.0, "minX": 1.0, "maxY": 4840.0, "series": [{"data": [[33.0, 1841.0], [35.0, 2915.6666666666665], [36.0, 1708.0], [37.0, 1699.0], [38.0, 1763.0], [39.0, 1690.0], [41.0, 1702.0], [42.0, 1730.0], [43.0, 2419.5], [45.0, 3966.5], [47.0, 1967.0], [48.0, 2391.75], [50.0, 2289.5], [13.0, 2179.3333333333335], [14.0, 1732.0], [16.0, 2220.0], [18.0, 1674.0], [20.0, 1667.0], [21.0, 1737.0], [22.0, 2601.0], [23.0, 2862.3333333333335], [25.0, 2009.0], [27.0, 2269.0], [28.0, 1852.5], [29.0, 1681.0], [30.0, 1686.0], [31.0, 1674.0]], "isOverall": false, "label": "Category Drill down", "isController": false}, {"data": [[42.41, 2271.5699999999993]], "isOverall": false, "label": "Category Drill down-Aggregated", "isController": false}, {"data": [[39.0, 3897.0], [38.0, 4840.0], [40.0, 3990.0], [10.0, 3266.0], [43.0, 3868.6666666666665], [42.0, 4125.0], [44.0, 3304.0], [47.0, 3553.6666666666665], [46.0, 3110.0], [49.0, 3988.0], [48.0, 4236.142857142857], [50.0, 4078.189655172413], [14.0, 3164.3333333333335], [17.0, 3422.0], [18.0, 3129.8], [19.0, 3182.0], [5.0, 3114.0], [22.0, 3154.0], [25.0, 3821.0]], "isOverall": false, "label": "Item Details", "isController": false}, {"data": [[43.23999999999998, 3914.0700000000006]], "isOverall": false, "label": "Item Details-Aggregated", "isController": false}, {"data": [[32.0, 3482.6666666666665], [33.0, 2972.0], [34.0, 4220.5], [35.0, 3753.0], [36.0, 2786.3333333333335], [37.0, 3326.5], [38.0, 1936.0], [39.0, 3390.0], [40.0, 3620.0], [41.0, 3656.0], [43.0, 3145.857142857143], [45.0, 3351.3333333333335], [46.0, 2162.0], [47.0, 3077.0], [48.0, 3212.8], [49.0, 3324.3333333333335], [50.0, 3067.8474576271187], [19.0, 2433.0], [27.0, 2745.0], [31.0, 3089.0]], "isOverall": false, "label": "View Items", "isController": false}, {"data": [[45.929999999999986, 3120.149999999999]], "isOverall": false, "label": "View Items-Aggregated", "isController": false}, {"data": [[2.0, 1912.0], [3.0, 2011.0], [4.0, 1861.0], [5.0, 1936.0], [6.0, 2043.0], [7.0, 1855.0], [8.0, 1950.0], [9.0, 1942.0], [10.0, 1904.0], [11.0, 1884.0], [12.0, 2000.0], [13.0, 1878.0], [14.0, 1883.0], [15.0, 1920.0], [16.0, 1919.0], [17.0, 1938.0], [18.0, 1891.0], [19.0, 2007.0], [20.0, 2029.0], [21.0, 2039.0], [22.0, 2121.0], [23.0, 1918.0], [24.0, 2065.0], [25.0, 2118.0], [26.0, 2391.0], [27.0, 2325.0], [28.0, 1937.0], [29.0, 2116.0], [30.0, 2400.0], [31.0, 1951.0], [33.0, 2333.0], [32.0, 3613.0], [35.0, 2333.0], [34.0, 2836.0], [37.0, 2410.0], [36.0, 2330.0], [39.0, 2926.0], [38.0, 2333.0], [41.0, 2334.0], [40.0, 2620.0], [43.0, 2303.0], [42.0, 2140.0], [45.0, 2532.0], [44.0, 2533.0], [47.0, 2108.0], [46.0, 2448.0], [49.0, 1913.0], [48.0, 2740.0], [50.0, 2469.9411764705887], [1.0, 1916.0]], "isOverall": false, "label": "Compare Item", "isController": false}, {"data": [[37.750000000000014, 2328.119999999999]], "isOverall": false, "label": "Compare Item-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 50.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 199.38333333333333, "minX": 1.57312284E12, "maxY": 872551.3833333333, "series": [{"data": [[1.5731229E12, 872551.3833333333], [1.57312284E12, 121456.95]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.5731229E12, 1323.95], [1.57312284E12, 199.38333333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5731229E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 2211.756756756757, "minX": 1.57312284E12, "maxY": 3914.0700000000006, "series": [{"data": [[1.5731229E12, 2306.698412698413], [1.57312284E12, 2211.756756756757]], "isOverall": false, "label": "Category Drill down", "isController": false}, {"data": [[1.5731229E12, 3914.0700000000006]], "isOverall": false, "label": "Item Details", "isController": false}, {"data": [[1.5731229E12, 3064.1410256410254], [1.57312284E12, 3318.727272727273]], "isOverall": false, "label": "View Items", "isController": false}, {"data": [[1.5731229E12, 2328.119999999999]], "isOverall": false, "label": "Compare Item", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5731229E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1194.9189189189192, "minX": 1.57312284E12, "maxY": 2016.318181818182, "series": [{"data": [[1.5731229E12, 1281.111111111111], [1.57312284E12, 1194.9189189189192]], "isOverall": false, "label": "Category Drill down", "isController": false}, {"data": [[1.5731229E12, 1884.1900000000003]], "isOverall": false, "label": "Item Details", "isController": false}, {"data": [[1.5731229E12, 1723.6666666666672], [1.57312284E12, 2016.318181818182]], "isOverall": false, "label": "View Items", "isController": false}, {"data": [[1.5731229E12, 1273.2399999999998]], "isOverall": false, "label": "Compare Item", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5731229E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 99.86363636363637, "minX": 1.57312284E12, "maxY": 202.08108108108104, "series": [{"data": [[1.5731229E12, 200.98412698412696], [1.57312284E12, 202.08108108108104]], "isOverall": false, "label": "Category Drill down", "isController": false}, {"data": [[1.5731229E12, 201.57]], "isOverall": false, "label": "Item Details", "isController": false}, {"data": [[1.5731229E12, 124.70512820512823], [1.57312284E12, 99.86363636363637]], "isOverall": false, "label": "View Items", "isController": false}, {"data": [[1.5731229E12, 201.79000000000008]], "isOverall": false, "label": "Compare Item", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5731229E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1667.0, "minX": 1.57312284E12, "maxY": 5289.0, "series": [{"data": [[1.5731229E12, 5289.0], [1.57312284E12, 4362.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.5731229E12, 1696.0], [1.57312284E12, 1667.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.5731229E12, 4179.200000000001], [1.57312284E12, 3863.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.5731229E12, 5106.259999999998], [1.57312284E12, 4362.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.5731229E12, 4541.6], [1.57312284E12, 4208.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5731229E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1736.5, "minX": 1.0, "maxY": 3420.0, "series": [{"data": [[8.0, 1919.5], [9.0, 2984.0], [11.0, 3248.5], [3.0, 2122.5], [12.0, 2462.5], [13.0, 3213.0], [14.0, 2444.5], [15.0, 3020.0], [4.0, 1736.5], [16.0, 3017.5], [1.0, 1916.0], [18.0, 3420.0], [19.0, 2881.0], [5.0, 1936.0], [22.0, 2670.0], [24.0, 2604.5], [7.0, 1946.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 24.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 702.0, "minX": 1.0, "maxY": 2086.5, "series": [{"data": [[8.0, 858.0], [9.0, 1036.5], [11.0, 1701.0], [3.0, 1109.5], [12.0, 1140.5], [13.0, 1996.0], [14.0, 1311.5], [15.0, 1670.0], [4.0, 702.0], [16.0, 1523.5], [1.0, 846.0], [18.0, 2086.5], [19.0, 1526.0], [5.0, 879.0], [22.0, 1413.0], [24.0, 1328.5], [7.0, 878.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 24.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1.7833333333333334, "minX": 1.57312284E12, "maxY": 4.883333333333334, "series": [{"data": [[1.5731229E12, 4.883333333333334], [1.57312284E12, 1.7833333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5731229E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.9833333333333333, "minX": 1.57312284E12, "maxY": 5.683333333333334, "series": [{"data": [[1.5731229E12, 5.683333333333334], [1.57312284E12, 0.9833333333333333]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5731229E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.36666666666666664, "minX": 1.57312284E12, "maxY": 1.6666666666666667, "series": [{"data": [[1.5731229E12, 1.6666666666666667]], "isOverall": false, "label": "Compare Item-success", "isController": false}, {"data": [[1.5731229E12, 1.05], [1.57312284E12, 0.6166666666666667]], "isOverall": false, "label": "Category Drill down-success", "isController": false}, {"data": [[1.5731229E12, 1.6666666666666667]], "isOverall": false, "label": "Item Details-success", "isController": false}, {"data": [[1.5731229E12, 1.3], [1.57312284E12, 0.36666666666666664]], "isOverall": false, "label": "View Items-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5731229E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.9833333333333333, "minX": 1.57312284E12, "maxY": 5.683333333333334, "series": [{"data": [[1.5731229E12, 5.683333333333334], [1.57312284E12, 0.9833333333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5731229E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

