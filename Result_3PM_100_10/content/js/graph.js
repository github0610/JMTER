/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1912.0, "minX": 0.0, "maxY": 15645.0, "series": [{"data": [[0.0, 1912.0], [0.1, 1912.0], [0.2, 1912.0], [0.3, 1912.0], [0.4, 1912.0], [0.5, 1912.0], [0.6, 1912.0], [0.7, 1912.0], [0.8, 1912.0], [0.9, 1912.0], [1.0, 1934.0], [1.1, 1934.0], [1.2, 1934.0], [1.3, 1934.0], [1.4, 1934.0], [1.5, 1934.0], [1.6, 1934.0], [1.7, 1934.0], [1.8, 1934.0], [1.9, 1934.0], [2.0, 1947.0], [2.1, 1947.0], [2.2, 1947.0], [2.3, 1947.0], [2.4, 1947.0], [2.5, 1947.0], [2.6, 1947.0], [2.7, 1947.0], [2.8, 1947.0], [2.9, 1947.0], [3.0, 1951.0], [3.1, 1951.0], [3.2, 1951.0], [3.3, 1951.0], [3.4, 1951.0], [3.5, 1951.0], [3.6, 1951.0], [3.7, 1951.0], [3.8, 1951.0], [3.9, 1951.0], [4.0, 2014.0], [4.1, 2014.0], [4.2, 2014.0], [4.3, 2014.0], [4.4, 2014.0], [4.5, 2014.0], [4.6, 2014.0], [4.7, 2014.0], [4.8, 2014.0], [4.9, 2014.0], [5.0, 2034.0], [5.1, 2034.0], [5.2, 2034.0], [5.3, 2034.0], [5.4, 2034.0], [5.5, 2034.0], [5.6, 2034.0], [5.7, 2034.0], [5.8, 2034.0], [5.9, 2034.0], [6.0, 2112.0], [6.1, 2112.0], [6.2, 2112.0], [6.3, 2112.0], [6.4, 2112.0], [6.5, 2112.0], [6.6, 2112.0], [6.7, 2112.0], [6.8, 2112.0], [6.9, 2112.0], [7.0, 2130.0], [7.1, 2130.0], [7.2, 2130.0], [7.3, 2130.0], [7.4, 2130.0], [7.5, 2130.0], [7.6, 2130.0], [7.7, 2130.0], [7.8, 2130.0], [7.9, 2130.0], [8.0, 2178.0], [8.1, 2178.0], [8.2, 2178.0], [8.3, 2178.0], [8.4, 2178.0], [8.5, 2178.0], [8.6, 2178.0], [8.7, 2178.0], [8.8, 2178.0], [8.9, 2178.0], [9.0, 2216.0], [9.1, 2216.0], [9.2, 2216.0], [9.3, 2216.0], [9.4, 2216.0], [9.5, 2216.0], [9.6, 2216.0], [9.7, 2216.0], [9.8, 2216.0], [9.9, 2216.0], [10.0, 2263.0], [10.1, 2263.0], [10.2, 2263.0], [10.3, 2263.0], [10.4, 2263.0], [10.5, 2263.0], [10.6, 2263.0], [10.7, 2263.0], [10.8, 2263.0], [10.9, 2263.0], [11.0, 2363.0], [11.1, 2363.0], [11.2, 2363.0], [11.3, 2363.0], [11.4, 2363.0], [11.5, 2363.0], [11.6, 2363.0], [11.7, 2363.0], [11.8, 2363.0], [11.9, 2363.0], [12.0, 2398.0], [12.1, 2398.0], [12.2, 2398.0], [12.3, 2398.0], [12.4, 2398.0], [12.5, 2398.0], [12.6, 2398.0], [12.7, 2398.0], [12.8, 2398.0], [12.9, 2398.0], [13.0, 2399.0], [13.1, 2399.0], [13.2, 2399.0], [13.3, 2399.0], [13.4, 2399.0], [13.5, 2399.0], [13.6, 2399.0], [13.7, 2399.0], [13.8, 2399.0], [13.9, 2399.0], [14.0, 2400.0], [14.1, 2400.0], [14.2, 2400.0], [14.3, 2400.0], [14.4, 2400.0], [14.5, 2400.0], [14.6, 2400.0], [14.7, 2400.0], [14.8, 2400.0], [14.9, 2400.0], [15.0, 2479.0], [15.1, 2479.0], [15.2, 2479.0], [15.3, 2479.0], [15.4, 2479.0], [15.5, 2479.0], [15.6, 2479.0], [15.7, 2479.0], [15.8, 2479.0], [15.9, 2479.0], [16.0, 2490.0], [16.1, 2490.0], [16.2, 2490.0], [16.3, 2490.0], [16.4, 2490.0], [16.5, 2490.0], [16.6, 2490.0], [16.7, 2490.0], [16.8, 2490.0], [16.9, 2490.0], [17.0, 2522.0], [17.1, 2522.0], [17.2, 2522.0], [17.3, 2522.0], [17.4, 2522.0], [17.5, 2522.0], [17.6, 2522.0], [17.7, 2522.0], [17.8, 2522.0], [17.9, 2522.0], [18.0, 2559.0], [18.1, 2559.0], [18.2, 2559.0], [18.3, 2559.0], [18.4, 2559.0], [18.5, 2559.0], [18.6, 2559.0], [18.7, 2559.0], [18.8, 2559.0], [18.9, 2559.0], [19.0, 2570.0], [19.1, 2570.0], [19.2, 2570.0], [19.3, 2570.0], [19.4, 2570.0], [19.5, 2570.0], [19.6, 2570.0], [19.7, 2570.0], [19.8, 2570.0], [19.9, 2570.0], [20.0, 2627.0], [20.1, 2627.0], [20.2, 2627.0], [20.3, 2627.0], [20.4, 2627.0], [20.5, 2627.0], [20.6, 2627.0], [20.7, 2627.0], [20.8, 2627.0], [20.9, 2627.0], [21.0, 2641.0], [21.1, 2641.0], [21.2, 2641.0], [21.3, 2641.0], [21.4, 2641.0], [21.5, 2641.0], [21.6, 2641.0], [21.7, 2641.0], [21.8, 2641.0], [21.9, 2641.0], [22.0, 2665.0], [22.1, 2665.0], [22.2, 2665.0], [22.3, 2665.0], [22.4, 2665.0], [22.5, 2665.0], [22.6, 2665.0], [22.7, 2665.0], [22.8, 2665.0], [22.9, 2665.0], [23.0, 2718.0], [23.1, 2718.0], [23.2, 2718.0], [23.3, 2718.0], [23.4, 2718.0], [23.5, 2718.0], [23.6, 2718.0], [23.7, 2718.0], [23.8, 2718.0], [23.9, 2718.0], [24.0, 2756.0], [24.1, 2756.0], [24.2, 2756.0], [24.3, 2756.0], [24.4, 2756.0], [24.5, 2756.0], [24.6, 2756.0], [24.7, 2756.0], [24.8, 2756.0], [24.9, 2756.0], [25.0, 2837.0], [25.1, 2837.0], [25.2, 2837.0], [25.3, 2837.0], [25.4, 2837.0], [25.5, 2837.0], [25.6, 2837.0], [25.7, 2837.0], [25.8, 2837.0], [25.9, 2837.0], [26.0, 2839.0], [26.1, 2839.0], [26.2, 2839.0], [26.3, 2839.0], [26.4, 2839.0], [26.5, 2839.0], [26.6, 2839.0], [26.7, 2839.0], [26.8, 2839.0], [26.9, 2839.0], [27.0, 2847.0], [27.1, 2847.0], [27.2, 2847.0], [27.3, 2847.0], [27.4, 2847.0], [27.5, 2847.0], [27.6, 2847.0], [27.7, 2847.0], [27.8, 2847.0], [27.9, 2847.0], [28.0, 2848.0], [28.1, 2848.0], [28.2, 2848.0], [28.3, 2848.0], [28.4, 2848.0], [28.5, 2848.0], [28.6, 2848.0], [28.7, 2848.0], [28.8, 2848.0], [28.9, 2848.0], [29.0, 2925.0], [29.1, 2925.0], [29.2, 2925.0], [29.3, 2925.0], [29.4, 2925.0], [29.5, 2925.0], [29.6, 2925.0], [29.7, 2925.0], [29.8, 2925.0], [29.9, 2925.0], [30.0, 2948.0], [30.1, 2948.0], [30.2, 2948.0], [30.3, 2948.0], [30.4, 2948.0], [30.5, 2948.0], [30.6, 2948.0], [30.7, 2948.0], [30.8, 2948.0], [30.9, 2948.0], [31.0, 2952.0], [31.1, 2952.0], [31.2, 2952.0], [31.3, 2952.0], [31.4, 2952.0], [31.5, 2952.0], [31.6, 2952.0], [31.7, 2952.0], [31.8, 2952.0], [31.9, 2952.0], [32.0, 3065.0], [32.1, 3065.0], [32.2, 3065.0], [32.3, 3065.0], [32.4, 3065.0], [32.5, 3065.0], [32.6, 3065.0], [32.7, 3065.0], [32.8, 3065.0], [32.9, 3065.0], [33.0, 3089.0], [33.1, 3089.0], [33.2, 3089.0], [33.3, 3089.0], [33.4, 3089.0], [33.5, 3089.0], [33.6, 3089.0], [33.7, 3089.0], [33.8, 3089.0], [33.9, 3089.0], [34.0, 3098.0], [34.1, 3098.0], [34.2, 3098.0], [34.3, 3098.0], [34.4, 3098.0], [34.5, 3098.0], [34.6, 3098.0], [34.7, 3098.0], [34.8, 3098.0], [34.9, 3098.0], [35.0, 3102.0], [35.1, 3102.0], [35.2, 3102.0], [35.3, 3102.0], [35.4, 3102.0], [35.5, 3102.0], [35.6, 3102.0], [35.7, 3102.0], [35.8, 3102.0], [35.9, 3102.0], [36.0, 3143.0], [36.1, 3143.0], [36.2, 3143.0], [36.3, 3143.0], [36.4, 3143.0], [36.5, 3143.0], [36.6, 3143.0], [36.7, 3143.0], [36.8, 3143.0], [36.9, 3143.0], [37.0, 3157.0], [37.1, 3157.0], [37.2, 3157.0], [37.3, 3157.0], [37.4, 3157.0], [37.5, 3157.0], [37.6, 3157.0], [37.7, 3157.0], [37.8, 3157.0], [37.9, 3157.0], [38.0, 3168.0], [38.1, 3168.0], [38.2, 3168.0], [38.3, 3168.0], [38.4, 3168.0], [38.5, 3168.0], [38.6, 3168.0], [38.7, 3168.0], [38.8, 3168.0], [38.9, 3168.0], [39.0, 3327.0], [39.1, 3327.0], [39.2, 3327.0], [39.3, 3327.0], [39.4, 3327.0], [39.5, 3327.0], [39.6, 3327.0], [39.7, 3327.0], [39.8, 3327.0], [39.9, 3327.0], [40.0, 3337.0], [40.1, 3337.0], [40.2, 3337.0], [40.3, 3337.0], [40.4, 3337.0], [40.5, 3337.0], [40.6, 3337.0], [40.7, 3337.0], [40.8, 3337.0], [40.9, 3337.0], [41.0, 3348.0], [41.1, 3348.0], [41.2, 3348.0], [41.3, 3348.0], [41.4, 3348.0], [41.5, 3348.0], [41.6, 3348.0], [41.7, 3348.0], [41.8, 3348.0], [41.9, 3348.0], [42.0, 3351.0], [42.1, 3351.0], [42.2, 3351.0], [42.3, 3351.0], [42.4, 3351.0], [42.5, 3351.0], [42.6, 3351.0], [42.7, 3351.0], [42.8, 3351.0], [42.9, 3351.0], [43.0, 3401.0], [43.1, 3401.0], [43.2, 3401.0], [43.3, 3401.0], [43.4, 3401.0], [43.5, 3401.0], [43.6, 3401.0], [43.7, 3401.0], [43.8, 3401.0], [43.9, 3401.0], [44.0, 3468.0], [44.1, 3468.0], [44.2, 3468.0], [44.3, 3468.0], [44.4, 3468.0], [44.5, 3468.0], [44.6, 3468.0], [44.7, 3468.0], [44.8, 3468.0], [44.9, 3468.0], [45.0, 3526.0], [45.1, 3526.0], [45.2, 3526.0], [45.3, 3526.0], [45.4, 3526.0], [45.5, 3526.0], [45.6, 3526.0], [45.7, 3526.0], [45.8, 3526.0], [45.9, 3526.0], [46.0, 3558.0], [46.1, 3558.0], [46.2, 3558.0], [46.3, 3558.0], [46.4, 3558.0], [46.5, 3558.0], [46.6, 3558.0], [46.7, 3558.0], [46.8, 3558.0], [46.9, 3558.0], [47.0, 3599.0], [47.1, 3599.0], [47.2, 3599.0], [47.3, 3599.0], [47.4, 3599.0], [47.5, 3599.0], [47.6, 3599.0], [47.7, 3599.0], [47.8, 3599.0], [47.9, 3599.0], [48.0, 3632.0], [48.1, 3632.0], [48.2, 3632.0], [48.3, 3632.0], [48.4, 3632.0], [48.5, 3632.0], [48.6, 3632.0], [48.7, 3632.0], [48.8, 3632.0], [48.9, 3632.0], [49.0, 3650.0], [49.1, 3650.0], [49.2, 3650.0], [49.3, 3650.0], [49.4, 3650.0], [49.5, 3650.0], [49.6, 3650.0], [49.7, 3650.0], [49.8, 3650.0], [49.9, 3650.0], [50.0, 3663.0], [50.1, 3663.0], [50.2, 3663.0], [50.3, 3663.0], [50.4, 3663.0], [50.5, 3663.0], [50.6, 3663.0], [50.7, 3663.0], [50.8, 3663.0], [50.9, 3663.0], [51.0, 3673.0], [51.1, 3673.0], [51.2, 3673.0], [51.3, 3673.0], [51.4, 3673.0], [51.5, 3673.0], [51.6, 3673.0], [51.7, 3673.0], [51.8, 3673.0], [51.9, 3673.0], [52.0, 3704.0], [52.1, 3704.0], [52.2, 3704.0], [52.3, 3704.0], [52.4, 3704.0], [52.5, 3704.0], [52.6, 3704.0], [52.7, 3704.0], [52.8, 3704.0], [52.9, 3704.0], [53.0, 3707.0], [53.1, 3707.0], [53.2, 3707.0], [53.3, 3707.0], [53.4, 3707.0], [53.5, 3707.0], [53.6, 3707.0], [53.7, 3707.0], [53.8, 3707.0], [53.9, 3707.0], [54.0, 3746.0], [54.1, 3746.0], [54.2, 3746.0], [54.3, 3746.0], [54.4, 3746.0], [54.5, 3746.0], [54.6, 3746.0], [54.7, 3746.0], [54.8, 3746.0], [54.9, 3746.0], [55.0, 3753.0], [55.1, 3753.0], [55.2, 3753.0], [55.3, 3753.0], [55.4, 3753.0], [55.5, 3753.0], [55.6, 3753.0], [55.7, 3753.0], [55.8, 3753.0], [55.9, 3753.0], [56.0, 3772.0], [56.1, 3772.0], [56.2, 3772.0], [56.3, 3772.0], [56.4, 3772.0], [56.5, 3772.0], [56.6, 3772.0], [56.7, 3772.0], [56.8, 3772.0], [56.9, 3772.0], [57.0, 3773.0], [57.1, 3773.0], [57.2, 3773.0], [57.3, 3773.0], [57.4, 3773.0], [57.5, 3773.0], [57.6, 3773.0], [57.7, 3773.0], [57.8, 3773.0], [57.9, 3773.0], [58.0, 3890.0], [58.1, 3890.0], [58.2, 3890.0], [58.3, 3890.0], [58.4, 3890.0], [58.5, 3890.0], [58.6, 3890.0], [58.7, 3890.0], [58.8, 3890.0], [58.9, 3890.0], [59.0, 3976.0], [59.1, 3976.0], [59.2, 3976.0], [59.3, 3976.0], [59.4, 3976.0], [59.5, 3976.0], [59.6, 3976.0], [59.7, 3976.0], [59.8, 3976.0], [59.9, 3976.0], [60.0, 4038.0], [60.1, 4038.0], [60.2, 4038.0], [60.3, 4038.0], [60.4, 4038.0], [60.5, 4038.0], [60.6, 4038.0], [60.7, 4038.0], [60.8, 4038.0], [60.9, 4038.0], [61.0, 4056.0], [61.1, 4056.0], [61.2, 4056.0], [61.3, 4056.0], [61.4, 4056.0], [61.5, 4056.0], [61.6, 4056.0], [61.7, 4056.0], [61.8, 4056.0], [61.9, 4056.0], [62.0, 4073.0], [62.1, 4073.0], [62.2, 4073.0], [62.3, 4073.0], [62.4, 4073.0], [62.5, 4073.0], [62.6, 4073.0], [62.7, 4073.0], [62.8, 4073.0], [62.9, 4073.0], [63.0, 4079.0], [63.1, 4079.0], [63.2, 4079.0], [63.3, 4079.0], [63.4, 4079.0], [63.5, 4079.0], [63.6, 4079.0], [63.7, 4079.0], [63.8, 4079.0], [63.9, 4079.0], [64.0, 4084.0], [64.1, 4084.0], [64.2, 4084.0], [64.3, 4084.0], [64.4, 4084.0], [64.5, 4084.0], [64.6, 4084.0], [64.7, 4084.0], [64.8, 4084.0], [64.9, 4084.0], [65.0, 4133.0], [65.1, 4133.0], [65.2, 4133.0], [65.3, 4133.0], [65.4, 4133.0], [65.5, 4133.0], [65.6, 4133.0], [65.7, 4133.0], [65.8, 4133.0], [65.9, 4133.0], [66.0, 4189.0], [66.1, 4189.0], [66.2, 4189.0], [66.3, 4189.0], [66.4, 4189.0], [66.5, 4189.0], [66.6, 4189.0], [66.7, 4189.0], [66.8, 4189.0], [66.9, 4189.0], [67.0, 4230.0], [67.1, 4230.0], [67.2, 4230.0], [67.3, 4230.0], [67.4, 4230.0], [67.5, 4230.0], [67.6, 4230.0], [67.7, 4230.0], [67.8, 4230.0], [67.9, 4230.0], [68.0, 4249.0], [68.1, 4249.0], [68.2, 4249.0], [68.3, 4249.0], [68.4, 4249.0], [68.5, 4249.0], [68.6, 4249.0], [68.7, 4249.0], [68.8, 4249.0], [68.9, 4249.0], [69.0, 4385.0], [69.1, 4385.0], [69.2, 4385.0], [69.3, 4385.0], [69.4, 4385.0], [69.5, 4385.0], [69.6, 4385.0], [69.7, 4385.0], [69.8, 4385.0], [69.9, 4385.0], [70.0, 4402.0], [70.1, 4402.0], [70.2, 4402.0], [70.3, 4402.0], [70.4, 4402.0], [70.5, 4402.0], [70.6, 4402.0], [70.7, 4402.0], [70.8, 4402.0], [70.9, 4402.0], [71.0, 4442.0], [71.1, 4442.0], [71.2, 4442.0], [71.3, 4442.0], [71.4, 4442.0], [71.5, 4442.0], [71.6, 4442.0], [71.7, 4442.0], [71.8, 4442.0], [71.9, 4442.0], [72.0, 4490.0], [72.1, 4490.0], [72.2, 4490.0], [72.3, 4490.0], [72.4, 4490.0], [72.5, 4490.0], [72.6, 4490.0], [72.7, 4490.0], [72.8, 4490.0], [72.9, 4490.0], [73.0, 4575.0], [73.1, 4575.0], [73.2, 4575.0], [73.3, 4575.0], [73.4, 4575.0], [73.5, 4575.0], [73.6, 4575.0], [73.7, 4575.0], [73.8, 4575.0], [73.9, 4575.0], [74.0, 4630.0], [74.1, 4630.0], [74.2, 4630.0], [74.3, 4630.0], [74.4, 4630.0], [74.5, 4630.0], [74.6, 4630.0], [74.7, 4630.0], [74.8, 4630.0], [74.9, 4630.0], [75.0, 4777.0], [75.1, 4777.0], [75.2, 4777.0], [75.3, 4777.0], [75.4, 4777.0], [75.5, 4777.0], [75.6, 4777.0], [75.7, 4777.0], [75.8, 4777.0], [75.9, 4777.0], [76.0, 4785.0], [76.1, 4785.0], [76.2, 4785.0], [76.3, 4785.0], [76.4, 4785.0], [76.5, 4785.0], [76.6, 4785.0], [76.7, 4785.0], [76.8, 4785.0], [76.9, 4785.0], [77.0, 4832.0], [77.1, 4832.0], [77.2, 4832.0], [77.3, 4832.0], [77.4, 4832.0], [77.5, 4832.0], [77.6, 4832.0], [77.7, 4832.0], [77.8, 4832.0], [77.9, 4832.0], [78.0, 4862.0], [78.1, 4862.0], [78.2, 4862.0], [78.3, 4862.0], [78.4, 4862.0], [78.5, 4862.0], [78.6, 4862.0], [78.7, 4862.0], [78.8, 4862.0], [78.9, 4862.0], [79.0, 4917.0], [79.1, 4917.0], [79.2, 4917.0], [79.3, 4917.0], [79.4, 4917.0], [79.5, 4917.0], [79.6, 4917.0], [79.7, 4917.0], [79.8, 4917.0], [79.9, 4917.0], [80.0, 4962.0], [80.1, 4962.0], [80.2, 4962.0], [80.3, 4962.0], [80.4, 4962.0], [80.5, 4962.0], [80.6, 4962.0], [80.7, 4962.0], [80.8, 4962.0], [80.9, 4962.0], [81.0, 5018.0], [81.1, 5018.0], [81.2, 5018.0], [81.3, 5018.0], [81.4, 5018.0], [81.5, 5018.0], [81.6, 5018.0], [81.7, 5018.0], [81.8, 5018.0], [81.9, 5018.0], [82.0, 5027.0], [82.1, 5027.0], [82.2, 5027.0], [82.3, 5027.0], [82.4, 5027.0], [82.5, 5027.0], [82.6, 5027.0], [82.7, 5027.0], [82.8, 5027.0], [82.9, 5027.0], [83.0, 5032.0], [83.1, 5032.0], [83.2, 5032.0], [83.3, 5032.0], [83.4, 5032.0], [83.5, 5032.0], [83.6, 5032.0], [83.7, 5032.0], [83.8, 5032.0], [83.9, 5032.0], [84.0, 5176.0], [84.1, 5176.0], [84.2, 5176.0], [84.3, 5176.0], [84.4, 5176.0], [84.5, 5176.0], [84.6, 5176.0], [84.7, 5176.0], [84.8, 5176.0], [84.9, 5176.0], [85.0, 5581.0], [85.1, 5581.0], [85.2, 5581.0], [85.3, 5581.0], [85.4, 5581.0], [85.5, 5581.0], [85.6, 5581.0], [85.7, 5581.0], [85.8, 5581.0], [85.9, 5581.0], [86.0, 5713.0], [86.1, 5713.0], [86.2, 5713.0], [86.3, 5713.0], [86.4, 5713.0], [86.5, 5713.0], [86.6, 5713.0], [86.7, 5713.0], [86.8, 5713.0], [86.9, 5713.0], [87.0, 5714.0], [87.1, 5714.0], [87.2, 5714.0], [87.3, 5714.0], [87.4, 5714.0], [87.5, 5714.0], [87.6, 5714.0], [87.7, 5714.0], [87.8, 5714.0], [87.9, 5714.0], [88.0, 5752.0], [88.1, 5752.0], [88.2, 5752.0], [88.3, 5752.0], [88.4, 5752.0], [88.5, 5752.0], [88.6, 5752.0], [88.7, 5752.0], [88.8, 5752.0], [88.9, 5752.0], [89.0, 5805.0], [89.1, 5805.0], [89.2, 5805.0], [89.3, 5805.0], [89.4, 5805.0], [89.5, 5805.0], [89.6, 5805.0], [89.7, 5805.0], [89.8, 5805.0], [89.9, 5805.0], [90.0, 6261.0], [90.1, 6261.0], [90.2, 6261.0], [90.3, 6261.0], [90.4, 6261.0], [90.5, 6261.0], [90.6, 6261.0], [90.7, 6261.0], [90.8, 6261.0], [90.9, 6261.0], [91.0, 6354.0], [91.1, 6354.0], [91.2, 6354.0], [91.3, 6354.0], [91.4, 6354.0], [91.5, 6354.0], [91.6, 6354.0], [91.7, 6354.0], [91.8, 6354.0], [91.9, 6354.0], [92.0, 6422.0], [92.1, 6422.0], [92.2, 6422.0], [92.3, 6422.0], [92.4, 6422.0], [92.5, 6422.0], [92.6, 6422.0], [92.7, 6422.0], [92.8, 6422.0], [92.9, 6422.0], [93.0, 6614.0], [93.1, 6614.0], [93.2, 6614.0], [93.3, 6614.0], [93.4, 6614.0], [93.5, 6614.0], [93.6, 6614.0], [93.7, 6614.0], [93.8, 6614.0], [93.9, 6614.0], [94.0, 6811.0], [94.1, 6811.0], [94.2, 6811.0], [94.3, 6811.0], [94.4, 6811.0], [94.5, 6811.0], [94.6, 6811.0], [94.7, 6811.0], [94.8, 6811.0], [94.9, 6811.0], [95.0, 7450.0], [95.1, 7450.0], [95.2, 7450.0], [95.3, 7450.0], [95.4, 7450.0], [95.5, 7450.0], [95.6, 7450.0], [95.7, 7450.0], [95.8, 7450.0], [95.9, 7450.0], [96.0, 7553.0], [96.1, 7553.0], [96.2, 7553.0], [96.3, 7553.0], [96.4, 7553.0], [96.5, 7553.0], [96.6, 7553.0], [96.7, 7553.0], [96.8, 7553.0], [96.9, 7553.0], [97.0, 7769.0], [97.1, 7769.0], [97.2, 7769.0], [97.3, 7769.0], [97.4, 7769.0], [97.5, 7769.0], [97.6, 7769.0], [97.7, 7769.0], [97.8, 7769.0], [97.9, 7769.0], [98.0, 8520.0], [98.1, 8520.0], [98.2, 8520.0], [98.3, 8520.0], [98.4, 8520.0], [98.5, 8520.0], [98.6, 8520.0], [98.7, 8520.0], [98.8, 8520.0], [98.9, 8520.0], [99.0, 9428.0], [99.1, 9428.0], [99.2, 9428.0], [99.3, 9428.0], [99.4, 9428.0], [99.5, 9428.0], [99.6, 9428.0], [99.7, 9428.0], [99.8, 9428.0], [99.9, 9428.0]], "isOverall": false, "label": "Category Drill down", "isController": false}, {"data": [[0.0, 4108.0], [0.1, 4108.0], [0.2, 4108.0], [0.3, 4108.0], [0.4, 4108.0], [0.5, 4108.0], [0.6, 4108.0], [0.7, 4108.0], [0.8, 4108.0], [0.9, 4108.0], [1.0, 4111.0], [1.1, 4111.0], [1.2, 4111.0], [1.3, 4111.0], [1.4, 4111.0], [1.5, 4111.0], [1.6, 4111.0], [1.7, 4111.0], [1.8, 4111.0], [1.9, 4111.0], [2.0, 4253.0], [2.1, 4253.0], [2.2, 4253.0], [2.3, 4253.0], [2.4, 4253.0], [2.5, 4253.0], [2.6, 4253.0], [2.7, 4253.0], [2.8, 4253.0], [2.9, 4253.0], [3.0, 4317.0], [3.1, 4317.0], [3.2, 4317.0], [3.3, 4317.0], [3.4, 4317.0], [3.5, 4317.0], [3.6, 4317.0], [3.7, 4317.0], [3.8, 4317.0], [3.9, 4317.0], [4.0, 4325.0], [4.1, 4325.0], [4.2, 4325.0], [4.3, 4325.0], [4.4, 4325.0], [4.5, 4325.0], [4.6, 4325.0], [4.7, 4325.0], [4.8, 4325.0], [4.9, 4325.0], [5.0, 4390.0], [5.1, 4390.0], [5.2, 4390.0], [5.3, 4390.0], [5.4, 4390.0], [5.5, 4390.0], [5.6, 4390.0], [5.7, 4390.0], [5.8, 4390.0], [5.9, 4390.0], [6.0, 4436.0], [6.1, 4436.0], [6.2, 4436.0], [6.3, 4436.0], [6.4, 4436.0], [6.5, 4436.0], [6.6, 4436.0], [6.7, 4436.0], [6.8, 4436.0], [6.9, 4436.0], [7.0, 4583.0], [7.1, 4583.0], [7.2, 4583.0], [7.3, 4583.0], [7.4, 4583.0], [7.5, 4583.0], [7.6, 4583.0], [7.7, 4583.0], [7.8, 4583.0], [7.9, 4583.0], [8.0, 4602.0], [8.1, 4602.0], [8.2, 4602.0], [8.3, 4602.0], [8.4, 4602.0], [8.5, 4602.0], [8.6, 4602.0], [8.7, 4602.0], [8.8, 4602.0], [8.9, 4602.0], [9.0, 4676.0], [9.1, 4676.0], [9.2, 4676.0], [9.3, 4676.0], [9.4, 4676.0], [9.5, 4676.0], [9.6, 4676.0], [9.7, 4676.0], [9.8, 4676.0], [9.9, 4676.0], [10.0, 4891.0], [10.1, 4891.0], [10.2, 4891.0], [10.3, 4891.0], [10.4, 4891.0], [10.5, 4891.0], [10.6, 4891.0], [10.7, 4891.0], [10.8, 4891.0], [10.9, 4891.0], [11.0, 4899.0], [11.1, 4899.0], [11.2, 4899.0], [11.3, 4899.0], [11.4, 4899.0], [11.5, 4899.0], [11.6, 4899.0], [11.7, 4899.0], [11.8, 4899.0], [11.9, 4899.0], [12.0, 4917.0], [12.1, 4917.0], [12.2, 4917.0], [12.3, 4917.0], [12.4, 4917.0], [12.5, 4917.0], [12.6, 4917.0], [12.7, 4917.0], [12.8, 4917.0], [12.9, 4917.0], [13.0, 4963.0], [13.1, 4963.0], [13.2, 4963.0], [13.3, 4963.0], [13.4, 4963.0], [13.5, 4963.0], [13.6, 4963.0], [13.7, 4963.0], [13.8, 4963.0], [13.9, 4963.0], [14.0, 4971.0], [14.1, 4971.0], [14.2, 4971.0], [14.3, 4971.0], [14.4, 4971.0], [14.5, 4971.0], [14.6, 4971.0], [14.7, 4971.0], [14.8, 4971.0], [14.9, 4971.0], [15.0, 5043.0], [15.1, 5043.0], [15.2, 5043.0], [15.3, 5043.0], [15.4, 5043.0], [15.5, 5043.0], [15.6, 5043.0], [15.7, 5043.0], [15.8, 5043.0], [15.9, 5043.0], [16.0, 5052.0], [16.1, 5052.0], [16.2, 5052.0], [16.3, 5052.0], [16.4, 5052.0], [16.5, 5052.0], [16.6, 5052.0], [16.7, 5052.0], [16.8, 5052.0], [16.9, 5052.0], [17.0, 5095.0], [17.1, 5095.0], [17.2, 5095.0], [17.3, 5095.0], [17.4, 5095.0], [17.5, 5095.0], [17.6, 5095.0], [17.7, 5095.0], [17.8, 5095.0], [17.9, 5095.0], [18.0, 5142.0], [18.1, 5142.0], [18.2, 5142.0], [18.3, 5142.0], [18.4, 5142.0], [18.5, 5142.0], [18.6, 5142.0], [18.7, 5142.0], [18.8, 5142.0], [18.9, 5142.0], [19.0, 5249.0], [19.1, 5249.0], [19.2, 5249.0], [19.3, 5249.0], [19.4, 5249.0], [19.5, 5249.0], [19.6, 5249.0], [19.7, 5249.0], [19.8, 5249.0], [19.9, 5249.0], [20.0, 5296.0], [20.1, 5296.0], [20.2, 5296.0], [20.3, 5296.0], [20.4, 5296.0], [20.5, 5296.0], [20.6, 5296.0], [20.7, 5296.0], [20.8, 5296.0], [20.9, 5296.0], [21.0, 5358.0], [21.1, 5358.0], [21.2, 5358.0], [21.3, 5358.0], [21.4, 5358.0], [21.5, 5358.0], [21.6, 5358.0], [21.7, 5358.0], [21.8, 5358.0], [21.9, 5358.0], [22.0, 5526.0], [22.1, 5526.0], [22.2, 5526.0], [22.3, 5526.0], [22.4, 5526.0], [22.5, 5526.0], [22.6, 5526.0], [22.7, 5526.0], [22.8, 5526.0], [22.9, 5526.0], [23.0, 5554.0], [23.1, 5554.0], [23.2, 5554.0], [23.3, 5554.0], [23.4, 5554.0], [23.5, 5554.0], [23.6, 5554.0], [23.7, 5554.0], [23.8, 5554.0], [23.9, 5554.0], [24.0, 5578.0], [24.1, 5578.0], [24.2, 5578.0], [24.3, 5578.0], [24.4, 5578.0], [24.5, 5578.0], [24.6, 5578.0], [24.7, 5578.0], [24.8, 5578.0], [24.9, 5578.0], [25.0, 5590.0], [25.1, 5590.0], [25.2, 5590.0], [25.3, 5590.0], [25.4, 5590.0], [25.5, 5590.0], [25.6, 5590.0], [25.7, 5590.0], [25.8, 5590.0], [25.9, 5590.0], [26.0, 5818.0], [26.1, 5818.0], [26.2, 5818.0], [26.3, 5818.0], [26.4, 5818.0], [26.5, 5818.0], [26.6, 5818.0], [26.7, 5818.0], [26.8, 5818.0], [26.9, 5818.0], [27.0, 6013.0], [27.1, 6013.0], [27.2, 6013.0], [27.3, 6013.0], [27.4, 6013.0], [27.5, 6013.0], [27.6, 6013.0], [27.7, 6013.0], [27.8, 6013.0], [27.9, 6013.0], [28.0, 6175.0], [28.1, 6175.0], [28.2, 6175.0], [28.3, 6175.0], [28.4, 6175.0], [28.5, 6175.0], [28.6, 6175.0], [28.7, 6175.0], [28.8, 6175.0], [28.9, 6175.0], [29.0, 6271.0], [29.1, 6271.0], [29.2, 6271.0], [29.3, 6271.0], [29.4, 6271.0], [29.5, 6271.0], [29.6, 6271.0], [29.7, 6271.0], [29.8, 6271.0], [29.9, 6271.0], [30.0, 6319.0], [30.1, 6319.0], [30.2, 6319.0], [30.3, 6319.0], [30.4, 6319.0], [30.5, 6319.0], [30.6, 6319.0], [30.7, 6319.0], [30.8, 6319.0], [30.9, 6319.0], [31.0, 6323.0], [31.1, 6323.0], [31.2, 6323.0], [31.3, 6323.0], [31.4, 6323.0], [31.5, 6323.0], [31.6, 6323.0], [31.7, 6323.0], [31.8, 6323.0], [31.9, 6323.0], [32.0, 6368.0], [32.1, 6368.0], [32.2, 6368.0], [32.3, 6368.0], [32.4, 6368.0], [32.5, 6368.0], [32.6, 6368.0], [32.7, 6368.0], [32.8, 6368.0], [32.9, 6368.0], [33.0, 6434.0], [33.1, 6434.0], [33.2, 6434.0], [33.3, 6434.0], [33.4, 6434.0], [33.5, 6434.0], [33.6, 6434.0], [33.7, 6434.0], [33.8, 6434.0], [33.9, 6434.0], [34.0, 6461.0], [34.1, 6461.0], [34.2, 6461.0], [34.3, 6461.0], [34.4, 6461.0], [34.5, 6461.0], [34.6, 6461.0], [34.7, 6461.0], [34.8, 6461.0], [34.9, 6461.0], [35.0, 6476.0], [35.1, 6476.0], [35.2, 6476.0], [35.3, 6476.0], [35.4, 6476.0], [35.5, 6476.0], [35.6, 6476.0], [35.7, 6476.0], [35.8, 6476.0], [35.9, 6476.0], [36.0, 6489.0], [36.1, 6489.0], [36.2, 6489.0], [36.3, 6489.0], [36.4, 6489.0], [36.5, 6489.0], [36.6, 6489.0], [36.7, 6489.0], [36.8, 6489.0], [36.9, 6489.0], [37.0, 6493.0], [37.1, 6493.0], [37.2, 6493.0], [37.3, 6493.0], [37.4, 6493.0], [37.5, 6493.0], [37.6, 6493.0], [37.7, 6493.0], [37.8, 6493.0], [37.9, 6493.0], [38.0, 6532.0], [38.1, 6532.0], [38.2, 6532.0], [38.3, 6532.0], [38.4, 6532.0], [38.5, 6532.0], [38.6, 6532.0], [38.7, 6532.0], [38.8, 6532.0], [38.9, 6532.0], [39.0, 6534.0], [39.1, 6534.0], [39.2, 6534.0], [39.3, 6534.0], [39.4, 6534.0], [39.5, 6534.0], [39.6, 6534.0], [39.7, 6534.0], [39.8, 6534.0], [39.9, 6534.0], [40.0, 6619.0], [40.1, 6619.0], [40.2, 6619.0], [40.3, 6619.0], [40.4, 6619.0], [40.5, 6619.0], [40.6, 6619.0], [40.7, 6619.0], [40.8, 6619.0], [40.9, 6619.0], [41.0, 6767.0], [41.1, 6767.0], [41.2, 6767.0], [41.3, 6767.0], [41.4, 6767.0], [41.5, 6767.0], [41.6, 6767.0], [41.7, 6767.0], [41.8, 6767.0], [41.9, 6767.0], [42.0, 6912.0], [42.1, 6912.0], [42.2, 6912.0], [42.3, 6912.0], [42.4, 6912.0], [42.5, 6912.0], [42.6, 6912.0], [42.7, 6912.0], [42.8, 6912.0], [42.9, 6912.0], [43.0, 7014.0], [43.1, 7014.0], [43.2, 7014.0], [43.3, 7014.0], [43.4, 7014.0], [43.5, 7014.0], [43.6, 7014.0], [43.7, 7014.0], [43.8, 7014.0], [43.9, 7014.0], [44.0, 7123.0], [44.1, 7123.0], [44.2, 7123.0], [44.3, 7123.0], [44.4, 7123.0], [44.5, 7123.0], [44.6, 7123.0], [44.7, 7123.0], [44.8, 7123.0], [44.9, 7123.0], [45.0, 7249.0], [45.1, 7249.0], [45.2, 7249.0], [45.3, 7249.0], [45.4, 7249.0], [45.5, 7249.0], [45.6, 7249.0], [45.7, 7249.0], [45.8, 7249.0], [45.9, 7249.0], [46.0, 7290.0], [46.1, 7290.0], [46.2, 7290.0], [46.3, 7290.0], [46.4, 7290.0], [46.5, 7290.0], [46.6, 7290.0], [46.7, 7290.0], [46.8, 7290.0], [46.9, 7290.0], [47.0, 7307.0], [47.1, 7307.0], [47.2, 7307.0], [47.3, 7307.0], [47.4, 7307.0], [47.5, 7307.0], [47.6, 7307.0], [47.7, 7307.0], [47.8, 7307.0], [47.9, 7307.0], [48.0, 7365.0], [48.1, 7365.0], [48.2, 7365.0], [48.3, 7365.0], [48.4, 7365.0], [48.5, 7365.0], [48.6, 7365.0], [48.7, 7365.0], [48.8, 7365.0], [48.9, 7365.0], [49.0, 7385.0], [49.1, 7385.0], [49.2, 7385.0], [49.3, 7385.0], [49.4, 7385.0], [49.5, 7385.0], [49.6, 7385.0], [49.7, 7385.0], [49.8, 7385.0], [49.9, 7385.0], [50.0, 7385.0], [50.1, 7385.0], [50.2, 7385.0], [50.3, 7385.0], [50.4, 7385.0], [50.5, 7385.0], [50.6, 7385.0], [50.7, 7385.0], [50.8, 7385.0], [50.9, 7385.0], [51.0, 7467.0], [51.1, 7467.0], [51.2, 7467.0], [51.3, 7467.0], [51.4, 7467.0], [51.5, 7467.0], [51.6, 7467.0], [51.7, 7467.0], [51.8, 7467.0], [51.9, 7467.0], [52.0, 7480.0], [52.1, 7480.0], [52.2, 7480.0], [52.3, 7480.0], [52.4, 7480.0], [52.5, 7480.0], [52.6, 7480.0], [52.7, 7480.0], [52.8, 7480.0], [52.9, 7480.0], [53.0, 7495.0], [53.1, 7495.0], [53.2, 7495.0], [53.3, 7495.0], [53.4, 7495.0], [53.5, 7495.0], [53.6, 7495.0], [53.7, 7495.0], [53.8, 7495.0], [53.9, 7495.0], [54.0, 7687.0], [54.1, 7687.0], [54.2, 7687.0], [54.3, 7687.0], [54.4, 7687.0], [54.5, 7687.0], [54.6, 7687.0], [54.7, 7687.0], [54.8, 7687.0], [54.9, 7687.0], [55.0, 7744.0], [55.1, 7744.0], [55.2, 7744.0], [55.3, 7744.0], [55.4, 7744.0], [55.5, 7744.0], [55.6, 7744.0], [55.7, 7744.0], [55.8, 7744.0], [55.9, 7744.0], [56.0, 7795.0], [56.1, 7795.0], [56.2, 7795.0], [56.3, 7795.0], [56.4, 7795.0], [56.5, 7795.0], [56.6, 7795.0], [56.7, 7795.0], [56.8, 7795.0], [56.9, 7795.0], [57.0, 7808.0], [57.1, 7808.0], [57.2, 7808.0], [57.3, 7808.0], [57.4, 7808.0], [57.5, 7808.0], [57.6, 7808.0], [57.7, 7808.0], [57.8, 7808.0], [57.9, 7808.0], [58.0, 7822.0], [58.1, 7822.0], [58.2, 7822.0], [58.3, 7822.0], [58.4, 7822.0], [58.5, 7822.0], [58.6, 7822.0], [58.7, 7822.0], [58.8, 7822.0], [58.9, 7822.0], [59.0, 7872.0], [59.1, 7872.0], [59.2, 7872.0], [59.3, 7872.0], [59.4, 7872.0], [59.5, 7872.0], [59.6, 7872.0], [59.7, 7872.0], [59.8, 7872.0], [59.9, 7872.0], [60.0, 7872.0], [60.1, 7872.0], [60.2, 7872.0], [60.3, 7872.0], [60.4, 7872.0], [60.5, 7872.0], [60.6, 7872.0], [60.7, 7872.0], [60.8, 7872.0], [60.9, 7872.0], [61.0, 7889.0], [61.1, 7889.0], [61.2, 7889.0], [61.3, 7889.0], [61.4, 7889.0], [61.5, 7889.0], [61.6, 7889.0], [61.7, 7889.0], [61.8, 7889.0], [61.9, 7889.0], [62.0, 8012.0], [62.1, 8012.0], [62.2, 8012.0], [62.3, 8012.0], [62.4, 8012.0], [62.5, 8012.0], [62.6, 8012.0], [62.7, 8012.0], [62.8, 8012.0], [62.9, 8012.0], [63.0, 8098.0], [63.1, 8098.0], [63.2, 8098.0], [63.3, 8098.0], [63.4, 8098.0], [63.5, 8098.0], [63.6, 8098.0], [63.7, 8098.0], [63.8, 8098.0], [63.9, 8098.0], [64.0, 8159.0], [64.1, 8159.0], [64.2, 8159.0], [64.3, 8159.0], [64.4, 8159.0], [64.5, 8159.0], [64.6, 8159.0], [64.7, 8159.0], [64.8, 8159.0], [64.9, 8159.0], [65.0, 8169.0], [65.1, 8169.0], [65.2, 8169.0], [65.3, 8169.0], [65.4, 8169.0], [65.5, 8169.0], [65.6, 8169.0], [65.7, 8169.0], [65.8, 8169.0], [65.9, 8169.0], [66.0, 8233.0], [66.1, 8233.0], [66.2, 8233.0], [66.3, 8233.0], [66.4, 8233.0], [66.5, 8233.0], [66.6, 8233.0], [66.7, 8233.0], [66.8, 8233.0], [66.9, 8233.0], [67.0, 8246.0], [67.1, 8246.0], [67.2, 8246.0], [67.3, 8246.0], [67.4, 8246.0], [67.5, 8246.0], [67.6, 8246.0], [67.7, 8246.0], [67.8, 8246.0], [67.9, 8246.0], [68.0, 8277.0], [68.1, 8277.0], [68.2, 8277.0], [68.3, 8277.0], [68.4, 8277.0], [68.5, 8277.0], [68.6, 8277.0], [68.7, 8277.0], [68.8, 8277.0], [68.9, 8277.0], [69.0, 8454.0], [69.1, 8454.0], [69.2, 8454.0], [69.3, 8454.0], [69.4, 8454.0], [69.5, 8454.0], [69.6, 8454.0], [69.7, 8454.0], [69.8, 8454.0], [69.9, 8454.0], [70.0, 8479.0], [70.1, 8479.0], [70.2, 8479.0], [70.3, 8479.0], [70.4, 8479.0], [70.5, 8479.0], [70.6, 8479.0], [70.7, 8479.0], [70.8, 8479.0], [70.9, 8479.0], [71.0, 8481.0], [71.1, 8481.0], [71.2, 8481.0], [71.3, 8481.0], [71.4, 8481.0], [71.5, 8481.0], [71.6, 8481.0], [71.7, 8481.0], [71.8, 8481.0], [71.9, 8481.0], [72.0, 8495.0], [72.1, 8495.0], [72.2, 8495.0], [72.3, 8495.0], [72.4, 8495.0], [72.5, 8495.0], [72.6, 8495.0], [72.7, 8495.0], [72.8, 8495.0], [72.9, 8495.0], [73.0, 8646.0], [73.1, 8646.0], [73.2, 8646.0], [73.3, 8646.0], [73.4, 8646.0], [73.5, 8646.0], [73.6, 8646.0], [73.7, 8646.0], [73.8, 8646.0], [73.9, 8646.0], [74.0, 8646.0], [74.1, 8646.0], [74.2, 8646.0], [74.3, 8646.0], [74.4, 8646.0], [74.5, 8646.0], [74.6, 8646.0], [74.7, 8646.0], [74.8, 8646.0], [74.9, 8646.0], [75.0, 8694.0], [75.1, 8694.0], [75.2, 8694.0], [75.3, 8694.0], [75.4, 8694.0], [75.5, 8694.0], [75.6, 8694.0], [75.7, 8694.0], [75.8, 8694.0], [75.9, 8694.0], [76.0, 8829.0], [76.1, 8829.0], [76.2, 8829.0], [76.3, 8829.0], [76.4, 8829.0], [76.5, 8829.0], [76.6, 8829.0], [76.7, 8829.0], [76.8, 8829.0], [76.9, 8829.0], [77.0, 8851.0], [77.1, 8851.0], [77.2, 8851.0], [77.3, 8851.0], [77.4, 8851.0], [77.5, 8851.0], [77.6, 8851.0], [77.7, 8851.0], [77.8, 8851.0], [77.9, 8851.0], [78.0, 8934.0], [78.1, 8934.0], [78.2, 8934.0], [78.3, 8934.0], [78.4, 8934.0], [78.5, 8934.0], [78.6, 8934.0], [78.7, 8934.0], [78.8, 8934.0], [78.9, 8934.0], [79.0, 8938.0], [79.1, 8938.0], [79.2, 8938.0], [79.3, 8938.0], [79.4, 8938.0], [79.5, 8938.0], [79.6, 8938.0], [79.7, 8938.0], [79.8, 8938.0], [79.9, 8938.0], [80.0, 9017.0], [80.1, 9017.0], [80.2, 9017.0], [80.3, 9017.0], [80.4, 9017.0], [80.5, 9017.0], [80.6, 9017.0], [80.7, 9017.0], [80.8, 9017.0], [80.9, 9017.0], [81.0, 9023.0], [81.1, 9023.0], [81.2, 9023.0], [81.3, 9023.0], [81.4, 9023.0], [81.5, 9023.0], [81.6, 9023.0], [81.7, 9023.0], [81.8, 9023.0], [81.9, 9023.0], [82.0, 9030.0], [82.1, 9030.0], [82.2, 9030.0], [82.3, 9030.0], [82.4, 9030.0], [82.5, 9030.0], [82.6, 9030.0], [82.7, 9030.0], [82.8, 9030.0], [82.9, 9030.0], [83.0, 9122.0], [83.1, 9122.0], [83.2, 9122.0], [83.3, 9122.0], [83.4, 9122.0], [83.5, 9122.0], [83.6, 9122.0], [83.7, 9122.0], [83.8, 9122.0], [83.9, 9122.0], [84.0, 9126.0], [84.1, 9126.0], [84.2, 9126.0], [84.3, 9126.0], [84.4, 9126.0], [84.5, 9126.0], [84.6, 9126.0], [84.7, 9126.0], [84.8, 9126.0], [84.9, 9126.0], [85.0, 9136.0], [85.1, 9136.0], [85.2, 9136.0], [85.3, 9136.0], [85.4, 9136.0], [85.5, 9136.0], [85.6, 9136.0], [85.7, 9136.0], [85.8, 9136.0], [85.9, 9136.0], [86.0, 9181.0], [86.1, 9181.0], [86.2, 9181.0], [86.3, 9181.0], [86.4, 9181.0], [86.5, 9181.0], [86.6, 9181.0], [86.7, 9181.0], [86.8, 9181.0], [86.9, 9181.0], [87.0, 9406.0], [87.1, 9406.0], [87.2, 9406.0], [87.3, 9406.0], [87.4, 9406.0], [87.5, 9406.0], [87.6, 9406.0], [87.7, 9406.0], [87.8, 9406.0], [87.9, 9406.0], [88.0, 9915.0], [88.1, 9915.0], [88.2, 9915.0], [88.3, 9915.0], [88.4, 9915.0], [88.5, 9915.0], [88.6, 9915.0], [88.7, 9915.0], [88.8, 9915.0], [88.9, 9915.0], [89.0, 9935.0], [89.1, 9935.0], [89.2, 9935.0], [89.3, 9935.0], [89.4, 9935.0], [89.5, 9935.0], [89.6, 9935.0], [89.7, 9935.0], [89.8, 9935.0], [89.9, 9935.0], [90.0, 10192.0], [90.1, 10192.0], [90.2, 10192.0], [90.3, 10192.0], [90.4, 10192.0], [90.5, 10192.0], [90.6, 10192.0], [90.7, 10192.0], [90.8, 10192.0], [90.9, 10192.0], [91.0, 10194.0], [91.1, 10194.0], [91.2, 10194.0], [91.3, 10194.0], [91.4, 10194.0], [91.5, 10194.0], [91.6, 10194.0], [91.7, 10194.0], [91.8, 10194.0], [91.9, 10194.0], [92.0, 10849.0], [92.1, 10849.0], [92.2, 10849.0], [92.3, 10849.0], [92.4, 10849.0], [92.5, 10849.0], [92.6, 10849.0], [92.7, 10849.0], [92.8, 10849.0], [92.9, 10849.0], [93.0, 11530.0], [93.1, 11530.0], [93.2, 11530.0], [93.3, 11530.0], [93.4, 11530.0], [93.5, 11530.0], [93.6, 11530.0], [93.7, 11530.0], [93.8, 11530.0], [93.9, 11530.0], [94.0, 12289.0], [94.1, 12289.0], [94.2, 12289.0], [94.3, 12289.0], [94.4, 12289.0], [94.5, 12289.0], [94.6, 12289.0], [94.7, 12289.0], [94.8, 12289.0], [94.9, 12289.0], [95.0, 13039.0], [95.1, 13039.0], [95.2, 13039.0], [95.3, 13039.0], [95.4, 13039.0], [95.5, 13039.0], [95.6, 13039.0], [95.7, 13039.0], [95.8, 13039.0], [95.9, 13039.0], [96.0, 13208.0], [96.1, 13208.0], [96.2, 13208.0], [96.3, 13208.0], [96.4, 13208.0], [96.5, 13208.0], [96.6, 13208.0], [96.7, 13208.0], [96.8, 13208.0], [96.9, 13208.0], [97.0, 13539.0], [97.1, 13539.0], [97.2, 13539.0], [97.3, 13539.0], [97.4, 13539.0], [97.5, 13539.0], [97.6, 13539.0], [97.7, 13539.0], [97.8, 13539.0], [97.9, 13539.0], [98.0, 14746.0], [98.1, 14746.0], [98.2, 14746.0], [98.3, 14746.0], [98.4, 14746.0], [98.5, 14746.0], [98.6, 14746.0], [98.7, 14746.0], [98.8, 14746.0], [98.9, 14746.0], [99.0, 15645.0], [99.1, 15645.0], [99.2, 15645.0], [99.3, 15645.0], [99.4, 15645.0], [99.5, 15645.0], [99.6, 15645.0], [99.7, 15645.0], [99.8, 15645.0], [99.9, 15645.0]], "isOverall": false, "label": "Item Details", "isController": false}, {"data": [[0.0, 2697.0], [0.1, 2697.0], [0.2, 2697.0], [0.3, 2697.0], [0.4, 2697.0], [0.5, 2697.0], [0.6, 2697.0], [0.7, 2697.0], [0.8, 2697.0], [0.9, 2697.0], [1.0, 2734.0], [1.1, 2734.0], [1.2, 2734.0], [1.3, 2734.0], [1.4, 2734.0], [1.5, 2734.0], [1.6, 2734.0], [1.7, 2734.0], [1.8, 2734.0], [1.9, 2734.0], [2.0, 2991.0], [2.1, 2991.0], [2.2, 2991.0], [2.3, 2991.0], [2.4, 2991.0], [2.5, 2991.0], [2.6, 2991.0], [2.7, 2991.0], [2.8, 2991.0], [2.9, 2991.0], [3.0, 3076.0], [3.1, 3076.0], [3.2, 3076.0], [3.3, 3076.0], [3.4, 3076.0], [3.5, 3076.0], [3.6, 3076.0], [3.7, 3076.0], [3.8, 3076.0], [3.9, 3076.0], [4.0, 3090.0], [4.1, 3090.0], [4.2, 3090.0], [4.3, 3090.0], [4.4, 3090.0], [4.5, 3090.0], [4.6, 3090.0], [4.7, 3090.0], [4.8, 3090.0], [4.9, 3090.0], [5.0, 3108.0], [5.1, 3108.0], [5.2, 3108.0], [5.3, 3108.0], [5.4, 3108.0], [5.5, 3108.0], [5.6, 3108.0], [5.7, 3108.0], [5.8, 3108.0], [5.9, 3108.0], [6.0, 3126.0], [6.1, 3126.0], [6.2, 3126.0], [6.3, 3126.0], [6.4, 3126.0], [6.5, 3126.0], [6.6, 3126.0], [6.7, 3126.0], [6.8, 3126.0], [6.9, 3126.0], [7.0, 3130.0], [7.1, 3130.0], [7.2, 3130.0], [7.3, 3130.0], [7.4, 3130.0], [7.5, 3130.0], [7.6, 3130.0], [7.7, 3130.0], [7.8, 3130.0], [7.9, 3130.0], [8.0, 3143.0], [8.1, 3143.0], [8.2, 3143.0], [8.3, 3143.0], [8.4, 3143.0], [8.5, 3143.0], [8.6, 3143.0], [8.7, 3143.0], [8.8, 3143.0], [8.9, 3143.0], [9.0, 3248.0], [9.1, 3248.0], [9.2, 3248.0], [9.3, 3248.0], [9.4, 3248.0], [9.5, 3248.0], [9.6, 3248.0], [9.7, 3248.0], [9.8, 3248.0], [9.9, 3248.0], [10.0, 3257.0], [10.1, 3257.0], [10.2, 3257.0], [10.3, 3257.0], [10.4, 3257.0], [10.5, 3257.0], [10.6, 3257.0], [10.7, 3257.0], [10.8, 3257.0], [10.9, 3257.0], [11.0, 3330.0], [11.1, 3330.0], [11.2, 3330.0], [11.3, 3330.0], [11.4, 3330.0], [11.5, 3330.0], [11.6, 3330.0], [11.7, 3330.0], [11.8, 3330.0], [11.9, 3330.0], [12.0, 3405.0], [12.1, 3405.0], [12.2, 3405.0], [12.3, 3405.0], [12.4, 3405.0], [12.5, 3405.0], [12.6, 3405.0], [12.7, 3405.0], [12.8, 3405.0], [12.9, 3405.0], [13.0, 3481.0], [13.1, 3481.0], [13.2, 3481.0], [13.3, 3481.0], [13.4, 3481.0], [13.5, 3481.0], [13.6, 3481.0], [13.7, 3481.0], [13.8, 3481.0], [13.9, 3481.0], [14.0, 3526.0], [14.1, 3526.0], [14.2, 3526.0], [14.3, 3526.0], [14.4, 3526.0], [14.5, 3526.0], [14.6, 3526.0], [14.7, 3526.0], [14.8, 3526.0], [14.9, 3526.0], [15.0, 3649.0], [15.1, 3649.0], [15.2, 3649.0], [15.3, 3649.0], [15.4, 3649.0], [15.5, 3649.0], [15.6, 3649.0], [15.7, 3649.0], [15.8, 3649.0], [15.9, 3649.0], [16.0, 3661.0], [16.1, 3661.0], [16.2, 3661.0], [16.3, 3661.0], [16.4, 3661.0], [16.5, 3661.0], [16.6, 3661.0], [16.7, 3661.0], [16.8, 3661.0], [16.9, 3661.0], [17.0, 3732.0], [17.1, 3732.0], [17.2, 3732.0], [17.3, 3732.0], [17.4, 3732.0], [17.5, 3732.0], [17.6, 3732.0], [17.7, 3732.0], [17.8, 3732.0], [17.9, 3732.0], [18.0, 3861.0], [18.1, 3861.0], [18.2, 3861.0], [18.3, 3861.0], [18.4, 3861.0], [18.5, 3861.0], [18.6, 3861.0], [18.7, 3861.0], [18.8, 3861.0], [18.9, 3861.0], [19.0, 3874.0], [19.1, 3874.0], [19.2, 3874.0], [19.3, 3874.0], [19.4, 3874.0], [19.5, 3874.0], [19.6, 3874.0], [19.7, 3874.0], [19.8, 3874.0], [19.9, 3874.0], [20.0, 3879.0], [20.1, 3879.0], [20.2, 3879.0], [20.3, 3879.0], [20.4, 3879.0], [20.5, 3879.0], [20.6, 3879.0], [20.7, 3879.0], [20.8, 3879.0], [20.9, 3879.0], [21.0, 3913.0], [21.1, 3913.0], [21.2, 3913.0], [21.3, 3913.0], [21.4, 3913.0], [21.5, 3913.0], [21.6, 3913.0], [21.7, 3913.0], [21.8, 3913.0], [21.9, 3913.0], [22.0, 3971.0], [22.1, 3971.0], [22.2, 3971.0], [22.3, 3971.0], [22.4, 3971.0], [22.5, 3971.0], [22.6, 3971.0], [22.7, 3971.0], [22.8, 3971.0], [22.9, 3971.0], [23.0, 4006.0], [23.1, 4006.0], [23.2, 4006.0], [23.3, 4006.0], [23.4, 4006.0], [23.5, 4006.0], [23.6, 4006.0], [23.7, 4006.0], [23.8, 4006.0], [23.9, 4006.0], [24.0, 4017.0], [24.1, 4017.0], [24.2, 4017.0], [24.3, 4017.0], [24.4, 4017.0], [24.5, 4017.0], [24.6, 4017.0], [24.7, 4017.0], [24.8, 4017.0], [24.9, 4017.0], [25.0, 4047.0], [25.1, 4047.0], [25.2, 4047.0], [25.3, 4047.0], [25.4, 4047.0], [25.5, 4047.0], [25.6, 4047.0], [25.7, 4047.0], [25.8, 4047.0], [25.9, 4047.0], [26.0, 4092.0], [26.1, 4092.0], [26.2, 4092.0], [26.3, 4092.0], [26.4, 4092.0], [26.5, 4092.0], [26.6, 4092.0], [26.7, 4092.0], [26.8, 4092.0], [26.9, 4092.0], [27.0, 4114.0], [27.1, 4114.0], [27.2, 4114.0], [27.3, 4114.0], [27.4, 4114.0], [27.5, 4114.0], [27.6, 4114.0], [27.7, 4114.0], [27.8, 4114.0], [27.9, 4114.0], [28.0, 4203.0], [28.1, 4203.0], [28.2, 4203.0], [28.3, 4203.0], [28.4, 4203.0], [28.5, 4203.0], [28.6, 4203.0], [28.7, 4203.0], [28.8, 4203.0], [28.9, 4203.0], [29.0, 4264.0], [29.1, 4264.0], [29.2, 4264.0], [29.3, 4264.0], [29.4, 4264.0], [29.5, 4264.0], [29.6, 4264.0], [29.7, 4264.0], [29.8, 4264.0], [29.9, 4264.0], [30.0, 4295.0], [30.1, 4295.0], [30.2, 4295.0], [30.3, 4295.0], [30.4, 4295.0], [30.5, 4295.0], [30.6, 4295.0], [30.7, 4295.0], [30.8, 4295.0], [30.9, 4295.0], [31.0, 4364.0], [31.1, 4364.0], [31.2, 4364.0], [31.3, 4364.0], [31.4, 4364.0], [31.5, 4364.0], [31.6, 4364.0], [31.7, 4364.0], [31.8, 4364.0], [31.9, 4364.0], [32.0, 4393.0], [32.1, 4393.0], [32.2, 4393.0], [32.3, 4393.0], [32.4, 4393.0], [32.5, 4393.0], [32.6, 4393.0], [32.7, 4393.0], [32.8, 4393.0], [32.9, 4393.0], [33.0, 4393.0], [33.1, 4393.0], [33.2, 4393.0], [33.3, 4393.0], [33.4, 4393.0], [33.5, 4393.0], [33.6, 4393.0], [33.7, 4393.0], [33.8, 4393.0], [33.9, 4393.0], [34.0, 4415.0], [34.1, 4415.0], [34.2, 4415.0], [34.3, 4415.0], [34.4, 4415.0], [34.5, 4415.0], [34.6, 4415.0], [34.7, 4415.0], [34.8, 4415.0], [34.9, 4415.0], [35.0, 4483.0], [35.1, 4483.0], [35.2, 4483.0], [35.3, 4483.0], [35.4, 4483.0], [35.5, 4483.0], [35.6, 4483.0], [35.7, 4483.0], [35.8, 4483.0], [35.9, 4483.0], [36.0, 4510.0], [36.1, 4510.0], [36.2, 4510.0], [36.3, 4510.0], [36.4, 4510.0], [36.5, 4510.0], [36.6, 4510.0], [36.7, 4510.0], [36.8, 4510.0], [36.9, 4510.0], [37.0, 4515.0], [37.1, 4515.0], [37.2, 4515.0], [37.3, 4515.0], [37.4, 4515.0], [37.5, 4515.0], [37.6, 4515.0], [37.7, 4515.0], [37.8, 4515.0], [37.9, 4515.0], [38.0, 4563.0], [38.1, 4563.0], [38.2, 4563.0], [38.3, 4563.0], [38.4, 4563.0], [38.5, 4563.0], [38.6, 4563.0], [38.7, 4563.0], [38.8, 4563.0], [38.9, 4563.0], [39.0, 4607.0], [39.1, 4607.0], [39.2, 4607.0], [39.3, 4607.0], [39.4, 4607.0], [39.5, 4607.0], [39.6, 4607.0], [39.7, 4607.0], [39.8, 4607.0], [39.9, 4607.0], [40.0, 4666.0], [40.1, 4666.0], [40.2, 4666.0], [40.3, 4666.0], [40.4, 4666.0], [40.5, 4666.0], [40.6, 4666.0], [40.7, 4666.0], [40.8, 4666.0], [40.9, 4666.0], [41.0, 4671.0], [41.1, 4671.0], [41.2, 4671.0], [41.3, 4671.0], [41.4, 4671.0], [41.5, 4671.0], [41.6, 4671.0], [41.7, 4671.0], [41.8, 4671.0], [41.9, 4671.0], [42.0, 4812.0], [42.1, 4812.0], [42.2, 4812.0], [42.3, 4812.0], [42.4, 4812.0], [42.5, 4812.0], [42.6, 4812.0], [42.7, 4812.0], [42.8, 4812.0], [42.9, 4812.0], [43.0, 4818.0], [43.1, 4818.0], [43.2, 4818.0], [43.3, 4818.0], [43.4, 4818.0], [43.5, 4818.0], [43.6, 4818.0], [43.7, 4818.0], [43.8, 4818.0], [43.9, 4818.0], [44.0, 4832.0], [44.1, 4832.0], [44.2, 4832.0], [44.3, 4832.0], [44.4, 4832.0], [44.5, 4832.0], [44.6, 4832.0], [44.7, 4832.0], [44.8, 4832.0], [44.9, 4832.0], [45.0, 4849.0], [45.1, 4849.0], [45.2, 4849.0], [45.3, 4849.0], [45.4, 4849.0], [45.5, 4849.0], [45.6, 4849.0], [45.7, 4849.0], [45.8, 4849.0], [45.9, 4849.0], [46.0, 4862.0], [46.1, 4862.0], [46.2, 4862.0], [46.3, 4862.0], [46.4, 4862.0], [46.5, 4862.0], [46.6, 4862.0], [46.7, 4862.0], [46.8, 4862.0], [46.9, 4862.0], [47.0, 4870.0], [47.1, 4870.0], [47.2, 4870.0], [47.3, 4870.0], [47.4, 4870.0], [47.5, 4870.0], [47.6, 4870.0], [47.7, 4870.0], [47.8, 4870.0], [47.9, 4870.0], [48.0, 4871.0], [48.1, 4871.0], [48.2, 4871.0], [48.3, 4871.0], [48.4, 4871.0], [48.5, 4871.0], [48.6, 4871.0], [48.7, 4871.0], [48.8, 4871.0], [48.9, 4871.0], [49.0, 4882.0], [49.1, 4882.0], [49.2, 4882.0], [49.3, 4882.0], [49.4, 4882.0], [49.5, 4882.0], [49.6, 4882.0], [49.7, 4882.0], [49.8, 4882.0], [49.9, 4882.0], [50.0, 5020.0], [50.1, 5020.0], [50.2, 5020.0], [50.3, 5020.0], [50.4, 5020.0], [50.5, 5020.0], [50.6, 5020.0], [50.7, 5020.0], [50.8, 5020.0], [50.9, 5020.0], [51.0, 5111.0], [51.1, 5111.0], [51.2, 5111.0], [51.3, 5111.0], [51.4, 5111.0], [51.5, 5111.0], [51.6, 5111.0], [51.7, 5111.0], [51.8, 5111.0], [51.9, 5111.0], [52.0, 5144.0], [52.1, 5144.0], [52.2, 5144.0], [52.3, 5144.0], [52.4, 5144.0], [52.5, 5144.0], [52.6, 5144.0], [52.7, 5144.0], [52.8, 5144.0], [52.9, 5144.0], [53.0, 5155.0], [53.1, 5155.0], [53.2, 5155.0], [53.3, 5155.0], [53.4, 5155.0], [53.5, 5155.0], [53.6, 5155.0], [53.7, 5155.0], [53.8, 5155.0], [53.9, 5155.0], [54.0, 5179.0], [54.1, 5179.0], [54.2, 5179.0], [54.3, 5179.0], [54.4, 5179.0], [54.5, 5179.0], [54.6, 5179.0], [54.7, 5179.0], [54.8, 5179.0], [54.9, 5179.0], [55.0, 5197.0], [55.1, 5197.0], [55.2, 5197.0], [55.3, 5197.0], [55.4, 5197.0], [55.5, 5197.0], [55.6, 5197.0], [55.7, 5197.0], [55.8, 5197.0], [55.9, 5197.0], [56.0, 5243.0], [56.1, 5243.0], [56.2, 5243.0], [56.3, 5243.0], [56.4, 5243.0], [56.5, 5243.0], [56.6, 5243.0], [56.7, 5243.0], [56.8, 5243.0], [56.9, 5243.0], [57.0, 5250.0], [57.1, 5250.0], [57.2, 5250.0], [57.3, 5250.0], [57.4, 5250.0], [57.5, 5250.0], [57.6, 5250.0], [57.7, 5250.0], [57.8, 5250.0], [57.9, 5250.0], [58.0, 5268.0], [58.1, 5268.0], [58.2, 5268.0], [58.3, 5268.0], [58.4, 5268.0], [58.5, 5268.0], [58.6, 5268.0], [58.7, 5268.0], [58.8, 5268.0], [58.9, 5268.0], [59.0, 5406.0], [59.1, 5406.0], [59.2, 5406.0], [59.3, 5406.0], [59.4, 5406.0], [59.5, 5406.0], [59.6, 5406.0], [59.7, 5406.0], [59.8, 5406.0], [59.9, 5406.0], [60.0, 5485.0], [60.1, 5485.0], [60.2, 5485.0], [60.3, 5485.0], [60.4, 5485.0], [60.5, 5485.0], [60.6, 5485.0], [60.7, 5485.0], [60.8, 5485.0], [60.9, 5485.0], [61.0, 5607.0], [61.1, 5607.0], [61.2, 5607.0], [61.3, 5607.0], [61.4, 5607.0], [61.5, 5607.0], [61.6, 5607.0], [61.7, 5607.0], [61.8, 5607.0], [61.9, 5607.0], [62.0, 5608.0], [62.1, 5608.0], [62.2, 5608.0], [62.3, 5608.0], [62.4, 5608.0], [62.5, 5608.0], [62.6, 5608.0], [62.7, 5608.0], [62.8, 5608.0], [62.9, 5608.0], [63.0, 5706.0], [63.1, 5706.0], [63.2, 5706.0], [63.3, 5706.0], [63.4, 5706.0], [63.5, 5706.0], [63.6, 5706.0], [63.7, 5706.0], [63.8, 5706.0], [63.9, 5706.0], [64.0, 5723.0], [64.1, 5723.0], [64.2, 5723.0], [64.3, 5723.0], [64.4, 5723.0], [64.5, 5723.0], [64.6, 5723.0], [64.7, 5723.0], [64.8, 5723.0], [64.9, 5723.0], [65.0, 5740.0], [65.1, 5740.0], [65.2, 5740.0], [65.3, 5740.0], [65.4, 5740.0], [65.5, 5740.0], [65.6, 5740.0], [65.7, 5740.0], [65.8, 5740.0], [65.9, 5740.0], [66.0, 5875.0], [66.1, 5875.0], [66.2, 5875.0], [66.3, 5875.0], [66.4, 5875.0], [66.5, 5875.0], [66.6, 5875.0], [66.7, 5875.0], [66.8, 5875.0], [66.9, 5875.0], [67.0, 5922.0], [67.1, 5922.0], [67.2, 5922.0], [67.3, 5922.0], [67.4, 5922.0], [67.5, 5922.0], [67.6, 5922.0], [67.7, 5922.0], [67.8, 5922.0], [67.9, 5922.0], [68.0, 5974.0], [68.1, 5974.0], [68.2, 5974.0], [68.3, 5974.0], [68.4, 5974.0], [68.5, 5974.0], [68.6, 5974.0], [68.7, 5974.0], [68.8, 5974.0], [68.9, 5974.0], [69.0, 5979.0], [69.1, 5979.0], [69.2, 5979.0], [69.3, 5979.0], [69.4, 5979.0], [69.5, 5979.0], [69.6, 5979.0], [69.7, 5979.0], [69.8, 5979.0], [69.9, 5979.0], [70.0, 6100.0], [70.1, 6100.0], [70.2, 6100.0], [70.3, 6100.0], [70.4, 6100.0], [70.5, 6100.0], [70.6, 6100.0], [70.7, 6100.0], [70.8, 6100.0], [70.9, 6100.0], [71.0, 6116.0], [71.1, 6116.0], [71.2, 6116.0], [71.3, 6116.0], [71.4, 6116.0], [71.5, 6116.0], [71.6, 6116.0], [71.7, 6116.0], [71.8, 6116.0], [71.9, 6116.0], [72.0, 6199.0], [72.1, 6199.0], [72.2, 6199.0], [72.3, 6199.0], [72.4, 6199.0], [72.5, 6199.0], [72.6, 6199.0], [72.7, 6199.0], [72.8, 6199.0], [72.9, 6199.0], [73.0, 6217.0], [73.1, 6217.0], [73.2, 6217.0], [73.3, 6217.0], [73.4, 6217.0], [73.5, 6217.0], [73.6, 6217.0], [73.7, 6217.0], [73.8, 6217.0], [73.9, 6217.0], [74.0, 6428.0], [74.1, 6428.0], [74.2, 6428.0], [74.3, 6428.0], [74.4, 6428.0], [74.5, 6428.0], [74.6, 6428.0], [74.7, 6428.0], [74.8, 6428.0], [74.9, 6428.0], [75.0, 6470.0], [75.1, 6470.0], [75.2, 6470.0], [75.3, 6470.0], [75.4, 6470.0], [75.5, 6470.0], [75.6, 6470.0], [75.7, 6470.0], [75.8, 6470.0], [75.9, 6470.0], [76.0, 6555.0], [76.1, 6555.0], [76.2, 6555.0], [76.3, 6555.0], [76.4, 6555.0], [76.5, 6555.0], [76.6, 6555.0], [76.7, 6555.0], [76.8, 6555.0], [76.9, 6555.0], [77.0, 6751.0], [77.1, 6751.0], [77.2, 6751.0], [77.3, 6751.0], [77.4, 6751.0], [77.5, 6751.0], [77.6, 6751.0], [77.7, 6751.0], [77.8, 6751.0], [77.9, 6751.0], [78.0, 6945.0], [78.1, 6945.0], [78.2, 6945.0], [78.3, 6945.0], [78.4, 6945.0], [78.5, 6945.0], [78.6, 6945.0], [78.7, 6945.0], [78.8, 6945.0], [78.9, 6945.0], [79.0, 6946.0], [79.1, 6946.0], [79.2, 6946.0], [79.3, 6946.0], [79.4, 6946.0], [79.5, 6946.0], [79.6, 6946.0], [79.7, 6946.0], [79.8, 6946.0], [79.9, 6946.0], [80.0, 7006.0], [80.1, 7006.0], [80.2, 7006.0], [80.3, 7006.0], [80.4, 7006.0], [80.5, 7006.0], [80.6, 7006.0], [80.7, 7006.0], [80.8, 7006.0], [80.9, 7006.0], [81.0, 7209.0], [81.1, 7209.0], [81.2, 7209.0], [81.3, 7209.0], [81.4, 7209.0], [81.5, 7209.0], [81.6, 7209.0], [81.7, 7209.0], [81.8, 7209.0], [81.9, 7209.0], [82.0, 7257.0], [82.1, 7257.0], [82.2, 7257.0], [82.3, 7257.0], [82.4, 7257.0], [82.5, 7257.0], [82.6, 7257.0], [82.7, 7257.0], [82.8, 7257.0], [82.9, 7257.0], [83.0, 7274.0], [83.1, 7274.0], [83.2, 7274.0], [83.3, 7274.0], [83.4, 7274.0], [83.5, 7274.0], [83.6, 7274.0], [83.7, 7274.0], [83.8, 7274.0], [83.9, 7274.0], [84.0, 7367.0], [84.1, 7367.0], [84.2, 7367.0], [84.3, 7367.0], [84.4, 7367.0], [84.5, 7367.0], [84.6, 7367.0], [84.7, 7367.0], [84.8, 7367.0], [84.9, 7367.0], [85.0, 7485.0], [85.1, 7485.0], [85.2, 7485.0], [85.3, 7485.0], [85.4, 7485.0], [85.5, 7485.0], [85.6, 7485.0], [85.7, 7485.0], [85.8, 7485.0], [85.9, 7485.0], [86.0, 7514.0], [86.1, 7514.0], [86.2, 7514.0], [86.3, 7514.0], [86.4, 7514.0], [86.5, 7514.0], [86.6, 7514.0], [86.7, 7514.0], [86.8, 7514.0], [86.9, 7514.0], [87.0, 7560.0], [87.1, 7560.0], [87.2, 7560.0], [87.3, 7560.0], [87.4, 7560.0], [87.5, 7560.0], [87.6, 7560.0], [87.7, 7560.0], [87.8, 7560.0], [87.9, 7560.0], [88.0, 7601.0], [88.1, 7601.0], [88.2, 7601.0], [88.3, 7601.0], [88.4, 7601.0], [88.5, 7601.0], [88.6, 7601.0], [88.7, 7601.0], [88.8, 7601.0], [88.9, 7601.0], [89.0, 7761.0], [89.1, 7761.0], [89.2, 7761.0], [89.3, 7761.0], [89.4, 7761.0], [89.5, 7761.0], [89.6, 7761.0], [89.7, 7761.0], [89.8, 7761.0], [89.9, 7761.0], [90.0, 7874.0], [90.1, 7874.0], [90.2, 7874.0], [90.3, 7874.0], [90.4, 7874.0], [90.5, 7874.0], [90.6, 7874.0], [90.7, 7874.0], [90.8, 7874.0], [90.9, 7874.0], [91.0, 8170.0], [91.1, 8170.0], [91.2, 8170.0], [91.3, 8170.0], [91.4, 8170.0], [91.5, 8170.0], [91.6, 8170.0], [91.7, 8170.0], [91.8, 8170.0], [91.9, 8170.0], [92.0, 8572.0], [92.1, 8572.0], [92.2, 8572.0], [92.3, 8572.0], [92.4, 8572.0], [92.5, 8572.0], [92.6, 8572.0], [92.7, 8572.0], [92.8, 8572.0], [92.9, 8572.0], [93.0, 8838.0], [93.1, 8838.0], [93.2, 8838.0], [93.3, 8838.0], [93.4, 8838.0], [93.5, 8838.0], [93.6, 8838.0], [93.7, 8838.0], [93.8, 8838.0], [93.9, 8838.0], [94.0, 8870.0], [94.1, 8870.0], [94.2, 8870.0], [94.3, 8870.0], [94.4, 8870.0], [94.5, 8870.0], [94.6, 8870.0], [94.7, 8870.0], [94.8, 8870.0], [94.9, 8870.0], [95.0, 9547.0], [95.1, 9547.0], [95.2, 9547.0], [95.3, 9547.0], [95.4, 9547.0], [95.5, 9547.0], [95.6, 9547.0], [95.7, 9547.0], [95.8, 9547.0], [95.9, 9547.0], [96.0, 10229.0], [96.1, 10229.0], [96.2, 10229.0], [96.3, 10229.0], [96.4, 10229.0], [96.5, 10229.0], [96.6, 10229.0], [96.7, 10229.0], [96.8, 10229.0], [96.9, 10229.0], [97.0, 10340.0], [97.1, 10340.0], [97.2, 10340.0], [97.3, 10340.0], [97.4, 10340.0], [97.5, 10340.0], [97.6, 10340.0], [97.7, 10340.0], [97.8, 10340.0], [97.9, 10340.0], [98.0, 10390.0], [98.1, 10390.0], [98.2, 10390.0], [98.3, 10390.0], [98.4, 10390.0], [98.5, 10390.0], [98.6, 10390.0], [98.7, 10390.0], [98.8, 10390.0], [98.9, 10390.0], [99.0, 11379.0], [99.1, 11379.0], [99.2, 11379.0], [99.3, 11379.0], [99.4, 11379.0], [99.5, 11379.0], [99.6, 11379.0], [99.7, 11379.0], [99.8, 11379.0], [99.9, 11379.0]], "isOverall": false, "label": "View Items", "isController": false}, {"data": [[0.0, 2190.0], [0.1, 2190.0], [0.2, 2190.0], [0.3, 2190.0], [0.4, 2190.0], [0.5, 2190.0], [0.6, 2190.0], [0.7, 2190.0], [0.8, 2190.0], [0.9, 2190.0], [1.0, 2232.0], [1.1, 2232.0], [1.2, 2232.0], [1.3, 2232.0], [1.4, 2232.0], [1.5, 2232.0], [1.6, 2232.0], [1.7, 2232.0], [1.8, 2232.0], [1.9, 2232.0], [2.0, 2247.0], [2.1, 2247.0], [2.2, 2247.0], [2.3, 2247.0], [2.4, 2247.0], [2.5, 2247.0], [2.6, 2247.0], [2.7, 2247.0], [2.8, 2247.0], [2.9, 2247.0], [3.0, 2247.0], [3.1, 2247.0], [3.2, 2247.0], [3.3, 2247.0], [3.4, 2247.0], [3.5, 2247.0], [3.6, 2247.0], [3.7, 2247.0], [3.8, 2247.0], [3.9, 2247.0], [4.0, 2258.0], [4.1, 2258.0], [4.2, 2258.0], [4.3, 2258.0], [4.4, 2258.0], [4.5, 2258.0], [4.6, 2258.0], [4.7, 2258.0], [4.8, 2258.0], [4.9, 2258.0], [5.0, 2259.0], [5.1, 2259.0], [5.2, 2259.0], [5.3, 2259.0], [5.4, 2259.0], [5.5, 2259.0], [5.6, 2259.0], [5.7, 2259.0], [5.8, 2259.0], [5.9, 2259.0], [6.0, 2259.0], [6.1, 2259.0], [6.2, 2259.0], [6.3, 2259.0], [6.4, 2259.0], [6.5, 2259.0], [6.6, 2259.0], [6.7, 2259.0], [6.8, 2259.0], [6.9, 2259.0], [7.0, 2261.0], [7.1, 2261.0], [7.2, 2261.0], [7.3, 2261.0], [7.4, 2261.0], [7.5, 2261.0], [7.6, 2261.0], [7.7, 2261.0], [7.8, 2261.0], [7.9, 2261.0], [8.0, 2263.0], [8.1, 2263.0], [8.2, 2263.0], [8.3, 2263.0], [8.4, 2263.0], [8.5, 2263.0], [8.6, 2263.0], [8.7, 2263.0], [8.8, 2263.0], [8.9, 2263.0], [9.0, 2270.0], [9.1, 2270.0], [9.2, 2270.0], [9.3, 2270.0], [9.4, 2270.0], [9.5, 2270.0], [9.6, 2270.0], [9.7, 2270.0], [9.8, 2270.0], [9.9, 2270.0], [10.0, 2275.0], [10.1, 2275.0], [10.2, 2275.0], [10.3, 2275.0], [10.4, 2275.0], [10.5, 2275.0], [10.6, 2275.0], [10.7, 2275.0], [10.8, 2275.0], [10.9, 2275.0], [11.0, 2291.0], [11.1, 2291.0], [11.2, 2291.0], [11.3, 2291.0], [11.4, 2291.0], [11.5, 2291.0], [11.6, 2291.0], [11.7, 2291.0], [11.8, 2291.0], [11.9, 2291.0], [12.0, 2294.0], [12.1, 2294.0], [12.2, 2294.0], [12.3, 2294.0], [12.4, 2294.0], [12.5, 2294.0], [12.6, 2294.0], [12.7, 2294.0], [12.8, 2294.0], [12.9, 2294.0], [13.0, 2297.0], [13.1, 2297.0], [13.2, 2297.0], [13.3, 2297.0], [13.4, 2297.0], [13.5, 2297.0], [13.6, 2297.0], [13.7, 2297.0], [13.8, 2297.0], [13.9, 2297.0], [14.0, 2304.0], [14.1, 2304.0], [14.2, 2304.0], [14.3, 2304.0], [14.4, 2304.0], [14.5, 2304.0], [14.6, 2304.0], [14.7, 2304.0], [14.8, 2304.0], [14.9, 2304.0], [15.0, 2322.0], [15.1, 2322.0], [15.2, 2322.0], [15.3, 2322.0], [15.4, 2322.0], [15.5, 2322.0], [15.6, 2322.0], [15.7, 2322.0], [15.8, 2322.0], [15.9, 2322.0], [16.0, 2336.0], [16.1, 2336.0], [16.2, 2336.0], [16.3, 2336.0], [16.4, 2336.0], [16.5, 2336.0], [16.6, 2336.0], [16.7, 2336.0], [16.8, 2336.0], [16.9, 2336.0], [17.0, 2363.0], [17.1, 2363.0], [17.2, 2363.0], [17.3, 2363.0], [17.4, 2363.0], [17.5, 2363.0], [17.6, 2363.0], [17.7, 2363.0], [17.8, 2363.0], [17.9, 2363.0], [18.0, 2430.0], [18.1, 2430.0], [18.2, 2430.0], [18.3, 2430.0], [18.4, 2430.0], [18.5, 2430.0], [18.6, 2430.0], [18.7, 2430.0], [18.8, 2430.0], [18.9, 2430.0], [19.0, 2436.0], [19.1, 2436.0], [19.2, 2436.0], [19.3, 2436.0], [19.4, 2436.0], [19.5, 2436.0], [19.6, 2436.0], [19.7, 2436.0], [19.8, 2436.0], [19.9, 2436.0], [20.0, 2437.0], [20.1, 2437.0], [20.2, 2437.0], [20.3, 2437.0], [20.4, 2437.0], [20.5, 2437.0], [20.6, 2437.0], [20.7, 2437.0], [20.8, 2437.0], [20.9, 2437.0], [21.0, 2441.0], [21.1, 2441.0], [21.2, 2441.0], [21.3, 2441.0], [21.4, 2441.0], [21.5, 2441.0], [21.6, 2441.0], [21.7, 2441.0], [21.8, 2441.0], [21.9, 2441.0], [22.0, 2444.0], [22.1, 2444.0], [22.2, 2444.0], [22.3, 2444.0], [22.4, 2444.0], [22.5, 2444.0], [22.6, 2444.0], [22.7, 2444.0], [22.8, 2444.0], [22.9, 2444.0], [23.0, 2447.0], [23.1, 2447.0], [23.2, 2447.0], [23.3, 2447.0], [23.4, 2447.0], [23.5, 2447.0], [23.6, 2447.0], [23.7, 2447.0], [23.8, 2447.0], [23.9, 2447.0], [24.0, 2456.0], [24.1, 2456.0], [24.2, 2456.0], [24.3, 2456.0], [24.4, 2456.0], [24.5, 2456.0], [24.6, 2456.0], [24.7, 2456.0], [24.8, 2456.0], [24.9, 2456.0], [25.0, 2556.0], [25.1, 2556.0], [25.2, 2556.0], [25.3, 2556.0], [25.4, 2556.0], [25.5, 2556.0], [25.6, 2556.0], [25.7, 2556.0], [25.8, 2556.0], [25.9, 2556.0], [26.0, 2599.0], [26.1, 2599.0], [26.2, 2599.0], [26.3, 2599.0], [26.4, 2599.0], [26.5, 2599.0], [26.6, 2599.0], [26.7, 2599.0], [26.8, 2599.0], [26.9, 2599.0], [27.0, 2651.0], [27.1, 2651.0], [27.2, 2651.0], [27.3, 2651.0], [27.4, 2651.0], [27.5, 2651.0], [27.6, 2651.0], [27.7, 2651.0], [27.8, 2651.0], [27.9, 2651.0], [28.0, 2669.0], [28.1, 2669.0], [28.2, 2669.0], [28.3, 2669.0], [28.4, 2669.0], [28.5, 2669.0], [28.6, 2669.0], [28.7, 2669.0], [28.8, 2669.0], [28.9, 2669.0], [29.0, 2684.0], [29.1, 2684.0], [29.2, 2684.0], [29.3, 2684.0], [29.4, 2684.0], [29.5, 2684.0], [29.6, 2684.0], [29.7, 2684.0], [29.8, 2684.0], [29.9, 2684.0], [30.0, 2684.0], [30.1, 2684.0], [30.2, 2684.0], [30.3, 2684.0], [30.4, 2684.0], [30.5, 2684.0], [30.6, 2684.0], [30.7, 2684.0], [30.8, 2684.0], [30.9, 2684.0], [31.0, 2687.0], [31.1, 2687.0], [31.2, 2687.0], [31.3, 2687.0], [31.4, 2687.0], [31.5, 2687.0], [31.6, 2687.0], [31.7, 2687.0], [31.8, 2687.0], [31.9, 2687.0], [32.0, 2698.0], [32.1, 2698.0], [32.2, 2698.0], [32.3, 2698.0], [32.4, 2698.0], [32.5, 2698.0], [32.6, 2698.0], [32.7, 2698.0], [32.8, 2698.0], [32.9, 2698.0], [33.0, 2703.0], [33.1, 2703.0], [33.2, 2703.0], [33.3, 2703.0], [33.4, 2703.0], [33.5, 2703.0], [33.6, 2703.0], [33.7, 2703.0], [33.8, 2703.0], [33.9, 2703.0], [34.0, 2710.0], [34.1, 2710.0], [34.2, 2710.0], [34.3, 2710.0], [34.4, 2710.0], [34.5, 2710.0], [34.6, 2710.0], [34.7, 2710.0], [34.8, 2710.0], [34.9, 2710.0], [35.0, 2733.0], [35.1, 2733.0], [35.2, 2733.0], [35.3, 2733.0], [35.4, 2733.0], [35.5, 2733.0], [35.6, 2733.0], [35.7, 2733.0], [35.8, 2733.0], [35.9, 2733.0], [36.0, 2739.0], [36.1, 2739.0], [36.2, 2739.0], [36.3, 2739.0], [36.4, 2739.0], [36.5, 2739.0], [36.6, 2739.0], [36.7, 2739.0], [36.8, 2739.0], [36.9, 2739.0], [37.0, 2814.0], [37.1, 2814.0], [37.2, 2814.0], [37.3, 2814.0], [37.4, 2814.0], [37.5, 2814.0], [37.6, 2814.0], [37.7, 2814.0], [37.8, 2814.0], [37.9, 2814.0], [38.0, 2823.0], [38.1, 2823.0], [38.2, 2823.0], [38.3, 2823.0], [38.4, 2823.0], [38.5, 2823.0], [38.6, 2823.0], [38.7, 2823.0], [38.8, 2823.0], [38.9, 2823.0], [39.0, 2825.0], [39.1, 2825.0], [39.2, 2825.0], [39.3, 2825.0], [39.4, 2825.0], [39.5, 2825.0], [39.6, 2825.0], [39.7, 2825.0], [39.8, 2825.0], [39.9, 2825.0], [40.0, 2882.0], [40.1, 2882.0], [40.2, 2882.0], [40.3, 2882.0], [40.4, 2882.0], [40.5, 2882.0], [40.6, 2882.0], [40.7, 2882.0], [40.8, 2882.0], [40.9, 2882.0], [41.0, 2915.0], [41.1, 2915.0], [41.2, 2915.0], [41.3, 2915.0], [41.4, 2915.0], [41.5, 2915.0], [41.6, 2915.0], [41.7, 2915.0], [41.8, 2915.0], [41.9, 2915.0], [42.0, 2964.0], [42.1, 2964.0], [42.2, 2964.0], [42.3, 2964.0], [42.4, 2964.0], [42.5, 2964.0], [42.6, 2964.0], [42.7, 2964.0], [42.8, 2964.0], [42.9, 2964.0], [43.0, 2993.0], [43.1, 2993.0], [43.2, 2993.0], [43.3, 2993.0], [43.4, 2993.0], [43.5, 2993.0], [43.6, 2993.0], [43.7, 2993.0], [43.8, 2993.0], [43.9, 2993.0], [44.0, 2994.0], [44.1, 2994.0], [44.2, 2994.0], [44.3, 2994.0], [44.4, 2994.0], [44.5, 2994.0], [44.6, 2994.0], [44.7, 2994.0], [44.8, 2994.0], [44.9, 2994.0], [45.0, 3102.0], [45.1, 3102.0], [45.2, 3102.0], [45.3, 3102.0], [45.4, 3102.0], [45.5, 3102.0], [45.6, 3102.0], [45.7, 3102.0], [45.8, 3102.0], [45.9, 3102.0], [46.0, 3116.0], [46.1, 3116.0], [46.2, 3116.0], [46.3, 3116.0], [46.4, 3116.0], [46.5, 3116.0], [46.6, 3116.0], [46.7, 3116.0], [46.8, 3116.0], [46.9, 3116.0], [47.0, 3185.0], [47.1, 3185.0], [47.2, 3185.0], [47.3, 3185.0], [47.4, 3185.0], [47.5, 3185.0], [47.6, 3185.0], [47.7, 3185.0], [47.8, 3185.0], [47.9, 3185.0], [48.0, 3291.0], [48.1, 3291.0], [48.2, 3291.0], [48.3, 3291.0], [48.4, 3291.0], [48.5, 3291.0], [48.6, 3291.0], [48.7, 3291.0], [48.8, 3291.0], [48.9, 3291.0], [49.0, 3299.0], [49.1, 3299.0], [49.2, 3299.0], [49.3, 3299.0], [49.4, 3299.0], [49.5, 3299.0], [49.6, 3299.0], [49.7, 3299.0], [49.8, 3299.0], [49.9, 3299.0], [50.0, 3306.0], [50.1, 3306.0], [50.2, 3306.0], [50.3, 3306.0], [50.4, 3306.0], [50.5, 3306.0], [50.6, 3306.0], [50.7, 3306.0], [50.8, 3306.0], [50.9, 3306.0], [51.0, 3433.0], [51.1, 3433.0], [51.2, 3433.0], [51.3, 3433.0], [51.4, 3433.0], [51.5, 3433.0], [51.6, 3433.0], [51.7, 3433.0], [51.8, 3433.0], [51.9, 3433.0], [52.0, 3522.0], [52.1, 3522.0], [52.2, 3522.0], [52.3, 3522.0], [52.4, 3522.0], [52.5, 3522.0], [52.6, 3522.0], [52.7, 3522.0], [52.8, 3522.0], [52.9, 3522.0], [53.0, 3572.0], [53.1, 3572.0], [53.2, 3572.0], [53.3, 3572.0], [53.4, 3572.0], [53.5, 3572.0], [53.6, 3572.0], [53.7, 3572.0], [53.8, 3572.0], [53.9, 3572.0], [54.0, 3583.0], [54.1, 3583.0], [54.2, 3583.0], [54.3, 3583.0], [54.4, 3583.0], [54.5, 3583.0], [54.6, 3583.0], [54.7, 3583.0], [54.8, 3583.0], [54.9, 3583.0], [55.0, 3585.0], [55.1, 3585.0], [55.2, 3585.0], [55.3, 3585.0], [55.4, 3585.0], [55.5, 3585.0], [55.6, 3585.0], [55.7, 3585.0], [55.8, 3585.0], [55.9, 3585.0], [56.0, 3664.0], [56.1, 3664.0], [56.2, 3664.0], [56.3, 3664.0], [56.4, 3664.0], [56.5, 3664.0], [56.6, 3664.0], [56.7, 3664.0], [56.8, 3664.0], [56.9, 3664.0], [57.0, 3699.0], [57.1, 3699.0], [57.2, 3699.0], [57.3, 3699.0], [57.4, 3699.0], [57.5, 3699.0], [57.6, 3699.0], [57.7, 3699.0], [57.8, 3699.0], [57.9, 3699.0], [58.0, 3713.0], [58.1, 3713.0], [58.2, 3713.0], [58.3, 3713.0], [58.4, 3713.0], [58.5, 3713.0], [58.6, 3713.0], [58.7, 3713.0], [58.8, 3713.0], [58.9, 3713.0], [59.0, 3799.0], [59.1, 3799.0], [59.2, 3799.0], [59.3, 3799.0], [59.4, 3799.0], [59.5, 3799.0], [59.6, 3799.0], [59.7, 3799.0], [59.8, 3799.0], [59.9, 3799.0], [60.0, 3862.0], [60.1, 3862.0], [60.2, 3862.0], [60.3, 3862.0], [60.4, 3862.0], [60.5, 3862.0], [60.6, 3862.0], [60.7, 3862.0], [60.8, 3862.0], [60.9, 3862.0], [61.0, 4014.0], [61.1, 4014.0], [61.2, 4014.0], [61.3, 4014.0], [61.4, 4014.0], [61.5, 4014.0], [61.6, 4014.0], [61.7, 4014.0], [61.8, 4014.0], [61.9, 4014.0], [62.0, 4019.0], [62.1, 4019.0], [62.2, 4019.0], [62.3, 4019.0], [62.4, 4019.0], [62.5, 4019.0], [62.6, 4019.0], [62.7, 4019.0], [62.8, 4019.0], [62.9, 4019.0], [63.0, 4101.0], [63.1, 4101.0], [63.2, 4101.0], [63.3, 4101.0], [63.4, 4101.0], [63.5, 4101.0], [63.6, 4101.0], [63.7, 4101.0], [63.8, 4101.0], [63.9, 4101.0], [64.0, 4107.0], [64.1, 4107.0], [64.2, 4107.0], [64.3, 4107.0], [64.4, 4107.0], [64.5, 4107.0], [64.6, 4107.0], [64.7, 4107.0], [64.8, 4107.0], [64.9, 4107.0], [65.0, 4225.0], [65.1, 4225.0], [65.2, 4225.0], [65.3, 4225.0], [65.4, 4225.0], [65.5, 4225.0], [65.6, 4225.0], [65.7, 4225.0], [65.8, 4225.0], [65.9, 4225.0], [66.0, 4230.0], [66.1, 4230.0], [66.2, 4230.0], [66.3, 4230.0], [66.4, 4230.0], [66.5, 4230.0], [66.6, 4230.0], [66.7, 4230.0], [66.8, 4230.0], [66.9, 4230.0], [67.0, 4244.0], [67.1, 4244.0], [67.2, 4244.0], [67.3, 4244.0], [67.4, 4244.0], [67.5, 4244.0], [67.6, 4244.0], [67.7, 4244.0], [67.8, 4244.0], [67.9, 4244.0], [68.0, 4252.0], [68.1, 4252.0], [68.2, 4252.0], [68.3, 4252.0], [68.4, 4252.0], [68.5, 4252.0], [68.6, 4252.0], [68.7, 4252.0], [68.8, 4252.0], [68.9, 4252.0], [69.0, 4289.0], [69.1, 4289.0], [69.2, 4289.0], [69.3, 4289.0], [69.4, 4289.0], [69.5, 4289.0], [69.6, 4289.0], [69.7, 4289.0], [69.8, 4289.0], [69.9, 4289.0], [70.0, 4362.0], [70.1, 4362.0], [70.2, 4362.0], [70.3, 4362.0], [70.4, 4362.0], [70.5, 4362.0], [70.6, 4362.0], [70.7, 4362.0], [70.8, 4362.0], [70.9, 4362.0], [71.0, 4399.0], [71.1, 4399.0], [71.2, 4399.0], [71.3, 4399.0], [71.4, 4399.0], [71.5, 4399.0], [71.6, 4399.0], [71.7, 4399.0], [71.8, 4399.0], [71.9, 4399.0], [72.0, 4408.0], [72.1, 4408.0], [72.2, 4408.0], [72.3, 4408.0], [72.4, 4408.0], [72.5, 4408.0], [72.6, 4408.0], [72.7, 4408.0], [72.8, 4408.0], [72.9, 4408.0], [73.0, 4424.0], [73.1, 4424.0], [73.2, 4424.0], [73.3, 4424.0], [73.4, 4424.0], [73.5, 4424.0], [73.6, 4424.0], [73.7, 4424.0], [73.8, 4424.0], [73.9, 4424.0], [74.0, 4429.0], [74.1, 4429.0], [74.2, 4429.0], [74.3, 4429.0], [74.4, 4429.0], [74.5, 4429.0], [74.6, 4429.0], [74.7, 4429.0], [74.8, 4429.0], [74.9, 4429.0], [75.0, 4450.0], [75.1, 4450.0], [75.2, 4450.0], [75.3, 4450.0], [75.4, 4450.0], [75.5, 4450.0], [75.6, 4450.0], [75.7, 4450.0], [75.8, 4450.0], [75.9, 4450.0], [76.0, 4495.0], [76.1, 4495.0], [76.2, 4495.0], [76.3, 4495.0], [76.4, 4495.0], [76.5, 4495.0], [76.6, 4495.0], [76.7, 4495.0], [76.8, 4495.0], [76.9, 4495.0], [77.0, 4510.0], [77.1, 4510.0], [77.2, 4510.0], [77.3, 4510.0], [77.4, 4510.0], [77.5, 4510.0], [77.6, 4510.0], [77.7, 4510.0], [77.8, 4510.0], [77.9, 4510.0], [78.0, 4594.0], [78.1, 4594.0], [78.2, 4594.0], [78.3, 4594.0], [78.4, 4594.0], [78.5, 4594.0], [78.6, 4594.0], [78.7, 4594.0], [78.8, 4594.0], [78.9, 4594.0], [79.0, 4660.0], [79.1, 4660.0], [79.2, 4660.0], [79.3, 4660.0], [79.4, 4660.0], [79.5, 4660.0], [79.6, 4660.0], [79.7, 4660.0], [79.8, 4660.0], [79.9, 4660.0], [80.0, 4814.0], [80.1, 4814.0], [80.2, 4814.0], [80.3, 4814.0], [80.4, 4814.0], [80.5, 4814.0], [80.6, 4814.0], [80.7, 4814.0], [80.8, 4814.0], [80.9, 4814.0], [81.0, 4854.0], [81.1, 4854.0], [81.2, 4854.0], [81.3, 4854.0], [81.4, 4854.0], [81.5, 4854.0], [81.6, 4854.0], [81.7, 4854.0], [81.8, 4854.0], [81.9, 4854.0], [82.0, 4918.0], [82.1, 4918.0], [82.2, 4918.0], [82.3, 4918.0], [82.4, 4918.0], [82.5, 4918.0], [82.6, 4918.0], [82.7, 4918.0], [82.8, 4918.0], [82.9, 4918.0], [83.0, 5435.0], [83.1, 5435.0], [83.2, 5435.0], [83.3, 5435.0], [83.4, 5435.0], [83.5, 5435.0], [83.6, 5435.0], [83.7, 5435.0], [83.8, 5435.0], [83.9, 5435.0], [84.0, 5476.0], [84.1, 5476.0], [84.2, 5476.0], [84.3, 5476.0], [84.4, 5476.0], [84.5, 5476.0], [84.6, 5476.0], [84.7, 5476.0], [84.8, 5476.0], [84.9, 5476.0], [85.0, 5555.0], [85.1, 5555.0], [85.2, 5555.0], [85.3, 5555.0], [85.4, 5555.0], [85.5, 5555.0], [85.6, 5555.0], [85.7, 5555.0], [85.8, 5555.0], [85.9, 5555.0], [86.0, 5581.0], [86.1, 5581.0], [86.2, 5581.0], [86.3, 5581.0], [86.4, 5581.0], [86.5, 5581.0], [86.6, 5581.0], [86.7, 5581.0], [86.8, 5581.0], [86.9, 5581.0], [87.0, 5600.0], [87.1, 5600.0], [87.2, 5600.0], [87.3, 5600.0], [87.4, 5600.0], [87.5, 5600.0], [87.6, 5600.0], [87.7, 5600.0], [87.8, 5600.0], [87.9, 5600.0], [88.0, 5977.0], [88.1, 5977.0], [88.2, 5977.0], [88.3, 5977.0], [88.4, 5977.0], [88.5, 5977.0], [88.6, 5977.0], [88.7, 5977.0], [88.8, 5977.0], [88.9, 5977.0], [89.0, 6114.0], [89.1, 6114.0], [89.2, 6114.0], [89.3, 6114.0], [89.4, 6114.0], [89.5, 6114.0], [89.6, 6114.0], [89.7, 6114.0], [89.8, 6114.0], [89.9, 6114.0], [90.0, 6329.0], [90.1, 6329.0], [90.2, 6329.0], [90.3, 6329.0], [90.4, 6329.0], [90.5, 6329.0], [90.6, 6329.0], [90.7, 6329.0], [90.8, 6329.0], [90.9, 6329.0], [91.0, 6395.0], [91.1, 6395.0], [91.2, 6395.0], [91.3, 6395.0], [91.4, 6395.0], [91.5, 6395.0], [91.6, 6395.0], [91.7, 6395.0], [91.8, 6395.0], [91.9, 6395.0], [92.0, 6463.0], [92.1, 6463.0], [92.2, 6463.0], [92.3, 6463.0], [92.4, 6463.0], [92.5, 6463.0], [92.6, 6463.0], [92.7, 6463.0], [92.8, 6463.0], [92.9, 6463.0], [93.0, 6556.0], [93.1, 6556.0], [93.2, 6556.0], [93.3, 6556.0], [93.4, 6556.0], [93.5, 6556.0], [93.6, 6556.0], [93.7, 6556.0], [93.8, 6556.0], [93.9, 6556.0], [94.0, 6657.0], [94.1, 6657.0], [94.2, 6657.0], [94.3, 6657.0], [94.4, 6657.0], [94.5, 6657.0], [94.6, 6657.0], [94.7, 6657.0], [94.8, 6657.0], [94.9, 6657.0], [95.0, 6722.0], [95.1, 6722.0], [95.2, 6722.0], [95.3, 6722.0], [95.4, 6722.0], [95.5, 6722.0], [95.6, 6722.0], [95.7, 6722.0], [95.8, 6722.0], [95.9, 6722.0], [96.0, 7374.0], [96.1, 7374.0], [96.2, 7374.0], [96.3, 7374.0], [96.4, 7374.0], [96.5, 7374.0], [96.6, 7374.0], [96.7, 7374.0], [96.8, 7374.0], [96.9, 7374.0], [97.0, 7757.0], [97.1, 7757.0], [97.2, 7757.0], [97.3, 7757.0], [97.4, 7757.0], [97.5, 7757.0], [97.6, 7757.0], [97.7, 7757.0], [97.8, 7757.0], [97.9, 7757.0], [98.0, 7794.0], [98.1, 7794.0], [98.2, 7794.0], [98.3, 7794.0], [98.4, 7794.0], [98.5, 7794.0], [98.6, 7794.0], [98.7, 7794.0], [98.8, 7794.0], [98.9, 7794.0], [99.0, 8740.0], [99.1, 8740.0], [99.2, 8740.0], [99.3, 8740.0], [99.4, 8740.0], [99.5, 8740.0], [99.6, 8740.0], [99.7, 8740.0], [99.8, 8740.0], [99.9, 8740.0]], "isOverall": false, "label": "Compare Item", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 1900.0, "maxY": 13.0, "series": [{"data": [[8500.0, 1.0], [9400.0, 1.0], [1900.0, 4.0], [2000.0, 2.0], [2100.0, 3.0], [2300.0, 3.0], [2200.0, 2.0], [2400.0, 3.0], [2500.0, 3.0], [2600.0, 3.0], [2700.0, 2.0], [2800.0, 4.0], [2900.0, 3.0], [3000.0, 3.0], [3100.0, 4.0], [3300.0, 4.0], [3400.0, 2.0], [3500.0, 3.0], [3700.0, 6.0], [3600.0, 4.0], [3800.0, 1.0], [3900.0, 1.0], [4000.0, 5.0], [4100.0, 2.0], [4200.0, 2.0], [4300.0, 1.0], [4400.0, 3.0], [4600.0, 1.0], [4500.0, 1.0], [4800.0, 2.0], [4700.0, 2.0], [5000.0, 3.0], [4900.0, 2.0], [5100.0, 1.0], [5500.0, 1.0], [5700.0, 3.0], [5800.0, 1.0], [6300.0, 1.0], [6200.0, 1.0], [6400.0, 1.0], [6600.0, 1.0], [6800.0, 1.0], [7400.0, 1.0], [7500.0, 1.0], [7700.0, 1.0]], "isOverall": false, "label": "Category Drill down", "isController": false}, {"data": [[4300.0, 3.0], [4100.0, 2.0], [4200.0, 1.0], [4500.0, 1.0], [4600.0, 2.0], [4400.0, 1.0], [4800.0, 2.0], [4900.0, 3.0], [5100.0, 1.0], [5000.0, 3.0], [5200.0, 2.0], [5300.0, 1.0], [5500.0, 4.0], [5800.0, 1.0], [6000.0, 1.0], [6100.0, 1.0], [6300.0, 3.0], [6200.0, 1.0], [6500.0, 2.0], [6400.0, 5.0], [6600.0, 1.0], [6700.0, 1.0], [6900.0, 1.0], [7000.0, 1.0], [7100.0, 1.0], [7300.0, 4.0], [7200.0, 2.0], [7400.0, 3.0], [7600.0, 1.0], [7800.0, 5.0], [7700.0, 2.0], [8100.0, 2.0], [8000.0, 2.0], [8200.0, 3.0], [8400.0, 4.0], [8600.0, 3.0], [9000.0, 3.0], [9100.0, 4.0], [8900.0, 2.0], [8800.0, 2.0], [9400.0, 1.0], [9900.0, 2.0], [10100.0, 2.0], [10800.0, 1.0], [11500.0, 1.0], [12200.0, 1.0], [13000.0, 1.0], [13200.0, 1.0], [13500.0, 1.0], [14700.0, 1.0], [15600.0, 1.0]], "isOverall": false, "label": "Item Details", "isController": false}, {"data": [[2600.0, 1.0], [2700.0, 1.0], [2900.0, 1.0], [3000.0, 2.0], [3100.0, 4.0], [3300.0, 1.0], [3200.0, 2.0], [3400.0, 2.0], [3500.0, 1.0], [3600.0, 2.0], [3700.0, 1.0], [3800.0, 3.0], [3900.0, 2.0], [4000.0, 4.0], [4300.0, 3.0], [4100.0, 1.0], [4200.0, 3.0], [4500.0, 3.0], [4600.0, 3.0], [4400.0, 2.0], [4800.0, 8.0], [5100.0, 5.0], [5000.0, 1.0], [5200.0, 3.0], [5400.0, 2.0], [5600.0, 2.0], [5700.0, 3.0], [5800.0, 1.0], [6100.0, 3.0], [5900.0, 3.0], [6200.0, 1.0], [6500.0, 1.0], [6400.0, 2.0], [6700.0, 1.0], [6900.0, 2.0], [7000.0, 1.0], [7200.0, 3.0], [7300.0, 1.0], [7400.0, 1.0], [7500.0, 2.0], [7600.0, 1.0], [7800.0, 1.0], [7700.0, 1.0], [8100.0, 1.0], [8500.0, 1.0], [8800.0, 2.0], [9500.0, 1.0], [10200.0, 1.0], [10300.0, 2.0], [11300.0, 1.0]], "isOverall": false, "label": "View Items", "isController": false}, {"data": [[8700.0, 1.0], [2100.0, 1.0], [2200.0, 13.0], [2300.0, 4.0], [2400.0, 7.0], [2500.0, 2.0], [2600.0, 6.0], [2800.0, 4.0], [2700.0, 4.0], [2900.0, 4.0], [3100.0, 3.0], [3200.0, 2.0], [3300.0, 1.0], [3400.0, 1.0], [3500.0, 4.0], [3600.0, 2.0], [3700.0, 2.0], [3800.0, 1.0], [4000.0, 2.0], [4200.0, 5.0], [4300.0, 2.0], [4100.0, 2.0], [4400.0, 5.0], [4500.0, 2.0], [4600.0, 1.0], [4800.0, 2.0], [4900.0, 1.0], [5500.0, 2.0], [5400.0, 2.0], [5600.0, 1.0], [5900.0, 1.0], [6100.0, 1.0], [6300.0, 2.0], [6600.0, 1.0], [6400.0, 1.0], [6500.0, 1.0], [6700.0, 1.0], [7300.0, 1.0], [7700.0, 2.0]], "isOverall": false, "label": "Compare Item", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 15600.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 400.0, "minX": 2.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 400.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 400.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 72.85249999999992, "minX": 1.57312218E12, "maxY": 72.85249999999992, "series": [{"data": [[1.57312218E12, 72.85249999999992]], "isOverall": false, "label": "User_100-10", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57312218E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1912.0, "minX": 1.0, "maxY": 15645.0, "series": [{"data": [[35.0, 2326.0], [37.0, 2376.5], [39.0, 3554.0], [40.0, 3075.3333333333335], [43.0, 2459.25], [44.0, 4079.0], [45.0, 3351.0], [46.0, 1912.0], [50.0, 2925.0], [51.0, 3468.0], [53.0, 2399.0], [54.0, 2552.0], [56.0, 1934.0], [57.0, 3753.0], [58.0, 5027.0], [59.0, 2948.0], [61.0, 5581.0], [62.0, 3632.0], [65.0, 2363.0], [66.0, 3560.0], [67.0, 3102.0], [68.0, 3065.0], [71.0, 4630.0], [73.0, 3337.0], [74.0, 3089.0], [76.0, 4575.0], [78.0, 3656.3333333333335], [79.0, 3168.0], [81.0, 2952.0], [83.0, 3882.0], [84.0, 2400.0], [86.0, 2665.0], [87.0, 4131.0], [89.0, 3526.0], [90.0, 2263.0], [91.0, 2532.0], [92.0, 2559.0], [95.0, 9428.0], [96.0, 4726.0], [97.0, 5744.333333333333], [98.0, 5132.0], [99.0, 4909.4], [100.0, 4570.575757575758], [24.0, 2398.0], [29.0, 2627.0]], "isOverall": false, "label": "Category Drill down", "isController": false}, {"data": [[78.69000000000001, 3913.399999999999]], "isOverall": false, "label": "Category Drill down-Aggregated", "isController": false}, {"data": [[5.0, 11530.0], [12.0, 8721.5], [14.0, 6912.0], [15.0, 13539.0], [17.0, 4899.0], [18.0, 15645.0], [24.0, 6368.0], [27.0, 10849.0], [30.0, 4253.0], [31.0, 11169.666666666666], [33.0, 7582.0], [32.0, 10192.0], [39.0, 5590.0], [38.0, 8495.0], [41.0, 8646.0], [40.0, 8159.0], [43.0, 6895.0], [45.0, 4111.0], [44.0, 4891.0], [46.0, 13039.0], [49.0, 4917.0], [50.0, 9406.0], [52.0, 7190.5], [55.0, 4108.0], [56.0, 6323.0], [67.0, 8934.0], [65.0, 11317.5], [64.0, 5818.0], [71.0, 6524.5], [70.0, 8098.0], [69.0, 7365.0], [73.0, 7921.666666666667], [72.0, 6175.0], [78.0, 6476.0], [77.0, 8851.0], [76.0, 7812.5], [83.0, 8638.0], [81.0, 7123.0], [80.0, 8479.0], [87.0, 8233.0], [84.0, 7856.166666666667], [91.0, 7494.666666666666], [88.0, 6732.5], [95.0, 6729.25], [99.0, 6961.625], [98.0, 6753.0], [97.0, 6845.0], [96.0, 4640.0], [100.0, 4880.75]], "isOverall": false, "label": "Item Details", "isController": false}, {"data": [[70.43000000000005, 7497.410000000002]], "isOverall": false, "label": "Item Details-Aggregated", "isController": false}, {"data": [[52.0, 10340.0], [60.0, 3526.0], [64.0, 2697.0], [67.0, 5922.0], [65.0, 8617.5], [70.0, 3210.0], [72.0, 2734.0], [74.0, 3108.0], [75.0, 3726.0], [78.0, 9547.0], [76.0, 5111.0], [80.0, 4006.0], [82.0, 3519.5], [83.0, 5623.0], [87.0, 7601.0], [86.0, 7514.0], [84.0, 6946.2], [88.0, 6313.666666666667], [90.0, 4768.5], [89.0, 6428.0], [92.0, 6070.333333333333], [95.0, 6407.333333333333], [94.0, 6555.0], [93.0, 8039.5], [96.0, 5282.5], [97.0, 4995.8], [98.0, 5895.599999999999], [99.0, 5442.1], [100.0, 4705.666666666666]], "isOverall": false, "label": "View Items", "isController": false}, {"data": [[91.78999999999998, 5418.580000000001]], "isOverall": false, "label": "View Items-Aggregated", "isController": false}, {"data": [[2.0, 2651.0], [3.0, 2322.0], [4.0, 2247.0], [5.0, 2294.0], [6.0, 2275.0], [7.0, 2232.0], [8.0, 6556.0], [9.0, 4107.0], [10.0, 3522.0], [11.0, 6114.0], [12.0, 3713.0], [13.0, 2556.0], [14.0, 2190.0], [15.0, 2684.0], [16.0, 2297.0], [17.0, 2441.0], [18.0, 4399.0], [19.0, 2258.0], [20.0, 2444.0], [21.0, 2710.0], [22.0, 2739.0], [23.0, 3583.0], [24.0, 2304.0], [25.0, 2456.0], [26.0, 2436.0], [27.0, 3306.0], [28.0, 4510.0], [29.0, 2270.0], [30.0, 2437.0], [31.0, 2259.0], [33.0, 3862.0], [32.0, 2669.0], [35.0, 3116.0], [34.0, 3664.0], [37.0, 2447.0], [36.0, 2363.0], [39.0, 8740.0], [38.0, 4424.0], [41.0, 2259.0], [40.0, 4660.0], [43.0, 4101.0], [42.0, 6329.0], [45.0, 4289.0], [44.0, 7757.0], [47.0, 2291.0], [46.0, 2247.0], [49.0, 5600.0], [48.0, 2430.0], [51.0, 2882.0], [50.0, 2698.0], [53.0, 2336.0], [52.0, 2263.0], [55.0, 2687.0], [54.0, 3299.0], [57.0, 2599.0], [56.0, 5977.0], [59.0, 4230.0], [58.0, 2261.0], [61.0, 3291.0], [60.0, 2684.0], [63.0, 5476.0], [62.0, 2994.0], [67.0, 4854.0], [66.0, 2915.0], [65.0, 5435.0], [64.0, 3185.0], [71.0, 4362.0], [70.0, 7374.0], [69.0, 2703.0], [68.0, 4814.0], [75.0, 5581.0], [74.0, 6395.0], [73.0, 4450.0], [72.0, 4918.0], [79.0, 4252.0], [78.0, 7794.0], [77.0, 4429.0], [76.0, 4594.0], [83.0, 4244.0], [82.0, 5555.0], [81.0, 4495.0], [80.0, 6722.0], [87.0, 3799.0], [86.0, 4019.0], [85.0, 4014.0], [84.0, 3572.0], [91.0, 3102.0], [90.0, 4408.0], [89.0, 3699.0], [88.0, 6463.0], [95.0, 6657.0], [94.0, 2964.0], [93.0, 2993.0], [92.0, 2825.0], [99.0, 2733.0], [98.0, 2823.0], [97.0, 3585.0], [96.0, 3433.0], [100.0, 2814.0], [1.0, 4225.0]], "isOverall": false, "label": "Compare Item", "isController": false}, {"data": [[50.5, 3764.3600000000006]], "isOverall": false, "label": "Compare Item-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 1523.3333333333333, "minX": 1.57312218E12, "maxY": 994008.3333333334, "series": [{"data": [[1.57312218E12, 994008.3333333334]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.57312218E12, 1523.3333333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57312218E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 3764.3600000000006, "minX": 1.57312218E12, "maxY": 7497.410000000002, "series": [{"data": [[1.57312218E12, 3913.399999999999]], "isOverall": false, "label": "Category Drill down", "isController": false}, {"data": [[1.57312218E12, 7497.410000000002]], "isOverall": false, "label": "Item Details", "isController": false}, {"data": [[1.57312218E12, 5418.580000000001]], "isOverall": false, "label": "View Items", "isController": false}, {"data": [[1.57312218E12, 3764.3600000000006]], "isOverall": false, "label": "Compare Item", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57312218E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1489.7000000000005, "minX": 1.57312218E12, "maxY": 2634.4, "series": [{"data": [[1.57312218E12, 1489.7000000000005]], "isOverall": false, "label": "Category Drill down", "isController": false}, {"data": [[1.57312218E12, 2634.4]], "isOverall": false, "label": "Item Details", "isController": false}, {"data": [[1.57312218E12, 2398.19]], "isOverall": false, "label": "View Items", "isController": false}, {"data": [[1.57312218E12, 1598.789999999999]], "isOverall": false, "label": "Compare Item", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57312218E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 203.40999999999988, "minX": 1.57312218E12, "maxY": 225.86999999999998, "series": [{"data": [[1.57312218E12, 213.64000000000004]], "isOverall": false, "label": "Category Drill down", "isController": false}, {"data": [[1.57312218E12, 203.40999999999988]], "isOverall": false, "label": "Item Details", "isController": false}, {"data": [[1.57312218E12, 225.86999999999998]], "isOverall": false, "label": "View Items", "isController": false}, {"data": [[1.57312218E12, 213.47]], "isOverall": false, "label": "Compare Item", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57312218E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1912.0, "minX": 1.57312218E12, "maxY": 15645.0, "series": [{"data": [[1.57312218E12, 15645.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.57312218E12, 1912.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.57312218E12, 8480.8]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.57312218E12, 13206.310000000001]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.57312218E12, 9178.75]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57312218E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 2294.0, "minX": 1.0, "maxY": 6946.0, "series": [{"data": [[9.0, 5150.5], [10.0, 4684.0], [11.0, 6946.0], [12.0, 3441.0], [3.0, 2294.0], [13.0, 5095.0], [14.0, 3147.0], [15.0, 4991.5], [1.0, 2651.0], [17.0, 5875.0], [18.0, 4462.5], [5.0, 2522.0], [20.0, 5589.0], [21.0, 4441.5], [22.0, 6605.5], [6.0, 3814.5], [7.0, 3041.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 22.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 680.0, "minX": 1.0, "maxY": 4396.0, "series": [{"data": [[9.0, 1862.0], [10.0, 2194.0], [11.0, 4396.0], [12.0, 1350.0], [3.0, 834.0], [13.0, 1935.0], [14.0, 1107.0], [15.0, 1863.5], [1.0, 877.0], [17.0, 1695.0], [18.0, 1854.0], [5.0, 680.0], [20.0, 2232.0], [21.0, 1830.0], [22.0, 2142.0], [6.0, 820.0], [7.0, 844.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 22.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 6.666666666666667, "minX": 1.57312218E12, "maxY": 6.666666666666667, "series": [{"data": [[1.57312218E12, 6.666666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57312218E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 6.666666666666667, "minX": 1.57312218E12, "maxY": 6.666666666666667, "series": [{"data": [[1.57312218E12, 6.666666666666667]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57312218E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.6666666666666667, "minX": 1.57312218E12, "maxY": 1.6666666666666667, "series": [{"data": [[1.57312218E12, 1.6666666666666667]], "isOverall": false, "label": "Compare Item-success", "isController": false}, {"data": [[1.57312218E12, 1.6666666666666667]], "isOverall": false, "label": "Category Drill down-success", "isController": false}, {"data": [[1.57312218E12, 1.6666666666666667]], "isOverall": false, "label": "Item Details-success", "isController": false}, {"data": [[1.57312218E12, 1.6666666666666667]], "isOverall": false, "label": "View Items-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57312218E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 6.666666666666667, "minX": 1.57312218E12, "maxY": 6.666666666666667, "series": [{"data": [[1.57312218E12, 6.666666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57312218E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

