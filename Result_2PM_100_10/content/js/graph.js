/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1861.0, "minX": 0.0, "maxY": 9284.0, "series": [{"data": [[0.0, 1861.0], [0.1, 1861.0], [0.2, 1861.0], [0.3, 1861.0], [0.4, 1861.0], [0.5, 1861.0], [0.6, 1861.0], [0.7, 1861.0], [0.8, 1861.0], [0.9, 1861.0], [1.0, 1872.0], [1.1, 1872.0], [1.2, 1872.0], [1.3, 1872.0], [1.4, 1872.0], [1.5, 1872.0], [1.6, 1872.0], [1.7, 1872.0], [1.8, 1872.0], [1.9, 1872.0], [2.0, 1900.0], [2.1, 1900.0], [2.2, 1900.0], [2.3, 1900.0], [2.4, 1900.0], [2.5, 1900.0], [2.6, 1900.0], [2.7, 1900.0], [2.8, 1900.0], [2.9, 1900.0], [3.0, 1901.0], [3.1, 1901.0], [3.2, 1901.0], [3.3, 1901.0], [3.4, 1901.0], [3.5, 1901.0], [3.6, 1901.0], [3.7, 1901.0], [3.8, 1901.0], [3.9, 1901.0], [4.0, 1923.0], [4.1, 1923.0], [4.2, 1923.0], [4.3, 1923.0], [4.4, 1923.0], [4.5, 1923.0], [4.6, 1923.0], [4.7, 1923.0], [4.8, 1923.0], [4.9, 1923.0], [5.0, 1924.0], [5.1, 1924.0], [5.2, 1924.0], [5.3, 1924.0], [5.4, 1924.0], [5.5, 1924.0], [5.6, 1924.0], [5.7, 1924.0], [5.8, 1924.0], [5.9, 1924.0], [6.0, 1925.0], [6.1, 1925.0], [6.2, 1925.0], [6.3, 1925.0], [6.4, 1925.0], [6.5, 1925.0], [6.6, 1925.0], [6.7, 1925.0], [6.8, 1925.0], [6.9, 1925.0], [7.0, 1926.0], [7.1, 1926.0], [7.2, 1926.0], [7.3, 1926.0], [7.4, 1926.0], [7.5, 1926.0], [7.6, 1926.0], [7.7, 1926.0], [7.8, 1926.0], [7.9, 1926.0], [8.0, 1927.0], [8.1, 1927.0], [8.2, 1927.0], [8.3, 1927.0], [8.4, 1927.0], [8.5, 1927.0], [8.6, 1927.0], [8.7, 1927.0], [8.8, 1927.0], [8.9, 1927.0], [9.0, 1929.0], [9.1, 1929.0], [9.2, 1929.0], [9.3, 1929.0], [9.4, 1929.0], [9.5, 1929.0], [9.6, 1929.0], [9.7, 1929.0], [9.8, 1929.0], [9.9, 1929.0], [10.0, 1935.0], [10.1, 1935.0], [10.2, 1935.0], [10.3, 1935.0], [10.4, 1935.0], [10.5, 1935.0], [10.6, 1935.0], [10.7, 1935.0], [10.8, 1935.0], [10.9, 1935.0], [11.0, 1943.0], [11.1, 1943.0], [11.2, 1943.0], [11.3, 1943.0], [11.4, 1943.0], [11.5, 1943.0], [11.6, 1943.0], [11.7, 1943.0], [11.8, 1943.0], [11.9, 1943.0], [12.0, 1943.0], [12.1, 1943.0], [12.2, 1943.0], [12.3, 1943.0], [12.4, 1943.0], [12.5, 1943.0], [12.6, 1943.0], [12.7, 1943.0], [12.8, 1943.0], [12.9, 1943.0], [13.0, 1947.0], [13.1, 1947.0], [13.2, 1947.0], [13.3, 1947.0], [13.4, 1947.0], [13.5, 1947.0], [13.6, 1947.0], [13.7, 1947.0], [13.8, 1947.0], [13.9, 1947.0], [14.0, 1950.0], [14.1, 1950.0], [14.2, 1950.0], [14.3, 1950.0], [14.4, 1950.0], [14.5, 1950.0], [14.6, 1950.0], [14.7, 1950.0], [14.8, 1950.0], [14.9, 1950.0], [15.0, 1959.0], [15.1, 1959.0], [15.2, 1959.0], [15.3, 1959.0], [15.4, 1959.0], [15.5, 1959.0], [15.6, 1959.0], [15.7, 1959.0], [15.8, 1959.0], [15.9, 1959.0], [16.0, 1962.0], [16.1, 1962.0], [16.2, 1962.0], [16.3, 1962.0], [16.4, 1962.0], [16.5, 1962.0], [16.6, 1962.0], [16.7, 1962.0], [16.8, 1962.0], [16.9, 1962.0], [17.0, 1967.0], [17.1, 1967.0], [17.2, 1967.0], [17.3, 1967.0], [17.4, 1967.0], [17.5, 1967.0], [17.6, 1967.0], [17.7, 1967.0], [17.8, 1967.0], [17.9, 1967.0], [18.0, 1968.0], [18.1, 1968.0], [18.2, 1968.0], [18.3, 1968.0], [18.4, 1968.0], [18.5, 1968.0], [18.6, 1968.0], [18.7, 1968.0], [18.8, 1968.0], [18.9, 1968.0], [19.0, 1989.0], [19.1, 1989.0], [19.2, 1989.0], [19.3, 1989.0], [19.4, 1989.0], [19.5, 1989.0], [19.6, 1989.0], [19.7, 1989.0], [19.8, 1989.0], [19.9, 1989.0], [20.0, 2020.0], [20.1, 2020.0], [20.2, 2020.0], [20.3, 2020.0], [20.4, 2020.0], [20.5, 2020.0], [20.6, 2020.0], [20.7, 2020.0], [20.8, 2020.0], [20.9, 2020.0], [21.0, 2026.0], [21.1, 2026.0], [21.2, 2026.0], [21.3, 2026.0], [21.4, 2026.0], [21.5, 2026.0], [21.6, 2026.0], [21.7, 2026.0], [21.8, 2026.0], [21.9, 2026.0], [22.0, 2028.0], [22.1, 2028.0], [22.2, 2028.0], [22.3, 2028.0], [22.4, 2028.0], [22.5, 2028.0], [22.6, 2028.0], [22.7, 2028.0], [22.8, 2028.0], [22.9, 2028.0], [23.0, 2031.0], [23.1, 2031.0], [23.2, 2031.0], [23.3, 2031.0], [23.4, 2031.0], [23.5, 2031.0], [23.6, 2031.0], [23.7, 2031.0], [23.8, 2031.0], [23.9, 2031.0], [24.0, 2067.0], [24.1, 2067.0], [24.2, 2067.0], [24.3, 2067.0], [24.4, 2067.0], [24.5, 2067.0], [24.6, 2067.0], [24.7, 2067.0], [24.8, 2067.0], [24.9, 2067.0], [25.0, 2089.0], [25.1, 2089.0], [25.2, 2089.0], [25.3, 2089.0], [25.4, 2089.0], [25.5, 2089.0], [25.6, 2089.0], [25.7, 2089.0], [25.8, 2089.0], [25.9, 2089.0], [26.0, 2093.0], [26.1, 2093.0], [26.2, 2093.0], [26.3, 2093.0], [26.4, 2093.0], [26.5, 2093.0], [26.6, 2093.0], [26.7, 2093.0], [26.8, 2093.0], [26.9, 2093.0], [27.0, 2103.0], [27.1, 2103.0], [27.2, 2103.0], [27.3, 2103.0], [27.4, 2103.0], [27.5, 2103.0], [27.6, 2103.0], [27.7, 2103.0], [27.8, 2103.0], [27.9, 2103.0], [28.0, 2109.0], [28.1, 2109.0], [28.2, 2109.0], [28.3, 2109.0], [28.4, 2109.0], [28.5, 2109.0], [28.6, 2109.0], [28.7, 2109.0], [28.8, 2109.0], [28.9, 2109.0], [29.0, 2132.0], [29.1, 2132.0], [29.2, 2132.0], [29.3, 2132.0], [29.4, 2132.0], [29.5, 2132.0], [29.6, 2132.0], [29.7, 2132.0], [29.8, 2132.0], [29.9, 2132.0], [30.0, 2170.0], [30.1, 2170.0], [30.2, 2170.0], [30.3, 2170.0], [30.4, 2170.0], [30.5, 2170.0], [30.6, 2170.0], [30.7, 2170.0], [30.8, 2170.0], [30.9, 2170.0], [31.0, 2206.0], [31.1, 2206.0], [31.2, 2206.0], [31.3, 2206.0], [31.4, 2206.0], [31.5, 2206.0], [31.6, 2206.0], [31.7, 2206.0], [31.8, 2206.0], [31.9, 2206.0], [32.0, 2207.0], [32.1, 2207.0], [32.2, 2207.0], [32.3, 2207.0], [32.4, 2207.0], [32.5, 2207.0], [32.6, 2207.0], [32.7, 2207.0], [32.8, 2207.0], [32.9, 2207.0], [33.0, 2214.0], [33.1, 2214.0], [33.2, 2214.0], [33.3, 2214.0], [33.4, 2214.0], [33.5, 2214.0], [33.6, 2214.0], [33.7, 2214.0], [33.8, 2214.0], [33.9, 2214.0], [34.0, 2239.0], [34.1, 2239.0], [34.2, 2239.0], [34.3, 2239.0], [34.4, 2239.0], [34.5, 2239.0], [34.6, 2239.0], [34.7, 2239.0], [34.8, 2239.0], [34.9, 2239.0], [35.0, 2267.0], [35.1, 2267.0], [35.2, 2267.0], [35.3, 2267.0], [35.4, 2267.0], [35.5, 2267.0], [35.6, 2267.0], [35.7, 2267.0], [35.8, 2267.0], [35.9, 2267.0], [36.0, 2294.0], [36.1, 2294.0], [36.2, 2294.0], [36.3, 2294.0], [36.4, 2294.0], [36.5, 2294.0], [36.6, 2294.0], [36.7, 2294.0], [36.8, 2294.0], [36.9, 2294.0], [37.0, 2312.0], [37.1, 2312.0], [37.2, 2312.0], [37.3, 2312.0], [37.4, 2312.0], [37.5, 2312.0], [37.6, 2312.0], [37.7, 2312.0], [37.8, 2312.0], [37.9, 2312.0], [38.0, 2332.0], [38.1, 2332.0], [38.2, 2332.0], [38.3, 2332.0], [38.4, 2332.0], [38.5, 2332.0], [38.6, 2332.0], [38.7, 2332.0], [38.8, 2332.0], [38.9, 2332.0], [39.0, 2334.0], [39.1, 2334.0], [39.2, 2334.0], [39.3, 2334.0], [39.4, 2334.0], [39.5, 2334.0], [39.6, 2334.0], [39.7, 2334.0], [39.8, 2334.0], [39.9, 2334.0], [40.0, 2343.0], [40.1, 2343.0], [40.2, 2343.0], [40.3, 2343.0], [40.4, 2343.0], [40.5, 2343.0], [40.6, 2343.0], [40.7, 2343.0], [40.8, 2343.0], [40.9, 2343.0], [41.0, 2362.0], [41.1, 2362.0], [41.2, 2362.0], [41.3, 2362.0], [41.4, 2362.0], [41.5, 2362.0], [41.6, 2362.0], [41.7, 2362.0], [41.8, 2362.0], [41.9, 2362.0], [42.0, 2392.0], [42.1, 2392.0], [42.2, 2392.0], [42.3, 2392.0], [42.4, 2392.0], [42.5, 2392.0], [42.6, 2392.0], [42.7, 2392.0], [42.8, 2392.0], [42.9, 2392.0], [43.0, 2414.0], [43.1, 2414.0], [43.2, 2414.0], [43.3, 2414.0], [43.4, 2414.0], [43.5, 2414.0], [43.6, 2414.0], [43.7, 2414.0], [43.8, 2414.0], [43.9, 2414.0], [44.0, 2416.0], [44.1, 2416.0], [44.2, 2416.0], [44.3, 2416.0], [44.4, 2416.0], [44.5, 2416.0], [44.6, 2416.0], [44.7, 2416.0], [44.8, 2416.0], [44.9, 2416.0], [45.0, 2434.0], [45.1, 2434.0], [45.2, 2434.0], [45.3, 2434.0], [45.4, 2434.0], [45.5, 2434.0], [45.6, 2434.0], [45.7, 2434.0], [45.8, 2434.0], [45.9, 2434.0], [46.0, 2470.0], [46.1, 2470.0], [46.2, 2470.0], [46.3, 2470.0], [46.4, 2470.0], [46.5, 2470.0], [46.6, 2470.0], [46.7, 2470.0], [46.8, 2470.0], [46.9, 2470.0], [47.0, 2481.0], [47.1, 2481.0], [47.2, 2481.0], [47.3, 2481.0], [47.4, 2481.0], [47.5, 2481.0], [47.6, 2481.0], [47.7, 2481.0], [47.8, 2481.0], [47.9, 2481.0], [48.0, 2550.0], [48.1, 2550.0], [48.2, 2550.0], [48.3, 2550.0], [48.4, 2550.0], [48.5, 2550.0], [48.6, 2550.0], [48.7, 2550.0], [48.8, 2550.0], [48.9, 2550.0], [49.0, 2555.0], [49.1, 2555.0], [49.2, 2555.0], [49.3, 2555.0], [49.4, 2555.0], [49.5, 2555.0], [49.6, 2555.0], [49.7, 2555.0], [49.8, 2555.0], [49.9, 2555.0], [50.0, 2567.0], [50.1, 2567.0], [50.2, 2567.0], [50.3, 2567.0], [50.4, 2567.0], [50.5, 2567.0], [50.6, 2567.0], [50.7, 2567.0], [50.8, 2567.0], [50.9, 2567.0], [51.0, 2616.0], [51.1, 2616.0], [51.2, 2616.0], [51.3, 2616.0], [51.4, 2616.0], [51.5, 2616.0], [51.6, 2616.0], [51.7, 2616.0], [51.8, 2616.0], [51.9, 2616.0], [52.0, 2627.0], [52.1, 2627.0], [52.2, 2627.0], [52.3, 2627.0], [52.4, 2627.0], [52.5, 2627.0], [52.6, 2627.0], [52.7, 2627.0], [52.8, 2627.0], [52.9, 2627.0], [53.0, 2637.0], [53.1, 2637.0], [53.2, 2637.0], [53.3, 2637.0], [53.4, 2637.0], [53.5, 2637.0], [53.6, 2637.0], [53.7, 2637.0], [53.8, 2637.0], [53.9, 2637.0], [54.0, 2640.0], [54.1, 2640.0], [54.2, 2640.0], [54.3, 2640.0], [54.4, 2640.0], [54.5, 2640.0], [54.6, 2640.0], [54.7, 2640.0], [54.8, 2640.0], [54.9, 2640.0], [55.0, 2649.0], [55.1, 2649.0], [55.2, 2649.0], [55.3, 2649.0], [55.4, 2649.0], [55.5, 2649.0], [55.6, 2649.0], [55.7, 2649.0], [55.8, 2649.0], [55.9, 2649.0], [56.0, 2662.0], [56.1, 2662.0], [56.2, 2662.0], [56.3, 2662.0], [56.4, 2662.0], [56.5, 2662.0], [56.6, 2662.0], [56.7, 2662.0], [56.8, 2662.0], [56.9, 2662.0], [57.0, 2704.0], [57.1, 2704.0], [57.2, 2704.0], [57.3, 2704.0], [57.4, 2704.0], [57.5, 2704.0], [57.6, 2704.0], [57.7, 2704.0], [57.8, 2704.0], [57.9, 2704.0], [58.0, 2715.0], [58.1, 2715.0], [58.2, 2715.0], [58.3, 2715.0], [58.4, 2715.0], [58.5, 2715.0], [58.6, 2715.0], [58.7, 2715.0], [58.8, 2715.0], [58.9, 2715.0], [59.0, 2718.0], [59.1, 2718.0], [59.2, 2718.0], [59.3, 2718.0], [59.4, 2718.0], [59.5, 2718.0], [59.6, 2718.0], [59.7, 2718.0], [59.8, 2718.0], [59.9, 2718.0], [60.0, 2720.0], [60.1, 2720.0], [60.2, 2720.0], [60.3, 2720.0], [60.4, 2720.0], [60.5, 2720.0], [60.6, 2720.0], [60.7, 2720.0], [60.8, 2720.0], [60.9, 2720.0], [61.0, 2738.0], [61.1, 2738.0], [61.2, 2738.0], [61.3, 2738.0], [61.4, 2738.0], [61.5, 2738.0], [61.6, 2738.0], [61.7, 2738.0], [61.8, 2738.0], [61.9, 2738.0], [62.0, 2742.0], [62.1, 2742.0], [62.2, 2742.0], [62.3, 2742.0], [62.4, 2742.0], [62.5, 2742.0], [62.6, 2742.0], [62.7, 2742.0], [62.8, 2742.0], [62.9, 2742.0], [63.0, 2783.0], [63.1, 2783.0], [63.2, 2783.0], [63.3, 2783.0], [63.4, 2783.0], [63.5, 2783.0], [63.6, 2783.0], [63.7, 2783.0], [63.8, 2783.0], [63.9, 2783.0], [64.0, 2831.0], [64.1, 2831.0], [64.2, 2831.0], [64.3, 2831.0], [64.4, 2831.0], [64.5, 2831.0], [64.6, 2831.0], [64.7, 2831.0], [64.8, 2831.0], [64.9, 2831.0], [65.0, 2888.0], [65.1, 2888.0], [65.2, 2888.0], [65.3, 2888.0], [65.4, 2888.0], [65.5, 2888.0], [65.6, 2888.0], [65.7, 2888.0], [65.8, 2888.0], [65.9, 2888.0], [66.0, 2905.0], [66.1, 2905.0], [66.2, 2905.0], [66.3, 2905.0], [66.4, 2905.0], [66.5, 2905.0], [66.6, 2905.0], [66.7, 2905.0], [66.8, 2905.0], [66.9, 2905.0], [67.0, 2920.0], [67.1, 2920.0], [67.2, 2920.0], [67.3, 2920.0], [67.4, 2920.0], [67.5, 2920.0], [67.6, 2920.0], [67.7, 2920.0], [67.8, 2920.0], [67.9, 2920.0], [68.0, 2937.0], [68.1, 2937.0], [68.2, 2937.0], [68.3, 2937.0], [68.4, 2937.0], [68.5, 2937.0], [68.6, 2937.0], [68.7, 2937.0], [68.8, 2937.0], [68.9, 2937.0], [69.0, 2944.0], [69.1, 2944.0], [69.2, 2944.0], [69.3, 2944.0], [69.4, 2944.0], [69.5, 2944.0], [69.6, 2944.0], [69.7, 2944.0], [69.8, 2944.0], [69.9, 2944.0], [70.0, 2955.0], [70.1, 2955.0], [70.2, 2955.0], [70.3, 2955.0], [70.4, 2955.0], [70.5, 2955.0], [70.6, 2955.0], [70.7, 2955.0], [70.8, 2955.0], [70.9, 2955.0], [71.0, 2989.0], [71.1, 2989.0], [71.2, 2989.0], [71.3, 2989.0], [71.4, 2989.0], [71.5, 2989.0], [71.6, 2989.0], [71.7, 2989.0], [71.8, 2989.0], [71.9, 2989.0], [72.0, 3010.0], [72.1, 3010.0], [72.2, 3010.0], [72.3, 3010.0], [72.4, 3010.0], [72.5, 3010.0], [72.6, 3010.0], [72.7, 3010.0], [72.8, 3010.0], [72.9, 3010.0], [73.0, 3021.0], [73.1, 3021.0], [73.2, 3021.0], [73.3, 3021.0], [73.4, 3021.0], [73.5, 3021.0], [73.6, 3021.0], [73.7, 3021.0], [73.8, 3021.0], [73.9, 3021.0], [74.0, 3052.0], [74.1, 3052.0], [74.2, 3052.0], [74.3, 3052.0], [74.4, 3052.0], [74.5, 3052.0], [74.6, 3052.0], [74.7, 3052.0], [74.8, 3052.0], [74.9, 3052.0], [75.0, 3058.0], [75.1, 3058.0], [75.2, 3058.0], [75.3, 3058.0], [75.4, 3058.0], [75.5, 3058.0], [75.6, 3058.0], [75.7, 3058.0], [75.8, 3058.0], [75.9, 3058.0], [76.0, 3107.0], [76.1, 3107.0], [76.2, 3107.0], [76.3, 3107.0], [76.4, 3107.0], [76.5, 3107.0], [76.6, 3107.0], [76.7, 3107.0], [76.8, 3107.0], [76.9, 3107.0], [77.0, 3127.0], [77.1, 3127.0], [77.2, 3127.0], [77.3, 3127.0], [77.4, 3127.0], [77.5, 3127.0], [77.6, 3127.0], [77.7, 3127.0], [77.8, 3127.0], [77.9, 3127.0], [78.0, 3264.0], [78.1, 3264.0], [78.2, 3264.0], [78.3, 3264.0], [78.4, 3264.0], [78.5, 3264.0], [78.6, 3264.0], [78.7, 3264.0], [78.8, 3264.0], [78.9, 3264.0], [79.0, 3290.0], [79.1, 3290.0], [79.2, 3290.0], [79.3, 3290.0], [79.4, 3290.0], [79.5, 3290.0], [79.6, 3290.0], [79.7, 3290.0], [79.8, 3290.0], [79.9, 3290.0], [80.0, 3307.0], [80.1, 3307.0], [80.2, 3307.0], [80.3, 3307.0], [80.4, 3307.0], [80.5, 3307.0], [80.6, 3307.0], [80.7, 3307.0], [80.8, 3307.0], [80.9, 3307.0], [81.0, 3322.0], [81.1, 3322.0], [81.2, 3322.0], [81.3, 3322.0], [81.4, 3322.0], [81.5, 3322.0], [81.6, 3322.0], [81.7, 3322.0], [81.8, 3322.0], [81.9, 3322.0], [82.0, 3375.0], [82.1, 3375.0], [82.2, 3375.0], [82.3, 3375.0], [82.4, 3375.0], [82.5, 3375.0], [82.6, 3375.0], [82.7, 3375.0], [82.8, 3375.0], [82.9, 3375.0], [83.0, 3422.0], [83.1, 3422.0], [83.2, 3422.0], [83.3, 3422.0], [83.4, 3422.0], [83.5, 3422.0], [83.6, 3422.0], [83.7, 3422.0], [83.8, 3422.0], [83.9, 3422.0], [84.0, 3432.0], [84.1, 3432.0], [84.2, 3432.0], [84.3, 3432.0], [84.4, 3432.0], [84.5, 3432.0], [84.6, 3432.0], [84.7, 3432.0], [84.8, 3432.0], [84.9, 3432.0], [85.0, 3527.0], [85.1, 3527.0], [85.2, 3527.0], [85.3, 3527.0], [85.4, 3527.0], [85.5, 3527.0], [85.6, 3527.0], [85.7, 3527.0], [85.8, 3527.0], [85.9, 3527.0], [86.0, 3572.0], [86.1, 3572.0], [86.2, 3572.0], [86.3, 3572.0], [86.4, 3572.0], [86.5, 3572.0], [86.6, 3572.0], [86.7, 3572.0], [86.8, 3572.0], [86.9, 3572.0], [87.0, 3714.0], [87.1, 3714.0], [87.2, 3714.0], [87.3, 3714.0], [87.4, 3714.0], [87.5, 3714.0], [87.6, 3714.0], [87.7, 3714.0], [87.8, 3714.0], [87.9, 3714.0], [88.0, 3826.0], [88.1, 3826.0], [88.2, 3826.0], [88.3, 3826.0], [88.4, 3826.0], [88.5, 3826.0], [88.6, 3826.0], [88.7, 3826.0], [88.8, 3826.0], [88.9, 3826.0], [89.0, 3875.0], [89.1, 3875.0], [89.2, 3875.0], [89.3, 3875.0], [89.4, 3875.0], [89.5, 3875.0], [89.6, 3875.0], [89.7, 3875.0], [89.8, 3875.0], [89.9, 3875.0], [90.0, 3918.0], [90.1, 3918.0], [90.2, 3918.0], [90.3, 3918.0], [90.4, 3918.0], [90.5, 3918.0], [90.6, 3918.0], [90.7, 3918.0], [90.8, 3918.0], [90.9, 3918.0], [91.0, 4068.0], [91.1, 4068.0], [91.2, 4068.0], [91.3, 4068.0], [91.4, 4068.0], [91.5, 4068.0], [91.6, 4068.0], [91.7, 4068.0], [91.8, 4068.0], [91.9, 4068.0], [92.0, 4372.0], [92.1, 4372.0], [92.2, 4372.0], [92.3, 4372.0], [92.4, 4372.0], [92.5, 4372.0], [92.6, 4372.0], [92.7, 4372.0], [92.8, 4372.0], [92.9, 4372.0], [93.0, 4390.0], [93.1, 4390.0], [93.2, 4390.0], [93.3, 4390.0], [93.4, 4390.0], [93.5, 4390.0], [93.6, 4390.0], [93.7, 4390.0], [93.8, 4390.0], [93.9, 4390.0], [94.0, 4397.0], [94.1, 4397.0], [94.2, 4397.0], [94.3, 4397.0], [94.4, 4397.0], [94.5, 4397.0], [94.6, 4397.0], [94.7, 4397.0], [94.8, 4397.0], [94.9, 4397.0], [95.0, 4480.0], [95.1, 4480.0], [95.2, 4480.0], [95.3, 4480.0], [95.4, 4480.0], [95.5, 4480.0], [95.6, 4480.0], [95.7, 4480.0], [95.8, 4480.0], [95.9, 4480.0], [96.0, 4514.0], [96.1, 4514.0], [96.2, 4514.0], [96.3, 4514.0], [96.4, 4514.0], [96.5, 4514.0], [96.6, 4514.0], [96.7, 4514.0], [96.8, 4514.0], [96.9, 4514.0], [97.0, 4573.0], [97.1, 4573.0], [97.2, 4573.0], [97.3, 4573.0], [97.4, 4573.0], [97.5, 4573.0], [97.6, 4573.0], [97.7, 4573.0], [97.8, 4573.0], [97.9, 4573.0], [98.0, 4601.0], [98.1, 4601.0], [98.2, 4601.0], [98.3, 4601.0], [98.4, 4601.0], [98.5, 4601.0], [98.6, 4601.0], [98.7, 4601.0], [98.8, 4601.0], [98.9, 4601.0], [99.0, 4730.0], [99.1, 4730.0], [99.2, 4730.0], [99.3, 4730.0], [99.4, 4730.0], [99.5, 4730.0], [99.6, 4730.0], [99.7, 4730.0], [99.8, 4730.0], [99.9, 4730.0]], "isOverall": false, "label": "Category Drill down", "isController": false}, {"data": [[0.0, 3769.0], [0.1, 3769.0], [0.2, 3769.0], [0.3, 3769.0], [0.4, 3769.0], [0.5, 3769.0], [0.6, 3769.0], [0.7, 3769.0], [0.8, 3769.0], [0.9, 3769.0], [1.0, 3859.0], [1.1, 3859.0], [1.2, 3859.0], [1.3, 3859.0], [1.4, 3859.0], [1.5, 3859.0], [1.6, 3859.0], [1.7, 3859.0], [1.8, 3859.0], [1.9, 3859.0], [2.0, 3928.0], [2.1, 3928.0], [2.2, 3928.0], [2.3, 3928.0], [2.4, 3928.0], [2.5, 3928.0], [2.6, 3928.0], [2.7, 3928.0], [2.8, 3928.0], [2.9, 3928.0], [3.0, 4002.0], [3.1, 4002.0], [3.2, 4002.0], [3.3, 4002.0], [3.4, 4002.0], [3.5, 4002.0], [3.6, 4002.0], [3.7, 4002.0], [3.8, 4002.0], [3.9, 4002.0], [4.0, 4082.0], [4.1, 4082.0], [4.2, 4082.0], [4.3, 4082.0], [4.4, 4082.0], [4.5, 4082.0], [4.6, 4082.0], [4.7, 4082.0], [4.8, 4082.0], [4.9, 4082.0], [5.0, 4111.0], [5.1, 4111.0], [5.2, 4111.0], [5.3, 4111.0], [5.4, 4111.0], [5.5, 4111.0], [5.6, 4111.0], [5.7, 4111.0], [5.8, 4111.0], [5.9, 4111.0], [6.0, 4146.0], [6.1, 4146.0], [6.2, 4146.0], [6.3, 4146.0], [6.4, 4146.0], [6.5, 4146.0], [6.6, 4146.0], [6.7, 4146.0], [6.8, 4146.0], [6.9, 4146.0], [7.0, 4180.0], [7.1, 4180.0], [7.2, 4180.0], [7.3, 4180.0], [7.4, 4180.0], [7.5, 4180.0], [7.6, 4180.0], [7.7, 4180.0], [7.8, 4180.0], [7.9, 4180.0], [8.0, 4191.0], [8.1, 4191.0], [8.2, 4191.0], [8.3, 4191.0], [8.4, 4191.0], [8.5, 4191.0], [8.6, 4191.0], [8.7, 4191.0], [8.8, 4191.0], [8.9, 4191.0], [9.0, 4204.0], [9.1, 4204.0], [9.2, 4204.0], [9.3, 4204.0], [9.4, 4204.0], [9.5, 4204.0], [9.6, 4204.0], [9.7, 4204.0], [9.8, 4204.0], [9.9, 4204.0], [10.0, 4251.0], [10.1, 4251.0], [10.2, 4251.0], [10.3, 4251.0], [10.4, 4251.0], [10.5, 4251.0], [10.6, 4251.0], [10.7, 4251.0], [10.8, 4251.0], [10.9, 4251.0], [11.0, 4263.0], [11.1, 4263.0], [11.2, 4263.0], [11.3, 4263.0], [11.4, 4263.0], [11.5, 4263.0], [11.6, 4263.0], [11.7, 4263.0], [11.8, 4263.0], [11.9, 4263.0], [12.0, 4263.0], [12.1, 4263.0], [12.2, 4263.0], [12.3, 4263.0], [12.4, 4263.0], [12.5, 4263.0], [12.6, 4263.0], [12.7, 4263.0], [12.8, 4263.0], [12.9, 4263.0], [13.0, 4339.0], [13.1, 4339.0], [13.2, 4339.0], [13.3, 4339.0], [13.4, 4339.0], [13.5, 4339.0], [13.6, 4339.0], [13.7, 4339.0], [13.8, 4339.0], [13.9, 4339.0], [14.0, 4356.0], [14.1, 4356.0], [14.2, 4356.0], [14.3, 4356.0], [14.4, 4356.0], [14.5, 4356.0], [14.6, 4356.0], [14.7, 4356.0], [14.8, 4356.0], [14.9, 4356.0], [15.0, 4410.0], [15.1, 4410.0], [15.2, 4410.0], [15.3, 4410.0], [15.4, 4410.0], [15.5, 4410.0], [15.6, 4410.0], [15.7, 4410.0], [15.8, 4410.0], [15.9, 4410.0], [16.0, 4447.0], [16.1, 4447.0], [16.2, 4447.0], [16.3, 4447.0], [16.4, 4447.0], [16.5, 4447.0], [16.6, 4447.0], [16.7, 4447.0], [16.8, 4447.0], [16.9, 4447.0], [17.0, 4492.0], [17.1, 4492.0], [17.2, 4492.0], [17.3, 4492.0], [17.4, 4492.0], [17.5, 4492.0], [17.6, 4492.0], [17.7, 4492.0], [17.8, 4492.0], [17.9, 4492.0], [18.0, 4529.0], [18.1, 4529.0], [18.2, 4529.0], [18.3, 4529.0], [18.4, 4529.0], [18.5, 4529.0], [18.6, 4529.0], [18.7, 4529.0], [18.8, 4529.0], [18.9, 4529.0], [19.0, 4562.0], [19.1, 4562.0], [19.2, 4562.0], [19.3, 4562.0], [19.4, 4562.0], [19.5, 4562.0], [19.6, 4562.0], [19.7, 4562.0], [19.8, 4562.0], [19.9, 4562.0], [20.0, 4563.0], [20.1, 4563.0], [20.2, 4563.0], [20.3, 4563.0], [20.4, 4563.0], [20.5, 4563.0], [20.6, 4563.0], [20.7, 4563.0], [20.8, 4563.0], [20.9, 4563.0], [21.0, 4619.0], [21.1, 4619.0], [21.2, 4619.0], [21.3, 4619.0], [21.4, 4619.0], [21.5, 4619.0], [21.6, 4619.0], [21.7, 4619.0], [21.8, 4619.0], [21.9, 4619.0], [22.0, 4625.0], [22.1, 4625.0], [22.2, 4625.0], [22.3, 4625.0], [22.4, 4625.0], [22.5, 4625.0], [22.6, 4625.0], [22.7, 4625.0], [22.8, 4625.0], [22.9, 4625.0], [23.0, 4634.0], [23.1, 4634.0], [23.2, 4634.0], [23.3, 4634.0], [23.4, 4634.0], [23.5, 4634.0], [23.6, 4634.0], [23.7, 4634.0], [23.8, 4634.0], [23.9, 4634.0], [24.0, 4652.0], [24.1, 4652.0], [24.2, 4652.0], [24.3, 4652.0], [24.4, 4652.0], [24.5, 4652.0], [24.6, 4652.0], [24.7, 4652.0], [24.8, 4652.0], [24.9, 4652.0], [25.0, 4696.0], [25.1, 4696.0], [25.2, 4696.0], [25.3, 4696.0], [25.4, 4696.0], [25.5, 4696.0], [25.6, 4696.0], [25.7, 4696.0], [25.8, 4696.0], [25.9, 4696.0], [26.0, 4698.0], [26.1, 4698.0], [26.2, 4698.0], [26.3, 4698.0], [26.4, 4698.0], [26.5, 4698.0], [26.6, 4698.0], [26.7, 4698.0], [26.8, 4698.0], [26.9, 4698.0], [27.0, 4703.0], [27.1, 4703.0], [27.2, 4703.0], [27.3, 4703.0], [27.4, 4703.0], [27.5, 4703.0], [27.6, 4703.0], [27.7, 4703.0], [27.8, 4703.0], [27.9, 4703.0], [28.0, 4757.0], [28.1, 4757.0], [28.2, 4757.0], [28.3, 4757.0], [28.4, 4757.0], [28.5, 4757.0], [28.6, 4757.0], [28.7, 4757.0], [28.8, 4757.0], [28.9, 4757.0], [29.0, 4782.0], [29.1, 4782.0], [29.2, 4782.0], [29.3, 4782.0], [29.4, 4782.0], [29.5, 4782.0], [29.6, 4782.0], [29.7, 4782.0], [29.8, 4782.0], [29.9, 4782.0], [30.0, 4786.0], [30.1, 4786.0], [30.2, 4786.0], [30.3, 4786.0], [30.4, 4786.0], [30.5, 4786.0], [30.6, 4786.0], [30.7, 4786.0], [30.8, 4786.0], [30.9, 4786.0], [31.0, 4787.0], [31.1, 4787.0], [31.2, 4787.0], [31.3, 4787.0], [31.4, 4787.0], [31.5, 4787.0], [31.6, 4787.0], [31.7, 4787.0], [31.8, 4787.0], [31.9, 4787.0], [32.0, 4823.0], [32.1, 4823.0], [32.2, 4823.0], [32.3, 4823.0], [32.4, 4823.0], [32.5, 4823.0], [32.6, 4823.0], [32.7, 4823.0], [32.8, 4823.0], [32.9, 4823.0], [33.0, 4828.0], [33.1, 4828.0], [33.2, 4828.0], [33.3, 4828.0], [33.4, 4828.0], [33.5, 4828.0], [33.6, 4828.0], [33.7, 4828.0], [33.8, 4828.0], [33.9, 4828.0], [34.0, 4831.0], [34.1, 4831.0], [34.2, 4831.0], [34.3, 4831.0], [34.4, 4831.0], [34.5, 4831.0], [34.6, 4831.0], [34.7, 4831.0], [34.8, 4831.0], [34.9, 4831.0], [35.0, 4865.0], [35.1, 4865.0], [35.2, 4865.0], [35.3, 4865.0], [35.4, 4865.0], [35.5, 4865.0], [35.6, 4865.0], [35.7, 4865.0], [35.8, 4865.0], [35.9, 4865.0], [36.0, 4899.0], [36.1, 4899.0], [36.2, 4899.0], [36.3, 4899.0], [36.4, 4899.0], [36.5, 4899.0], [36.6, 4899.0], [36.7, 4899.0], [36.8, 4899.0], [36.9, 4899.0], [37.0, 4914.0], [37.1, 4914.0], [37.2, 4914.0], [37.3, 4914.0], [37.4, 4914.0], [37.5, 4914.0], [37.6, 4914.0], [37.7, 4914.0], [37.8, 4914.0], [37.9, 4914.0], [38.0, 4932.0], [38.1, 4932.0], [38.2, 4932.0], [38.3, 4932.0], [38.4, 4932.0], [38.5, 4932.0], [38.6, 4932.0], [38.7, 4932.0], [38.8, 4932.0], [38.9, 4932.0], [39.0, 4932.0], [39.1, 4932.0], [39.2, 4932.0], [39.3, 4932.0], [39.4, 4932.0], [39.5, 4932.0], [39.6, 4932.0], [39.7, 4932.0], [39.8, 4932.0], [39.9, 4932.0], [40.0, 4937.0], [40.1, 4937.0], [40.2, 4937.0], [40.3, 4937.0], [40.4, 4937.0], [40.5, 4937.0], [40.6, 4937.0], [40.7, 4937.0], [40.8, 4937.0], [40.9, 4937.0], [41.0, 5005.0], [41.1, 5005.0], [41.2, 5005.0], [41.3, 5005.0], [41.4, 5005.0], [41.5, 5005.0], [41.6, 5005.0], [41.7, 5005.0], [41.8, 5005.0], [41.9, 5005.0], [42.0, 5005.0], [42.1, 5005.0], [42.2, 5005.0], [42.3, 5005.0], [42.4, 5005.0], [42.5, 5005.0], [42.6, 5005.0], [42.7, 5005.0], [42.8, 5005.0], [42.9, 5005.0], [43.0, 5031.0], [43.1, 5031.0], [43.2, 5031.0], [43.3, 5031.0], [43.4, 5031.0], [43.5, 5031.0], [43.6, 5031.0], [43.7, 5031.0], [43.8, 5031.0], [43.9, 5031.0], [44.0, 5080.0], [44.1, 5080.0], [44.2, 5080.0], [44.3, 5080.0], [44.4, 5080.0], [44.5, 5080.0], [44.6, 5080.0], [44.7, 5080.0], [44.8, 5080.0], [44.9, 5080.0], [45.0, 5092.0], [45.1, 5092.0], [45.2, 5092.0], [45.3, 5092.0], [45.4, 5092.0], [45.5, 5092.0], [45.6, 5092.0], [45.7, 5092.0], [45.8, 5092.0], [45.9, 5092.0], [46.0, 5123.0], [46.1, 5123.0], [46.2, 5123.0], [46.3, 5123.0], [46.4, 5123.0], [46.5, 5123.0], [46.6, 5123.0], [46.7, 5123.0], [46.8, 5123.0], [46.9, 5123.0], [47.0, 5129.0], [47.1, 5129.0], [47.2, 5129.0], [47.3, 5129.0], [47.4, 5129.0], [47.5, 5129.0], [47.6, 5129.0], [47.7, 5129.0], [47.8, 5129.0], [47.9, 5129.0], [48.0, 5150.0], [48.1, 5150.0], [48.2, 5150.0], [48.3, 5150.0], [48.4, 5150.0], [48.5, 5150.0], [48.6, 5150.0], [48.7, 5150.0], [48.8, 5150.0], [48.9, 5150.0], [49.0, 5152.0], [49.1, 5152.0], [49.2, 5152.0], [49.3, 5152.0], [49.4, 5152.0], [49.5, 5152.0], [49.6, 5152.0], [49.7, 5152.0], [49.8, 5152.0], [49.9, 5152.0], [50.0, 5159.0], [50.1, 5159.0], [50.2, 5159.0], [50.3, 5159.0], [50.4, 5159.0], [50.5, 5159.0], [50.6, 5159.0], [50.7, 5159.0], [50.8, 5159.0], [50.9, 5159.0], [51.0, 5224.0], [51.1, 5224.0], [51.2, 5224.0], [51.3, 5224.0], [51.4, 5224.0], [51.5, 5224.0], [51.6, 5224.0], [51.7, 5224.0], [51.8, 5224.0], [51.9, 5224.0], [52.0, 5244.0], [52.1, 5244.0], [52.2, 5244.0], [52.3, 5244.0], [52.4, 5244.0], [52.5, 5244.0], [52.6, 5244.0], [52.7, 5244.0], [52.8, 5244.0], [52.9, 5244.0], [53.0, 5260.0], [53.1, 5260.0], [53.2, 5260.0], [53.3, 5260.0], [53.4, 5260.0], [53.5, 5260.0], [53.6, 5260.0], [53.7, 5260.0], [53.8, 5260.0], [53.9, 5260.0], [54.0, 5268.0], [54.1, 5268.0], [54.2, 5268.0], [54.3, 5268.0], [54.4, 5268.0], [54.5, 5268.0], [54.6, 5268.0], [54.7, 5268.0], [54.8, 5268.0], [54.9, 5268.0], [55.0, 5302.0], [55.1, 5302.0], [55.2, 5302.0], [55.3, 5302.0], [55.4, 5302.0], [55.5, 5302.0], [55.6, 5302.0], [55.7, 5302.0], [55.8, 5302.0], [55.9, 5302.0], [56.0, 5305.0], [56.1, 5305.0], [56.2, 5305.0], [56.3, 5305.0], [56.4, 5305.0], [56.5, 5305.0], [56.6, 5305.0], [56.7, 5305.0], [56.8, 5305.0], [56.9, 5305.0], [57.0, 5308.0], [57.1, 5308.0], [57.2, 5308.0], [57.3, 5308.0], [57.4, 5308.0], [57.5, 5308.0], [57.6, 5308.0], [57.7, 5308.0], [57.8, 5308.0], [57.9, 5308.0], [58.0, 5402.0], [58.1, 5402.0], [58.2, 5402.0], [58.3, 5402.0], [58.4, 5402.0], [58.5, 5402.0], [58.6, 5402.0], [58.7, 5402.0], [58.8, 5402.0], [58.9, 5402.0], [59.0, 5420.0], [59.1, 5420.0], [59.2, 5420.0], [59.3, 5420.0], [59.4, 5420.0], [59.5, 5420.0], [59.6, 5420.0], [59.7, 5420.0], [59.8, 5420.0], [59.9, 5420.0], [60.0, 5458.0], [60.1, 5458.0], [60.2, 5458.0], [60.3, 5458.0], [60.4, 5458.0], [60.5, 5458.0], [60.6, 5458.0], [60.7, 5458.0], [60.8, 5458.0], [60.9, 5458.0], [61.0, 5474.0], [61.1, 5474.0], [61.2, 5474.0], [61.3, 5474.0], [61.4, 5474.0], [61.5, 5474.0], [61.6, 5474.0], [61.7, 5474.0], [61.8, 5474.0], [61.9, 5474.0], [62.0, 5544.0], [62.1, 5544.0], [62.2, 5544.0], [62.3, 5544.0], [62.4, 5544.0], [62.5, 5544.0], [62.6, 5544.0], [62.7, 5544.0], [62.8, 5544.0], [62.9, 5544.0], [63.0, 5546.0], [63.1, 5546.0], [63.2, 5546.0], [63.3, 5546.0], [63.4, 5546.0], [63.5, 5546.0], [63.6, 5546.0], [63.7, 5546.0], [63.8, 5546.0], [63.9, 5546.0], [64.0, 5574.0], [64.1, 5574.0], [64.2, 5574.0], [64.3, 5574.0], [64.4, 5574.0], [64.5, 5574.0], [64.6, 5574.0], [64.7, 5574.0], [64.8, 5574.0], [64.9, 5574.0], [65.0, 5595.0], [65.1, 5595.0], [65.2, 5595.0], [65.3, 5595.0], [65.4, 5595.0], [65.5, 5595.0], [65.6, 5595.0], [65.7, 5595.0], [65.8, 5595.0], [65.9, 5595.0], [66.0, 5691.0], [66.1, 5691.0], [66.2, 5691.0], [66.3, 5691.0], [66.4, 5691.0], [66.5, 5691.0], [66.6, 5691.0], [66.7, 5691.0], [66.8, 5691.0], [66.9, 5691.0], [67.0, 5695.0], [67.1, 5695.0], [67.2, 5695.0], [67.3, 5695.0], [67.4, 5695.0], [67.5, 5695.0], [67.6, 5695.0], [67.7, 5695.0], [67.8, 5695.0], [67.9, 5695.0], [68.0, 5734.0], [68.1, 5734.0], [68.2, 5734.0], [68.3, 5734.0], [68.4, 5734.0], [68.5, 5734.0], [68.6, 5734.0], [68.7, 5734.0], [68.8, 5734.0], [68.9, 5734.0], [69.0, 5738.0], [69.1, 5738.0], [69.2, 5738.0], [69.3, 5738.0], [69.4, 5738.0], [69.5, 5738.0], [69.6, 5738.0], [69.7, 5738.0], [69.8, 5738.0], [69.9, 5738.0], [70.0, 5751.0], [70.1, 5751.0], [70.2, 5751.0], [70.3, 5751.0], [70.4, 5751.0], [70.5, 5751.0], [70.6, 5751.0], [70.7, 5751.0], [70.8, 5751.0], [70.9, 5751.0], [71.0, 5755.0], [71.1, 5755.0], [71.2, 5755.0], [71.3, 5755.0], [71.4, 5755.0], [71.5, 5755.0], [71.6, 5755.0], [71.7, 5755.0], [71.8, 5755.0], [71.9, 5755.0], [72.0, 5774.0], [72.1, 5774.0], [72.2, 5774.0], [72.3, 5774.0], [72.4, 5774.0], [72.5, 5774.0], [72.6, 5774.0], [72.7, 5774.0], [72.8, 5774.0], [72.9, 5774.0], [73.0, 5793.0], [73.1, 5793.0], [73.2, 5793.0], [73.3, 5793.0], [73.4, 5793.0], [73.5, 5793.0], [73.6, 5793.0], [73.7, 5793.0], [73.8, 5793.0], [73.9, 5793.0], [74.0, 5808.0], [74.1, 5808.0], [74.2, 5808.0], [74.3, 5808.0], [74.4, 5808.0], [74.5, 5808.0], [74.6, 5808.0], [74.7, 5808.0], [74.8, 5808.0], [74.9, 5808.0], [75.0, 5850.0], [75.1, 5850.0], [75.2, 5850.0], [75.3, 5850.0], [75.4, 5850.0], [75.5, 5850.0], [75.6, 5850.0], [75.7, 5850.0], [75.8, 5850.0], [75.9, 5850.0], [76.0, 5890.0], [76.1, 5890.0], [76.2, 5890.0], [76.3, 5890.0], [76.4, 5890.0], [76.5, 5890.0], [76.6, 5890.0], [76.7, 5890.0], [76.8, 5890.0], [76.9, 5890.0], [77.0, 5913.0], [77.1, 5913.0], [77.2, 5913.0], [77.3, 5913.0], [77.4, 5913.0], [77.5, 5913.0], [77.6, 5913.0], [77.7, 5913.0], [77.8, 5913.0], [77.9, 5913.0], [78.0, 5946.0], [78.1, 5946.0], [78.2, 5946.0], [78.3, 5946.0], [78.4, 5946.0], [78.5, 5946.0], [78.6, 5946.0], [78.7, 5946.0], [78.8, 5946.0], [78.9, 5946.0], [79.0, 6042.0], [79.1, 6042.0], [79.2, 6042.0], [79.3, 6042.0], [79.4, 6042.0], [79.5, 6042.0], [79.6, 6042.0], [79.7, 6042.0], [79.8, 6042.0], [79.9, 6042.0], [80.0, 6054.0], [80.1, 6054.0], [80.2, 6054.0], [80.3, 6054.0], [80.4, 6054.0], [80.5, 6054.0], [80.6, 6054.0], [80.7, 6054.0], [80.8, 6054.0], [80.9, 6054.0], [81.0, 6078.0], [81.1, 6078.0], [81.2, 6078.0], [81.3, 6078.0], [81.4, 6078.0], [81.5, 6078.0], [81.6, 6078.0], [81.7, 6078.0], [81.8, 6078.0], [81.9, 6078.0], [82.0, 6097.0], [82.1, 6097.0], [82.2, 6097.0], [82.3, 6097.0], [82.4, 6097.0], [82.5, 6097.0], [82.6, 6097.0], [82.7, 6097.0], [82.8, 6097.0], [82.9, 6097.0], [83.0, 6104.0], [83.1, 6104.0], [83.2, 6104.0], [83.3, 6104.0], [83.4, 6104.0], [83.5, 6104.0], [83.6, 6104.0], [83.7, 6104.0], [83.8, 6104.0], [83.9, 6104.0], [84.0, 6178.0], [84.1, 6178.0], [84.2, 6178.0], [84.3, 6178.0], [84.4, 6178.0], [84.5, 6178.0], [84.6, 6178.0], [84.7, 6178.0], [84.8, 6178.0], [84.9, 6178.0], [85.0, 6233.0], [85.1, 6233.0], [85.2, 6233.0], [85.3, 6233.0], [85.4, 6233.0], [85.5, 6233.0], [85.6, 6233.0], [85.7, 6233.0], [85.8, 6233.0], [85.9, 6233.0], [86.0, 6376.0], [86.1, 6376.0], [86.2, 6376.0], [86.3, 6376.0], [86.4, 6376.0], [86.5, 6376.0], [86.6, 6376.0], [86.7, 6376.0], [86.8, 6376.0], [86.9, 6376.0], [87.0, 6587.0], [87.1, 6587.0], [87.2, 6587.0], [87.3, 6587.0], [87.4, 6587.0], [87.5, 6587.0], [87.6, 6587.0], [87.7, 6587.0], [87.8, 6587.0], [87.9, 6587.0], [88.0, 6605.0], [88.1, 6605.0], [88.2, 6605.0], [88.3, 6605.0], [88.4, 6605.0], [88.5, 6605.0], [88.6, 6605.0], [88.7, 6605.0], [88.8, 6605.0], [88.9, 6605.0], [89.0, 6744.0], [89.1, 6744.0], [89.2, 6744.0], [89.3, 6744.0], [89.4, 6744.0], [89.5, 6744.0], [89.6, 6744.0], [89.7, 6744.0], [89.8, 6744.0], [89.9, 6744.0], [90.0, 6787.0], [90.1, 6787.0], [90.2, 6787.0], [90.3, 6787.0], [90.4, 6787.0], [90.5, 6787.0], [90.6, 6787.0], [90.7, 6787.0], [90.8, 6787.0], [90.9, 6787.0], [91.0, 6920.0], [91.1, 6920.0], [91.2, 6920.0], [91.3, 6920.0], [91.4, 6920.0], [91.5, 6920.0], [91.6, 6920.0], [91.7, 6920.0], [91.8, 6920.0], [91.9, 6920.0], [92.0, 6958.0], [92.1, 6958.0], [92.2, 6958.0], [92.3, 6958.0], [92.4, 6958.0], [92.5, 6958.0], [92.6, 6958.0], [92.7, 6958.0], [92.8, 6958.0], [92.9, 6958.0], [93.0, 6982.0], [93.1, 6982.0], [93.2, 6982.0], [93.3, 6982.0], [93.4, 6982.0], [93.5, 6982.0], [93.6, 6982.0], [93.7, 6982.0], [93.8, 6982.0], [93.9, 6982.0], [94.0, 7188.0], [94.1, 7188.0], [94.2, 7188.0], [94.3, 7188.0], [94.4, 7188.0], [94.5, 7188.0], [94.6, 7188.0], [94.7, 7188.0], [94.8, 7188.0], [94.9, 7188.0], [95.0, 7376.0], [95.1, 7376.0], [95.2, 7376.0], [95.3, 7376.0], [95.4, 7376.0], [95.5, 7376.0], [95.6, 7376.0], [95.7, 7376.0], [95.8, 7376.0], [95.9, 7376.0], [96.0, 7397.0], [96.1, 7397.0], [96.2, 7397.0], [96.3, 7397.0], [96.4, 7397.0], [96.5, 7397.0], [96.6, 7397.0], [96.7, 7397.0], [96.8, 7397.0], [96.9, 7397.0], [97.0, 8236.0], [97.1, 8236.0], [97.2, 8236.0], [97.3, 8236.0], [97.4, 8236.0], [97.5, 8236.0], [97.6, 8236.0], [97.7, 8236.0], [97.8, 8236.0], [97.9, 8236.0], [98.0, 8414.0], [98.1, 8414.0], [98.2, 8414.0], [98.3, 8414.0], [98.4, 8414.0], [98.5, 8414.0], [98.6, 8414.0], [98.7, 8414.0], [98.8, 8414.0], [98.9, 8414.0], [99.0, 9284.0], [99.1, 9284.0], [99.2, 9284.0], [99.3, 9284.0], [99.4, 9284.0], [99.5, 9284.0], [99.6, 9284.0], [99.7, 9284.0], [99.8, 9284.0], [99.9, 9284.0]], "isOverall": false, "label": "Item Details", "isController": false}, {"data": [[0.0, 2366.0], [0.1, 2366.0], [0.2, 2366.0], [0.3, 2366.0], [0.4, 2366.0], [0.5, 2366.0], [0.6, 2366.0], [0.7, 2366.0], [0.8, 2366.0], [0.9, 2366.0], [1.0, 2525.0], [1.1, 2525.0], [1.2, 2525.0], [1.3, 2525.0], [1.4, 2525.0], [1.5, 2525.0], [1.6, 2525.0], [1.7, 2525.0], [1.8, 2525.0], [1.9, 2525.0], [2.0, 2602.0], [2.1, 2602.0], [2.2, 2602.0], [2.3, 2602.0], [2.4, 2602.0], [2.5, 2602.0], [2.6, 2602.0], [2.7, 2602.0], [2.8, 2602.0], [2.9, 2602.0], [3.0, 2752.0], [3.1, 2752.0], [3.2, 2752.0], [3.3, 2752.0], [3.4, 2752.0], [3.5, 2752.0], [3.6, 2752.0], [3.7, 2752.0], [3.8, 2752.0], [3.9, 2752.0], [4.0, 2778.0], [4.1, 2778.0], [4.2, 2778.0], [4.3, 2778.0], [4.4, 2778.0], [4.5, 2778.0], [4.6, 2778.0], [4.7, 2778.0], [4.8, 2778.0], [4.9, 2778.0], [5.0, 2792.0], [5.1, 2792.0], [5.2, 2792.0], [5.3, 2792.0], [5.4, 2792.0], [5.5, 2792.0], [5.6, 2792.0], [5.7, 2792.0], [5.8, 2792.0], [5.9, 2792.0], [6.0, 2832.0], [6.1, 2832.0], [6.2, 2832.0], [6.3, 2832.0], [6.4, 2832.0], [6.5, 2832.0], [6.6, 2832.0], [6.7, 2832.0], [6.8, 2832.0], [6.9, 2832.0], [7.0, 2841.0], [7.1, 2841.0], [7.2, 2841.0], [7.3, 2841.0], [7.4, 2841.0], [7.5, 2841.0], [7.6, 2841.0], [7.7, 2841.0], [7.8, 2841.0], [7.9, 2841.0], [8.0, 2873.0], [8.1, 2873.0], [8.2, 2873.0], [8.3, 2873.0], [8.4, 2873.0], [8.5, 2873.0], [8.6, 2873.0], [8.7, 2873.0], [8.8, 2873.0], [8.9, 2873.0], [9.0, 2874.0], [9.1, 2874.0], [9.2, 2874.0], [9.3, 2874.0], [9.4, 2874.0], [9.5, 2874.0], [9.6, 2874.0], [9.7, 2874.0], [9.8, 2874.0], [9.9, 2874.0], [10.0, 2897.0], [10.1, 2897.0], [10.2, 2897.0], [10.3, 2897.0], [10.4, 2897.0], [10.5, 2897.0], [10.6, 2897.0], [10.7, 2897.0], [10.8, 2897.0], [10.9, 2897.0], [11.0, 2940.0], [11.1, 2940.0], [11.2, 2940.0], [11.3, 2940.0], [11.4, 2940.0], [11.5, 2940.0], [11.6, 2940.0], [11.7, 2940.0], [11.8, 2940.0], [11.9, 2940.0], [12.0, 2958.0], [12.1, 2958.0], [12.2, 2958.0], [12.3, 2958.0], [12.4, 2958.0], [12.5, 2958.0], [12.6, 2958.0], [12.7, 2958.0], [12.8, 2958.0], [12.9, 2958.0], [13.0, 3046.0], [13.1, 3046.0], [13.2, 3046.0], [13.3, 3046.0], [13.4, 3046.0], [13.5, 3046.0], [13.6, 3046.0], [13.7, 3046.0], [13.8, 3046.0], [13.9, 3046.0], [14.0, 3057.0], [14.1, 3057.0], [14.2, 3057.0], [14.3, 3057.0], [14.4, 3057.0], [14.5, 3057.0], [14.6, 3057.0], [14.7, 3057.0], [14.8, 3057.0], [14.9, 3057.0], [15.0, 3097.0], [15.1, 3097.0], [15.2, 3097.0], [15.3, 3097.0], [15.4, 3097.0], [15.5, 3097.0], [15.6, 3097.0], [15.7, 3097.0], [15.8, 3097.0], [15.9, 3097.0], [16.0, 3122.0], [16.1, 3122.0], [16.2, 3122.0], [16.3, 3122.0], [16.4, 3122.0], [16.5, 3122.0], [16.6, 3122.0], [16.7, 3122.0], [16.8, 3122.0], [16.9, 3122.0], [17.0, 3158.0], [17.1, 3158.0], [17.2, 3158.0], [17.3, 3158.0], [17.4, 3158.0], [17.5, 3158.0], [17.6, 3158.0], [17.7, 3158.0], [17.8, 3158.0], [17.9, 3158.0], [18.0, 3159.0], [18.1, 3159.0], [18.2, 3159.0], [18.3, 3159.0], [18.4, 3159.0], [18.5, 3159.0], [18.6, 3159.0], [18.7, 3159.0], [18.8, 3159.0], [18.9, 3159.0], [19.0, 3161.0], [19.1, 3161.0], [19.2, 3161.0], [19.3, 3161.0], [19.4, 3161.0], [19.5, 3161.0], [19.6, 3161.0], [19.7, 3161.0], [19.8, 3161.0], [19.9, 3161.0], [20.0, 3161.0], [20.1, 3161.0], [20.2, 3161.0], [20.3, 3161.0], [20.4, 3161.0], [20.5, 3161.0], [20.6, 3161.0], [20.7, 3161.0], [20.8, 3161.0], [20.9, 3161.0], [21.0, 3187.0], [21.1, 3187.0], [21.2, 3187.0], [21.3, 3187.0], [21.4, 3187.0], [21.5, 3187.0], [21.6, 3187.0], [21.7, 3187.0], [21.8, 3187.0], [21.9, 3187.0], [22.0, 3302.0], [22.1, 3302.0], [22.2, 3302.0], [22.3, 3302.0], [22.4, 3302.0], [22.5, 3302.0], [22.6, 3302.0], [22.7, 3302.0], [22.8, 3302.0], [22.9, 3302.0], [23.0, 3333.0], [23.1, 3333.0], [23.2, 3333.0], [23.3, 3333.0], [23.4, 3333.0], [23.5, 3333.0], [23.6, 3333.0], [23.7, 3333.0], [23.8, 3333.0], [23.9, 3333.0], [24.0, 3380.0], [24.1, 3380.0], [24.2, 3380.0], [24.3, 3380.0], [24.4, 3380.0], [24.5, 3380.0], [24.6, 3380.0], [24.7, 3380.0], [24.8, 3380.0], [24.9, 3380.0], [25.0, 3417.0], [25.1, 3417.0], [25.2, 3417.0], [25.3, 3417.0], [25.4, 3417.0], [25.5, 3417.0], [25.6, 3417.0], [25.7, 3417.0], [25.8, 3417.0], [25.9, 3417.0], [26.0, 3466.0], [26.1, 3466.0], [26.2, 3466.0], [26.3, 3466.0], [26.4, 3466.0], [26.5, 3466.0], [26.6, 3466.0], [26.7, 3466.0], [26.8, 3466.0], [26.9, 3466.0], [27.0, 3469.0], [27.1, 3469.0], [27.2, 3469.0], [27.3, 3469.0], [27.4, 3469.0], [27.5, 3469.0], [27.6, 3469.0], [27.7, 3469.0], [27.8, 3469.0], [27.9, 3469.0], [28.0, 3491.0], [28.1, 3491.0], [28.2, 3491.0], [28.3, 3491.0], [28.4, 3491.0], [28.5, 3491.0], [28.6, 3491.0], [28.7, 3491.0], [28.8, 3491.0], [28.9, 3491.0], [29.0, 3516.0], [29.1, 3516.0], [29.2, 3516.0], [29.3, 3516.0], [29.4, 3516.0], [29.5, 3516.0], [29.6, 3516.0], [29.7, 3516.0], [29.8, 3516.0], [29.9, 3516.0], [30.0, 3516.0], [30.1, 3516.0], [30.2, 3516.0], [30.3, 3516.0], [30.4, 3516.0], [30.5, 3516.0], [30.6, 3516.0], [30.7, 3516.0], [30.8, 3516.0], [30.9, 3516.0], [31.0, 3579.0], [31.1, 3579.0], [31.2, 3579.0], [31.3, 3579.0], [31.4, 3579.0], [31.5, 3579.0], [31.6, 3579.0], [31.7, 3579.0], [31.8, 3579.0], [31.9, 3579.0], [32.0, 3653.0], [32.1, 3653.0], [32.2, 3653.0], [32.3, 3653.0], [32.4, 3653.0], [32.5, 3653.0], [32.6, 3653.0], [32.7, 3653.0], [32.8, 3653.0], [32.9, 3653.0], [33.0, 3668.0], [33.1, 3668.0], [33.2, 3668.0], [33.3, 3668.0], [33.4, 3668.0], [33.5, 3668.0], [33.6, 3668.0], [33.7, 3668.0], [33.8, 3668.0], [33.9, 3668.0], [34.0, 3774.0], [34.1, 3774.0], [34.2, 3774.0], [34.3, 3774.0], [34.4, 3774.0], [34.5, 3774.0], [34.6, 3774.0], [34.7, 3774.0], [34.8, 3774.0], [34.9, 3774.0], [35.0, 3800.0], [35.1, 3800.0], [35.2, 3800.0], [35.3, 3800.0], [35.4, 3800.0], [35.5, 3800.0], [35.6, 3800.0], [35.7, 3800.0], [35.8, 3800.0], [35.9, 3800.0], [36.0, 3814.0], [36.1, 3814.0], [36.2, 3814.0], [36.3, 3814.0], [36.4, 3814.0], [36.5, 3814.0], [36.6, 3814.0], [36.7, 3814.0], [36.8, 3814.0], [36.9, 3814.0], [37.0, 3814.0], [37.1, 3814.0], [37.2, 3814.0], [37.3, 3814.0], [37.4, 3814.0], [37.5, 3814.0], [37.6, 3814.0], [37.7, 3814.0], [37.8, 3814.0], [37.9, 3814.0], [38.0, 3889.0], [38.1, 3889.0], [38.2, 3889.0], [38.3, 3889.0], [38.4, 3889.0], [38.5, 3889.0], [38.6, 3889.0], [38.7, 3889.0], [38.8, 3889.0], [38.9, 3889.0], [39.0, 3933.0], [39.1, 3933.0], [39.2, 3933.0], [39.3, 3933.0], [39.4, 3933.0], [39.5, 3933.0], [39.6, 3933.0], [39.7, 3933.0], [39.8, 3933.0], [39.9, 3933.0], [40.0, 4023.0], [40.1, 4023.0], [40.2, 4023.0], [40.3, 4023.0], [40.4, 4023.0], [40.5, 4023.0], [40.6, 4023.0], [40.7, 4023.0], [40.8, 4023.0], [40.9, 4023.0], [41.0, 4033.0], [41.1, 4033.0], [41.2, 4033.0], [41.3, 4033.0], [41.4, 4033.0], [41.5, 4033.0], [41.6, 4033.0], [41.7, 4033.0], [41.8, 4033.0], [41.9, 4033.0], [42.0, 4044.0], [42.1, 4044.0], [42.2, 4044.0], [42.3, 4044.0], [42.4, 4044.0], [42.5, 4044.0], [42.6, 4044.0], [42.7, 4044.0], [42.8, 4044.0], [42.9, 4044.0], [43.0, 4045.0], [43.1, 4045.0], [43.2, 4045.0], [43.3, 4045.0], [43.4, 4045.0], [43.5, 4045.0], [43.6, 4045.0], [43.7, 4045.0], [43.8, 4045.0], [43.9, 4045.0], [44.0, 4046.0], [44.1, 4046.0], [44.2, 4046.0], [44.3, 4046.0], [44.4, 4046.0], [44.5, 4046.0], [44.6, 4046.0], [44.7, 4046.0], [44.8, 4046.0], [44.9, 4046.0], [45.0, 4072.0], [45.1, 4072.0], [45.2, 4072.0], [45.3, 4072.0], [45.4, 4072.0], [45.5, 4072.0], [45.6, 4072.0], [45.7, 4072.0], [45.8, 4072.0], [45.9, 4072.0], [46.0, 4074.0], [46.1, 4074.0], [46.2, 4074.0], [46.3, 4074.0], [46.4, 4074.0], [46.5, 4074.0], [46.6, 4074.0], [46.7, 4074.0], [46.8, 4074.0], [46.9, 4074.0], [47.0, 4075.0], [47.1, 4075.0], [47.2, 4075.0], [47.3, 4075.0], [47.4, 4075.0], [47.5, 4075.0], [47.6, 4075.0], [47.7, 4075.0], [47.8, 4075.0], [47.9, 4075.0], [48.0, 4085.0], [48.1, 4085.0], [48.2, 4085.0], [48.3, 4085.0], [48.4, 4085.0], [48.5, 4085.0], [48.6, 4085.0], [48.7, 4085.0], [48.8, 4085.0], [48.9, 4085.0], [49.0, 4126.0], [49.1, 4126.0], [49.2, 4126.0], [49.3, 4126.0], [49.4, 4126.0], [49.5, 4126.0], [49.6, 4126.0], [49.7, 4126.0], [49.8, 4126.0], [49.9, 4126.0], [50.0, 4130.0], [50.1, 4130.0], [50.2, 4130.0], [50.3, 4130.0], [50.4, 4130.0], [50.5, 4130.0], [50.6, 4130.0], [50.7, 4130.0], [50.8, 4130.0], [50.9, 4130.0], [51.0, 4133.0], [51.1, 4133.0], [51.2, 4133.0], [51.3, 4133.0], [51.4, 4133.0], [51.5, 4133.0], [51.6, 4133.0], [51.7, 4133.0], [51.8, 4133.0], [51.9, 4133.0], [52.0, 4150.0], [52.1, 4150.0], [52.2, 4150.0], [52.3, 4150.0], [52.4, 4150.0], [52.5, 4150.0], [52.6, 4150.0], [52.7, 4150.0], [52.8, 4150.0], [52.9, 4150.0], [53.0, 4151.0], [53.1, 4151.0], [53.2, 4151.0], [53.3, 4151.0], [53.4, 4151.0], [53.5, 4151.0], [53.6, 4151.0], [53.7, 4151.0], [53.8, 4151.0], [53.9, 4151.0], [54.0, 4152.0], [54.1, 4152.0], [54.2, 4152.0], [54.3, 4152.0], [54.4, 4152.0], [54.5, 4152.0], [54.6, 4152.0], [54.7, 4152.0], [54.8, 4152.0], [54.9, 4152.0], [55.0, 4212.0], [55.1, 4212.0], [55.2, 4212.0], [55.3, 4212.0], [55.4, 4212.0], [55.5, 4212.0], [55.6, 4212.0], [55.7, 4212.0], [55.8, 4212.0], [55.9, 4212.0], [56.0, 4241.0], [56.1, 4241.0], [56.2, 4241.0], [56.3, 4241.0], [56.4, 4241.0], [56.5, 4241.0], [56.6, 4241.0], [56.7, 4241.0], [56.8, 4241.0], [56.9, 4241.0], [57.0, 4274.0], [57.1, 4274.0], [57.2, 4274.0], [57.3, 4274.0], [57.4, 4274.0], [57.5, 4274.0], [57.6, 4274.0], [57.7, 4274.0], [57.8, 4274.0], [57.9, 4274.0], [58.0, 4304.0], [58.1, 4304.0], [58.2, 4304.0], [58.3, 4304.0], [58.4, 4304.0], [58.5, 4304.0], [58.6, 4304.0], [58.7, 4304.0], [58.8, 4304.0], [58.9, 4304.0], [59.0, 4309.0], [59.1, 4309.0], [59.2, 4309.0], [59.3, 4309.0], [59.4, 4309.0], [59.5, 4309.0], [59.6, 4309.0], [59.7, 4309.0], [59.8, 4309.0], [59.9, 4309.0], [60.0, 4326.0], [60.1, 4326.0], [60.2, 4326.0], [60.3, 4326.0], [60.4, 4326.0], [60.5, 4326.0], [60.6, 4326.0], [60.7, 4326.0], [60.8, 4326.0], [60.9, 4326.0], [61.0, 4369.0], [61.1, 4369.0], [61.2, 4369.0], [61.3, 4369.0], [61.4, 4369.0], [61.5, 4369.0], [61.6, 4369.0], [61.7, 4369.0], [61.8, 4369.0], [61.9, 4369.0], [62.0, 4396.0], [62.1, 4396.0], [62.2, 4396.0], [62.3, 4396.0], [62.4, 4396.0], [62.5, 4396.0], [62.6, 4396.0], [62.7, 4396.0], [62.8, 4396.0], [62.9, 4396.0], [63.0, 4416.0], [63.1, 4416.0], [63.2, 4416.0], [63.3, 4416.0], [63.4, 4416.0], [63.5, 4416.0], [63.6, 4416.0], [63.7, 4416.0], [63.8, 4416.0], [63.9, 4416.0], [64.0, 4420.0], [64.1, 4420.0], [64.2, 4420.0], [64.3, 4420.0], [64.4, 4420.0], [64.5, 4420.0], [64.6, 4420.0], [64.7, 4420.0], [64.8, 4420.0], [64.9, 4420.0], [65.0, 4442.0], [65.1, 4442.0], [65.2, 4442.0], [65.3, 4442.0], [65.4, 4442.0], [65.5, 4442.0], [65.6, 4442.0], [65.7, 4442.0], [65.8, 4442.0], [65.9, 4442.0], [66.0, 4462.0], [66.1, 4462.0], [66.2, 4462.0], [66.3, 4462.0], [66.4, 4462.0], [66.5, 4462.0], [66.6, 4462.0], [66.7, 4462.0], [66.8, 4462.0], [66.9, 4462.0], [67.0, 4559.0], [67.1, 4559.0], [67.2, 4559.0], [67.3, 4559.0], [67.4, 4559.0], [67.5, 4559.0], [67.6, 4559.0], [67.7, 4559.0], [67.8, 4559.0], [67.9, 4559.0], [68.0, 4577.0], [68.1, 4577.0], [68.2, 4577.0], [68.3, 4577.0], [68.4, 4577.0], [68.5, 4577.0], [68.6, 4577.0], [68.7, 4577.0], [68.8, 4577.0], [68.9, 4577.0], [69.0, 4595.0], [69.1, 4595.0], [69.2, 4595.0], [69.3, 4595.0], [69.4, 4595.0], [69.5, 4595.0], [69.6, 4595.0], [69.7, 4595.0], [69.8, 4595.0], [69.9, 4595.0], [70.0, 4615.0], [70.1, 4615.0], [70.2, 4615.0], [70.3, 4615.0], [70.4, 4615.0], [70.5, 4615.0], [70.6, 4615.0], [70.7, 4615.0], [70.8, 4615.0], [70.9, 4615.0], [71.0, 4642.0], [71.1, 4642.0], [71.2, 4642.0], [71.3, 4642.0], [71.4, 4642.0], [71.5, 4642.0], [71.6, 4642.0], [71.7, 4642.0], [71.8, 4642.0], [71.9, 4642.0], [72.0, 4648.0], [72.1, 4648.0], [72.2, 4648.0], [72.3, 4648.0], [72.4, 4648.0], [72.5, 4648.0], [72.6, 4648.0], [72.7, 4648.0], [72.8, 4648.0], [72.9, 4648.0], [73.0, 4679.0], [73.1, 4679.0], [73.2, 4679.0], [73.3, 4679.0], [73.4, 4679.0], [73.5, 4679.0], [73.6, 4679.0], [73.7, 4679.0], [73.8, 4679.0], [73.9, 4679.0], [74.0, 4684.0], [74.1, 4684.0], [74.2, 4684.0], [74.3, 4684.0], [74.4, 4684.0], [74.5, 4684.0], [74.6, 4684.0], [74.7, 4684.0], [74.8, 4684.0], [74.9, 4684.0], [75.0, 4687.0], [75.1, 4687.0], [75.2, 4687.0], [75.3, 4687.0], [75.4, 4687.0], [75.5, 4687.0], [75.6, 4687.0], [75.7, 4687.0], [75.8, 4687.0], [75.9, 4687.0], [76.0, 4715.0], [76.1, 4715.0], [76.2, 4715.0], [76.3, 4715.0], [76.4, 4715.0], [76.5, 4715.0], [76.6, 4715.0], [76.7, 4715.0], [76.8, 4715.0], [76.9, 4715.0], [77.0, 4752.0], [77.1, 4752.0], [77.2, 4752.0], [77.3, 4752.0], [77.4, 4752.0], [77.5, 4752.0], [77.6, 4752.0], [77.7, 4752.0], [77.8, 4752.0], [77.9, 4752.0], [78.0, 4787.0], [78.1, 4787.0], [78.2, 4787.0], [78.3, 4787.0], [78.4, 4787.0], [78.5, 4787.0], [78.6, 4787.0], [78.7, 4787.0], [78.8, 4787.0], [78.9, 4787.0], [79.0, 4813.0], [79.1, 4813.0], [79.2, 4813.0], [79.3, 4813.0], [79.4, 4813.0], [79.5, 4813.0], [79.6, 4813.0], [79.7, 4813.0], [79.8, 4813.0], [79.9, 4813.0], [80.0, 5011.0], [80.1, 5011.0], [80.2, 5011.0], [80.3, 5011.0], [80.4, 5011.0], [80.5, 5011.0], [80.6, 5011.0], [80.7, 5011.0], [80.8, 5011.0], [80.9, 5011.0], [81.0, 5045.0], [81.1, 5045.0], [81.2, 5045.0], [81.3, 5045.0], [81.4, 5045.0], [81.5, 5045.0], [81.6, 5045.0], [81.7, 5045.0], [81.8, 5045.0], [81.9, 5045.0], [82.0, 5050.0], [82.1, 5050.0], [82.2, 5050.0], [82.3, 5050.0], [82.4, 5050.0], [82.5, 5050.0], [82.6, 5050.0], [82.7, 5050.0], [82.8, 5050.0], [82.9, 5050.0], [83.0, 5127.0], [83.1, 5127.0], [83.2, 5127.0], [83.3, 5127.0], [83.4, 5127.0], [83.5, 5127.0], [83.6, 5127.0], [83.7, 5127.0], [83.8, 5127.0], [83.9, 5127.0], [84.0, 5179.0], [84.1, 5179.0], [84.2, 5179.0], [84.3, 5179.0], [84.4, 5179.0], [84.5, 5179.0], [84.6, 5179.0], [84.7, 5179.0], [84.8, 5179.0], [84.9, 5179.0], [85.0, 5253.0], [85.1, 5253.0], [85.2, 5253.0], [85.3, 5253.0], [85.4, 5253.0], [85.5, 5253.0], [85.6, 5253.0], [85.7, 5253.0], [85.8, 5253.0], [85.9, 5253.0], [86.0, 5342.0], [86.1, 5342.0], [86.2, 5342.0], [86.3, 5342.0], [86.4, 5342.0], [86.5, 5342.0], [86.6, 5342.0], [86.7, 5342.0], [86.8, 5342.0], [86.9, 5342.0], [87.0, 5361.0], [87.1, 5361.0], [87.2, 5361.0], [87.3, 5361.0], [87.4, 5361.0], [87.5, 5361.0], [87.6, 5361.0], [87.7, 5361.0], [87.8, 5361.0], [87.9, 5361.0], [88.0, 5371.0], [88.1, 5371.0], [88.2, 5371.0], [88.3, 5371.0], [88.4, 5371.0], [88.5, 5371.0], [88.6, 5371.0], [88.7, 5371.0], [88.8, 5371.0], [88.9, 5371.0], [89.0, 5435.0], [89.1, 5435.0], [89.2, 5435.0], [89.3, 5435.0], [89.4, 5435.0], [89.5, 5435.0], [89.6, 5435.0], [89.7, 5435.0], [89.8, 5435.0], [89.9, 5435.0], [90.0, 5500.0], [90.1, 5500.0], [90.2, 5500.0], [90.3, 5500.0], [90.4, 5500.0], [90.5, 5500.0], [90.6, 5500.0], [90.7, 5500.0], [90.8, 5500.0], [90.9, 5500.0], [91.0, 5539.0], [91.1, 5539.0], [91.2, 5539.0], [91.3, 5539.0], [91.4, 5539.0], [91.5, 5539.0], [91.6, 5539.0], [91.7, 5539.0], [91.8, 5539.0], [91.9, 5539.0], [92.0, 5584.0], [92.1, 5584.0], [92.2, 5584.0], [92.3, 5584.0], [92.4, 5584.0], [92.5, 5584.0], [92.6, 5584.0], [92.7, 5584.0], [92.8, 5584.0], [92.9, 5584.0], [93.0, 5684.0], [93.1, 5684.0], [93.2, 5684.0], [93.3, 5684.0], [93.4, 5684.0], [93.5, 5684.0], [93.6, 5684.0], [93.7, 5684.0], [93.8, 5684.0], [93.9, 5684.0], [94.0, 5754.0], [94.1, 5754.0], [94.2, 5754.0], [94.3, 5754.0], [94.4, 5754.0], [94.5, 5754.0], [94.6, 5754.0], [94.7, 5754.0], [94.8, 5754.0], [94.9, 5754.0], [95.0, 5951.0], [95.1, 5951.0], [95.2, 5951.0], [95.3, 5951.0], [95.4, 5951.0], [95.5, 5951.0], [95.6, 5951.0], [95.7, 5951.0], [95.8, 5951.0], [95.9, 5951.0], [96.0, 6230.0], [96.1, 6230.0], [96.2, 6230.0], [96.3, 6230.0], [96.4, 6230.0], [96.5, 6230.0], [96.6, 6230.0], [96.7, 6230.0], [96.8, 6230.0], [96.9, 6230.0], [97.0, 6326.0], [97.1, 6326.0], [97.2, 6326.0], [97.3, 6326.0], [97.4, 6326.0], [97.5, 6326.0], [97.6, 6326.0], [97.7, 6326.0], [97.8, 6326.0], [97.9, 6326.0], [98.0, 6422.0], [98.1, 6422.0], [98.2, 6422.0], [98.3, 6422.0], [98.4, 6422.0], [98.5, 6422.0], [98.6, 6422.0], [98.7, 6422.0], [98.8, 6422.0], [98.9, 6422.0], [99.0, 7302.0], [99.1, 7302.0], [99.2, 7302.0], [99.3, 7302.0], [99.4, 7302.0], [99.5, 7302.0], [99.6, 7302.0], [99.7, 7302.0], [99.8, 7302.0], [99.9, 7302.0]], "isOverall": false, "label": "View Items", "isController": false}, {"data": [[0.0, 2150.0], [0.1, 2150.0], [0.2, 2150.0], [0.3, 2150.0], [0.4, 2150.0], [0.5, 2150.0], [0.6, 2150.0], [0.7, 2150.0], [0.8, 2150.0], [0.9, 2150.0], [1.0, 2180.0], [1.1, 2180.0], [1.2, 2180.0], [1.3, 2180.0], [1.4, 2180.0], [1.5, 2180.0], [1.6, 2180.0], [1.7, 2180.0], [1.8, 2180.0], [1.9, 2180.0], [2.0, 2212.0], [2.1, 2212.0], [2.2, 2212.0], [2.3, 2212.0], [2.4, 2212.0], [2.5, 2212.0], [2.6, 2212.0], [2.7, 2212.0], [2.8, 2212.0], [2.9, 2212.0], [3.0, 2213.0], [3.1, 2213.0], [3.2, 2213.0], [3.3, 2213.0], [3.4, 2213.0], [3.5, 2213.0], [3.6, 2213.0], [3.7, 2213.0], [3.8, 2213.0], [3.9, 2213.0], [4.0, 2219.0], [4.1, 2219.0], [4.2, 2219.0], [4.3, 2219.0], [4.4, 2219.0], [4.5, 2219.0], [4.6, 2219.0], [4.7, 2219.0], [4.8, 2219.0], [4.9, 2219.0], [5.0, 2219.0], [5.1, 2219.0], [5.2, 2219.0], [5.3, 2219.0], [5.4, 2219.0], [5.5, 2219.0], [5.6, 2219.0], [5.7, 2219.0], [5.8, 2219.0], [5.9, 2219.0], [6.0, 2228.0], [6.1, 2228.0], [6.2, 2228.0], [6.3, 2228.0], [6.4, 2228.0], [6.5, 2228.0], [6.6, 2228.0], [6.7, 2228.0], [6.8, 2228.0], [6.9, 2228.0], [7.0, 2235.0], [7.1, 2235.0], [7.2, 2235.0], [7.3, 2235.0], [7.4, 2235.0], [7.5, 2235.0], [7.6, 2235.0], [7.7, 2235.0], [7.8, 2235.0], [7.9, 2235.0], [8.0, 2253.0], [8.1, 2253.0], [8.2, 2253.0], [8.3, 2253.0], [8.4, 2253.0], [8.5, 2253.0], [8.6, 2253.0], [8.7, 2253.0], [8.8, 2253.0], [8.9, 2253.0], [9.0, 2254.0], [9.1, 2254.0], [9.2, 2254.0], [9.3, 2254.0], [9.4, 2254.0], [9.5, 2254.0], [9.6, 2254.0], [9.7, 2254.0], [9.8, 2254.0], [9.9, 2254.0], [10.0, 2255.0], [10.1, 2255.0], [10.2, 2255.0], [10.3, 2255.0], [10.4, 2255.0], [10.5, 2255.0], [10.6, 2255.0], [10.7, 2255.0], [10.8, 2255.0], [10.9, 2255.0], [11.0, 2258.0], [11.1, 2258.0], [11.2, 2258.0], [11.3, 2258.0], [11.4, 2258.0], [11.5, 2258.0], [11.6, 2258.0], [11.7, 2258.0], [11.8, 2258.0], [11.9, 2258.0], [12.0, 2261.0], [12.1, 2261.0], [12.2, 2261.0], [12.3, 2261.0], [12.4, 2261.0], [12.5, 2261.0], [12.6, 2261.0], [12.7, 2261.0], [12.8, 2261.0], [12.9, 2261.0], [13.0, 2268.0], [13.1, 2268.0], [13.2, 2268.0], [13.3, 2268.0], [13.4, 2268.0], [13.5, 2268.0], [13.6, 2268.0], [13.7, 2268.0], [13.8, 2268.0], [13.9, 2268.0], [14.0, 2272.0], [14.1, 2272.0], [14.2, 2272.0], [14.3, 2272.0], [14.4, 2272.0], [14.5, 2272.0], [14.6, 2272.0], [14.7, 2272.0], [14.8, 2272.0], [14.9, 2272.0], [15.0, 2273.0], [15.1, 2273.0], [15.2, 2273.0], [15.3, 2273.0], [15.4, 2273.0], [15.5, 2273.0], [15.6, 2273.0], [15.7, 2273.0], [15.8, 2273.0], [15.9, 2273.0], [16.0, 2280.0], [16.1, 2280.0], [16.2, 2280.0], [16.3, 2280.0], [16.4, 2280.0], [16.5, 2280.0], [16.6, 2280.0], [16.7, 2280.0], [16.8, 2280.0], [16.9, 2280.0], [17.0, 2281.0], [17.1, 2281.0], [17.2, 2281.0], [17.3, 2281.0], [17.4, 2281.0], [17.5, 2281.0], [17.6, 2281.0], [17.7, 2281.0], [17.8, 2281.0], [17.9, 2281.0], [18.0, 2286.0], [18.1, 2286.0], [18.2, 2286.0], [18.3, 2286.0], [18.4, 2286.0], [18.5, 2286.0], [18.6, 2286.0], [18.7, 2286.0], [18.8, 2286.0], [18.9, 2286.0], [19.0, 2288.0], [19.1, 2288.0], [19.2, 2288.0], [19.3, 2288.0], [19.4, 2288.0], [19.5, 2288.0], [19.6, 2288.0], [19.7, 2288.0], [19.8, 2288.0], [19.9, 2288.0], [20.0, 2290.0], [20.1, 2290.0], [20.2, 2290.0], [20.3, 2290.0], [20.4, 2290.0], [20.5, 2290.0], [20.6, 2290.0], [20.7, 2290.0], [20.8, 2290.0], [20.9, 2290.0], [21.0, 2291.0], [21.1, 2291.0], [21.2, 2291.0], [21.3, 2291.0], [21.4, 2291.0], [21.5, 2291.0], [21.6, 2291.0], [21.7, 2291.0], [21.8, 2291.0], [21.9, 2291.0], [22.0, 2297.0], [22.1, 2297.0], [22.2, 2297.0], [22.3, 2297.0], [22.4, 2297.0], [22.5, 2297.0], [22.6, 2297.0], [22.7, 2297.0], [22.8, 2297.0], [22.9, 2297.0], [23.0, 2300.0], [23.1, 2300.0], [23.2, 2300.0], [23.3, 2300.0], [23.4, 2300.0], [23.5, 2300.0], [23.6, 2300.0], [23.7, 2300.0], [23.8, 2300.0], [23.9, 2300.0], [24.0, 2311.0], [24.1, 2311.0], [24.2, 2311.0], [24.3, 2311.0], [24.4, 2311.0], [24.5, 2311.0], [24.6, 2311.0], [24.7, 2311.0], [24.8, 2311.0], [24.9, 2311.0], [25.0, 2315.0], [25.1, 2315.0], [25.2, 2315.0], [25.3, 2315.0], [25.4, 2315.0], [25.5, 2315.0], [25.6, 2315.0], [25.7, 2315.0], [25.8, 2315.0], [25.9, 2315.0], [26.0, 2338.0], [26.1, 2338.0], [26.2, 2338.0], [26.3, 2338.0], [26.4, 2338.0], [26.5, 2338.0], [26.6, 2338.0], [26.7, 2338.0], [26.8, 2338.0], [26.9, 2338.0], [27.0, 2344.0], [27.1, 2344.0], [27.2, 2344.0], [27.3, 2344.0], [27.4, 2344.0], [27.5, 2344.0], [27.6, 2344.0], [27.7, 2344.0], [27.8, 2344.0], [27.9, 2344.0], [28.0, 2357.0], [28.1, 2357.0], [28.2, 2357.0], [28.3, 2357.0], [28.4, 2357.0], [28.5, 2357.0], [28.6, 2357.0], [28.7, 2357.0], [28.8, 2357.0], [28.9, 2357.0], [29.0, 2375.0], [29.1, 2375.0], [29.2, 2375.0], [29.3, 2375.0], [29.4, 2375.0], [29.5, 2375.0], [29.6, 2375.0], [29.7, 2375.0], [29.8, 2375.0], [29.9, 2375.0], [30.0, 2385.0], [30.1, 2385.0], [30.2, 2385.0], [30.3, 2385.0], [30.4, 2385.0], [30.5, 2385.0], [30.6, 2385.0], [30.7, 2385.0], [30.8, 2385.0], [30.9, 2385.0], [31.0, 2387.0], [31.1, 2387.0], [31.2, 2387.0], [31.3, 2387.0], [31.4, 2387.0], [31.5, 2387.0], [31.6, 2387.0], [31.7, 2387.0], [31.8, 2387.0], [31.9, 2387.0], [32.0, 2398.0], [32.1, 2398.0], [32.2, 2398.0], [32.3, 2398.0], [32.4, 2398.0], [32.5, 2398.0], [32.6, 2398.0], [32.7, 2398.0], [32.8, 2398.0], [32.9, 2398.0], [33.0, 2400.0], [33.1, 2400.0], [33.2, 2400.0], [33.3, 2400.0], [33.4, 2400.0], [33.5, 2400.0], [33.6, 2400.0], [33.7, 2400.0], [33.8, 2400.0], [33.9, 2400.0], [34.0, 2404.0], [34.1, 2404.0], [34.2, 2404.0], [34.3, 2404.0], [34.4, 2404.0], [34.5, 2404.0], [34.6, 2404.0], [34.7, 2404.0], [34.8, 2404.0], [34.9, 2404.0], [35.0, 2422.0], [35.1, 2422.0], [35.2, 2422.0], [35.3, 2422.0], [35.4, 2422.0], [35.5, 2422.0], [35.6, 2422.0], [35.7, 2422.0], [35.8, 2422.0], [35.9, 2422.0], [36.0, 2429.0], [36.1, 2429.0], [36.2, 2429.0], [36.3, 2429.0], [36.4, 2429.0], [36.5, 2429.0], [36.6, 2429.0], [36.7, 2429.0], [36.8, 2429.0], [36.9, 2429.0], [37.0, 2487.0], [37.1, 2487.0], [37.2, 2487.0], [37.3, 2487.0], [37.4, 2487.0], [37.5, 2487.0], [37.6, 2487.0], [37.7, 2487.0], [37.8, 2487.0], [37.9, 2487.0], [38.0, 2517.0], [38.1, 2517.0], [38.2, 2517.0], [38.3, 2517.0], [38.4, 2517.0], [38.5, 2517.0], [38.6, 2517.0], [38.7, 2517.0], [38.8, 2517.0], [38.9, 2517.0], [39.0, 2523.0], [39.1, 2523.0], [39.2, 2523.0], [39.3, 2523.0], [39.4, 2523.0], [39.5, 2523.0], [39.6, 2523.0], [39.7, 2523.0], [39.8, 2523.0], [39.9, 2523.0], [40.0, 2531.0], [40.1, 2531.0], [40.2, 2531.0], [40.3, 2531.0], [40.4, 2531.0], [40.5, 2531.0], [40.6, 2531.0], [40.7, 2531.0], [40.8, 2531.0], [40.9, 2531.0], [41.0, 2564.0], [41.1, 2564.0], [41.2, 2564.0], [41.3, 2564.0], [41.4, 2564.0], [41.5, 2564.0], [41.6, 2564.0], [41.7, 2564.0], [41.8, 2564.0], [41.9, 2564.0], [42.0, 2589.0], [42.1, 2589.0], [42.2, 2589.0], [42.3, 2589.0], [42.4, 2589.0], [42.5, 2589.0], [42.6, 2589.0], [42.7, 2589.0], [42.8, 2589.0], [42.9, 2589.0], [43.0, 2610.0], [43.1, 2610.0], [43.2, 2610.0], [43.3, 2610.0], [43.4, 2610.0], [43.5, 2610.0], [43.6, 2610.0], [43.7, 2610.0], [43.8, 2610.0], [43.9, 2610.0], [44.0, 2625.0], [44.1, 2625.0], [44.2, 2625.0], [44.3, 2625.0], [44.4, 2625.0], [44.5, 2625.0], [44.6, 2625.0], [44.7, 2625.0], [44.8, 2625.0], [44.9, 2625.0], [45.0, 2633.0], [45.1, 2633.0], [45.2, 2633.0], [45.3, 2633.0], [45.4, 2633.0], [45.5, 2633.0], [45.6, 2633.0], [45.7, 2633.0], [45.8, 2633.0], [45.9, 2633.0], [46.0, 2640.0], [46.1, 2640.0], [46.2, 2640.0], [46.3, 2640.0], [46.4, 2640.0], [46.5, 2640.0], [46.6, 2640.0], [46.7, 2640.0], [46.8, 2640.0], [46.9, 2640.0], [47.0, 2648.0], [47.1, 2648.0], [47.2, 2648.0], [47.3, 2648.0], [47.4, 2648.0], [47.5, 2648.0], [47.6, 2648.0], [47.7, 2648.0], [47.8, 2648.0], [47.9, 2648.0], [48.0, 2678.0], [48.1, 2678.0], [48.2, 2678.0], [48.3, 2678.0], [48.4, 2678.0], [48.5, 2678.0], [48.6, 2678.0], [48.7, 2678.0], [48.8, 2678.0], [48.9, 2678.0], [49.0, 2755.0], [49.1, 2755.0], [49.2, 2755.0], [49.3, 2755.0], [49.4, 2755.0], [49.5, 2755.0], [49.6, 2755.0], [49.7, 2755.0], [49.8, 2755.0], [49.9, 2755.0], [50.0, 2766.0], [50.1, 2766.0], [50.2, 2766.0], [50.3, 2766.0], [50.4, 2766.0], [50.5, 2766.0], [50.6, 2766.0], [50.7, 2766.0], [50.8, 2766.0], [50.9, 2766.0], [51.0, 2868.0], [51.1, 2868.0], [51.2, 2868.0], [51.3, 2868.0], [51.4, 2868.0], [51.5, 2868.0], [51.6, 2868.0], [51.7, 2868.0], [51.8, 2868.0], [51.9, 2868.0], [52.0, 2901.0], [52.1, 2901.0], [52.2, 2901.0], [52.3, 2901.0], [52.4, 2901.0], [52.5, 2901.0], [52.6, 2901.0], [52.7, 2901.0], [52.8, 2901.0], [52.9, 2901.0], [53.0, 2927.0], [53.1, 2927.0], [53.2, 2927.0], [53.3, 2927.0], [53.4, 2927.0], [53.5, 2927.0], [53.6, 2927.0], [53.7, 2927.0], [53.8, 2927.0], [53.9, 2927.0], [54.0, 2931.0], [54.1, 2931.0], [54.2, 2931.0], [54.3, 2931.0], [54.4, 2931.0], [54.5, 2931.0], [54.6, 2931.0], [54.7, 2931.0], [54.8, 2931.0], [54.9, 2931.0], [55.0, 2948.0], [55.1, 2948.0], [55.2, 2948.0], [55.3, 2948.0], [55.4, 2948.0], [55.5, 2948.0], [55.6, 2948.0], [55.7, 2948.0], [55.8, 2948.0], [55.9, 2948.0], [56.0, 2950.0], [56.1, 2950.0], [56.2, 2950.0], [56.3, 2950.0], [56.4, 2950.0], [56.5, 2950.0], [56.6, 2950.0], [56.7, 2950.0], [56.8, 2950.0], [56.9, 2950.0], [57.0, 2973.0], [57.1, 2973.0], [57.2, 2973.0], [57.3, 2973.0], [57.4, 2973.0], [57.5, 2973.0], [57.6, 2973.0], [57.7, 2973.0], [57.8, 2973.0], [57.9, 2973.0], [58.0, 2979.0], [58.1, 2979.0], [58.2, 2979.0], [58.3, 2979.0], [58.4, 2979.0], [58.5, 2979.0], [58.6, 2979.0], [58.7, 2979.0], [58.8, 2979.0], [58.9, 2979.0], [59.0, 3012.0], [59.1, 3012.0], [59.2, 3012.0], [59.3, 3012.0], [59.4, 3012.0], [59.5, 3012.0], [59.6, 3012.0], [59.7, 3012.0], [59.8, 3012.0], [59.9, 3012.0], [60.0, 3086.0], [60.1, 3086.0], [60.2, 3086.0], [60.3, 3086.0], [60.4, 3086.0], [60.5, 3086.0], [60.6, 3086.0], [60.7, 3086.0], [60.8, 3086.0], [60.9, 3086.0], [61.0, 3092.0], [61.1, 3092.0], [61.2, 3092.0], [61.3, 3092.0], [61.4, 3092.0], [61.5, 3092.0], [61.6, 3092.0], [61.7, 3092.0], [61.8, 3092.0], [61.9, 3092.0], [62.0, 3102.0], [62.1, 3102.0], [62.2, 3102.0], [62.3, 3102.0], [62.4, 3102.0], [62.5, 3102.0], [62.6, 3102.0], [62.7, 3102.0], [62.8, 3102.0], [62.9, 3102.0], [63.0, 3111.0], [63.1, 3111.0], [63.2, 3111.0], [63.3, 3111.0], [63.4, 3111.0], [63.5, 3111.0], [63.6, 3111.0], [63.7, 3111.0], [63.8, 3111.0], [63.9, 3111.0], [64.0, 3169.0], [64.1, 3169.0], [64.2, 3169.0], [64.3, 3169.0], [64.4, 3169.0], [64.5, 3169.0], [64.6, 3169.0], [64.7, 3169.0], [64.8, 3169.0], [64.9, 3169.0], [65.0, 3175.0], [65.1, 3175.0], [65.2, 3175.0], [65.3, 3175.0], [65.4, 3175.0], [65.5, 3175.0], [65.6, 3175.0], [65.7, 3175.0], [65.8, 3175.0], [65.9, 3175.0], [66.0, 3179.0], [66.1, 3179.0], [66.2, 3179.0], [66.3, 3179.0], [66.4, 3179.0], [66.5, 3179.0], [66.6, 3179.0], [66.7, 3179.0], [66.8, 3179.0], [66.9, 3179.0], [67.0, 3206.0], [67.1, 3206.0], [67.2, 3206.0], [67.3, 3206.0], [67.4, 3206.0], [67.5, 3206.0], [67.6, 3206.0], [67.7, 3206.0], [67.8, 3206.0], [67.9, 3206.0], [68.0, 3250.0], [68.1, 3250.0], [68.2, 3250.0], [68.3, 3250.0], [68.4, 3250.0], [68.5, 3250.0], [68.6, 3250.0], [68.7, 3250.0], [68.8, 3250.0], [68.9, 3250.0], [69.0, 3261.0], [69.1, 3261.0], [69.2, 3261.0], [69.3, 3261.0], [69.4, 3261.0], [69.5, 3261.0], [69.6, 3261.0], [69.7, 3261.0], [69.8, 3261.0], [69.9, 3261.0], [70.0, 3273.0], [70.1, 3273.0], [70.2, 3273.0], [70.3, 3273.0], [70.4, 3273.0], [70.5, 3273.0], [70.6, 3273.0], [70.7, 3273.0], [70.8, 3273.0], [70.9, 3273.0], [71.0, 3276.0], [71.1, 3276.0], [71.2, 3276.0], [71.3, 3276.0], [71.4, 3276.0], [71.5, 3276.0], [71.6, 3276.0], [71.7, 3276.0], [71.8, 3276.0], [71.9, 3276.0], [72.0, 3299.0], [72.1, 3299.0], [72.2, 3299.0], [72.3, 3299.0], [72.4, 3299.0], [72.5, 3299.0], [72.6, 3299.0], [72.7, 3299.0], [72.8, 3299.0], [72.9, 3299.0], [73.0, 3357.0], [73.1, 3357.0], [73.2, 3357.0], [73.3, 3357.0], [73.4, 3357.0], [73.5, 3357.0], [73.6, 3357.0], [73.7, 3357.0], [73.8, 3357.0], [73.9, 3357.0], [74.0, 3406.0], [74.1, 3406.0], [74.2, 3406.0], [74.3, 3406.0], [74.4, 3406.0], [74.5, 3406.0], [74.6, 3406.0], [74.7, 3406.0], [74.8, 3406.0], [74.9, 3406.0], [75.0, 3449.0], [75.1, 3449.0], [75.2, 3449.0], [75.3, 3449.0], [75.4, 3449.0], [75.5, 3449.0], [75.6, 3449.0], [75.7, 3449.0], [75.8, 3449.0], [75.9, 3449.0], [76.0, 3486.0], [76.1, 3486.0], [76.2, 3486.0], [76.3, 3486.0], [76.4, 3486.0], [76.5, 3486.0], [76.6, 3486.0], [76.7, 3486.0], [76.8, 3486.0], [76.9, 3486.0], [77.0, 3491.0], [77.1, 3491.0], [77.2, 3491.0], [77.3, 3491.0], [77.4, 3491.0], [77.5, 3491.0], [77.6, 3491.0], [77.7, 3491.0], [77.8, 3491.0], [77.9, 3491.0], [78.0, 3516.0], [78.1, 3516.0], [78.2, 3516.0], [78.3, 3516.0], [78.4, 3516.0], [78.5, 3516.0], [78.6, 3516.0], [78.7, 3516.0], [78.8, 3516.0], [78.9, 3516.0], [79.0, 3520.0], [79.1, 3520.0], [79.2, 3520.0], [79.3, 3520.0], [79.4, 3520.0], [79.5, 3520.0], [79.6, 3520.0], [79.7, 3520.0], [79.8, 3520.0], [79.9, 3520.0], [80.0, 3538.0], [80.1, 3538.0], [80.2, 3538.0], [80.3, 3538.0], [80.4, 3538.0], [80.5, 3538.0], [80.6, 3538.0], [80.7, 3538.0], [80.8, 3538.0], [80.9, 3538.0], [81.0, 3563.0], [81.1, 3563.0], [81.2, 3563.0], [81.3, 3563.0], [81.4, 3563.0], [81.5, 3563.0], [81.6, 3563.0], [81.7, 3563.0], [81.8, 3563.0], [81.9, 3563.0], [82.0, 3591.0], [82.1, 3591.0], [82.2, 3591.0], [82.3, 3591.0], [82.4, 3591.0], [82.5, 3591.0], [82.6, 3591.0], [82.7, 3591.0], [82.8, 3591.0], [82.9, 3591.0], [83.0, 3659.0], [83.1, 3659.0], [83.2, 3659.0], [83.3, 3659.0], [83.4, 3659.0], [83.5, 3659.0], [83.6, 3659.0], [83.7, 3659.0], [83.8, 3659.0], [83.9, 3659.0], [84.0, 3683.0], [84.1, 3683.0], [84.2, 3683.0], [84.3, 3683.0], [84.4, 3683.0], [84.5, 3683.0], [84.6, 3683.0], [84.7, 3683.0], [84.8, 3683.0], [84.9, 3683.0], [85.0, 3683.0], [85.1, 3683.0], [85.2, 3683.0], [85.3, 3683.0], [85.4, 3683.0], [85.5, 3683.0], [85.6, 3683.0], [85.7, 3683.0], [85.8, 3683.0], [85.9, 3683.0], [86.0, 3688.0], [86.1, 3688.0], [86.2, 3688.0], [86.3, 3688.0], [86.4, 3688.0], [86.5, 3688.0], [86.6, 3688.0], [86.7, 3688.0], [86.8, 3688.0], [86.9, 3688.0], [87.0, 3762.0], [87.1, 3762.0], [87.2, 3762.0], [87.3, 3762.0], [87.4, 3762.0], [87.5, 3762.0], [87.6, 3762.0], [87.7, 3762.0], [87.8, 3762.0], [87.9, 3762.0], [88.0, 3764.0], [88.1, 3764.0], [88.2, 3764.0], [88.3, 3764.0], [88.4, 3764.0], [88.5, 3764.0], [88.6, 3764.0], [88.7, 3764.0], [88.8, 3764.0], [88.9, 3764.0], [89.0, 3910.0], [89.1, 3910.0], [89.2, 3910.0], [89.3, 3910.0], [89.4, 3910.0], [89.5, 3910.0], [89.6, 3910.0], [89.7, 3910.0], [89.8, 3910.0], [89.9, 3910.0], [90.0, 3950.0], [90.1, 3950.0], [90.2, 3950.0], [90.3, 3950.0], [90.4, 3950.0], [90.5, 3950.0], [90.6, 3950.0], [90.7, 3950.0], [90.8, 3950.0], [90.9, 3950.0], [91.0, 4171.0], [91.1, 4171.0], [91.2, 4171.0], [91.3, 4171.0], [91.4, 4171.0], [91.5, 4171.0], [91.6, 4171.0], [91.7, 4171.0], [91.8, 4171.0], [91.9, 4171.0], [92.0, 4241.0], [92.1, 4241.0], [92.2, 4241.0], [92.3, 4241.0], [92.4, 4241.0], [92.5, 4241.0], [92.6, 4241.0], [92.7, 4241.0], [92.8, 4241.0], [92.9, 4241.0], [93.0, 4283.0], [93.1, 4283.0], [93.2, 4283.0], [93.3, 4283.0], [93.4, 4283.0], [93.5, 4283.0], [93.6, 4283.0], [93.7, 4283.0], [93.8, 4283.0], [93.9, 4283.0], [94.0, 4286.0], [94.1, 4286.0], [94.2, 4286.0], [94.3, 4286.0], [94.4, 4286.0], [94.5, 4286.0], [94.6, 4286.0], [94.7, 4286.0], [94.8, 4286.0], [94.9, 4286.0], [95.0, 4462.0], [95.1, 4462.0], [95.2, 4462.0], [95.3, 4462.0], [95.4, 4462.0], [95.5, 4462.0], [95.6, 4462.0], [95.7, 4462.0], [95.8, 4462.0], [95.9, 4462.0], [96.0, 4564.0], [96.1, 4564.0], [96.2, 4564.0], [96.3, 4564.0], [96.4, 4564.0], [96.5, 4564.0], [96.6, 4564.0], [96.7, 4564.0], [96.8, 4564.0], [96.9, 4564.0], [97.0, 4680.0], [97.1, 4680.0], [97.2, 4680.0], [97.3, 4680.0], [97.4, 4680.0], [97.5, 4680.0], [97.6, 4680.0], [97.7, 4680.0], [97.8, 4680.0], [97.9, 4680.0], [98.0, 5114.0], [98.1, 5114.0], [98.2, 5114.0], [98.3, 5114.0], [98.4, 5114.0], [98.5, 5114.0], [98.6, 5114.0], [98.7, 5114.0], [98.8, 5114.0], [98.9, 5114.0], [99.0, 5322.0], [99.1, 5322.0], [99.2, 5322.0], [99.3, 5322.0], [99.4, 5322.0], [99.5, 5322.0], [99.6, 5322.0], [99.7, 5322.0], [99.8, 5322.0], [99.9, 5322.0]], "isOverall": false, "label": "Compare Item", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 1800.0, "maxY": 21.0, "series": [{"data": [[1800.0, 2.0], [1900.0, 18.0], [2000.0, 7.0], [2100.0, 4.0], [2300.0, 6.0], [2200.0, 6.0], [2400.0, 5.0], [2500.0, 3.0], [2600.0, 6.0], [2700.0, 7.0], [2800.0, 2.0], [2900.0, 6.0], [3000.0, 4.0], [3100.0, 2.0], [3200.0, 2.0], [3300.0, 3.0], [3400.0, 2.0], [3500.0, 2.0], [3700.0, 1.0], [3800.0, 2.0], [3900.0, 1.0], [4000.0, 1.0], [4300.0, 3.0], [4600.0, 1.0], [4500.0, 2.0], [4400.0, 1.0], [4700.0, 1.0]], "isOverall": false, "label": "Category Drill down", "isController": false}, {"data": [[8200.0, 1.0], [8400.0, 1.0], [9200.0, 1.0], [3700.0, 1.0], [3800.0, 1.0], [3900.0, 1.0], [4000.0, 2.0], [4100.0, 4.0], [4200.0, 4.0], [4300.0, 2.0], [4600.0, 6.0], [4500.0, 3.0], [4400.0, 3.0], [4700.0, 5.0], [4800.0, 5.0], [5100.0, 5.0], [5000.0, 5.0], [4900.0, 4.0], [5200.0, 4.0], [5300.0, 3.0], [5600.0, 2.0], [5500.0, 4.0], [5400.0, 4.0], [5700.0, 6.0], [5800.0, 3.0], [5900.0, 2.0], [6100.0, 2.0], [6000.0, 4.0], [6200.0, 1.0], [6300.0, 1.0], [6500.0, 1.0], [6600.0, 1.0], [6900.0, 3.0], [6700.0, 2.0], [7100.0, 1.0], [7300.0, 2.0]], "isOverall": false, "label": "Item Details", "isController": false}, {"data": [[2300.0, 1.0], [2500.0, 1.0], [2600.0, 1.0], [2800.0, 5.0], [2700.0, 3.0], [2900.0, 2.0], [3000.0, 3.0], [3100.0, 6.0], [3300.0, 3.0], [3400.0, 4.0], [3500.0, 3.0], [3600.0, 2.0], [3700.0, 1.0], [3800.0, 4.0], [3900.0, 1.0], [4000.0, 9.0], [4200.0, 3.0], [4100.0, 6.0], [4300.0, 5.0], [4400.0, 4.0], [4500.0, 3.0], [4600.0, 6.0], [4700.0, 3.0], [4800.0, 1.0], [5000.0, 3.0], [5100.0, 2.0], [5200.0, 1.0], [5300.0, 3.0], [5400.0, 1.0], [5500.0, 3.0], [5600.0, 1.0], [5700.0, 1.0], [5900.0, 1.0], [6200.0, 1.0], [6300.0, 1.0], [6400.0, 1.0], [7300.0, 1.0]], "isOverall": false, "label": "View Items", "isController": false}, {"data": [[2100.0, 2.0], [2300.0, 10.0], [2200.0, 21.0], [2400.0, 5.0], [2500.0, 5.0], [2600.0, 6.0], [2800.0, 1.0], [2700.0, 2.0], [2900.0, 7.0], [3000.0, 3.0], [3100.0, 5.0], [3200.0, 6.0], [3300.0, 1.0], [3400.0, 4.0], [3500.0, 5.0], [3700.0, 2.0], [3600.0, 4.0], [3900.0, 2.0], [4200.0, 3.0], [4100.0, 1.0], [4500.0, 1.0], [4600.0, 1.0], [4400.0, 1.0], [5100.0, 1.0], [5300.0, 1.0]], "isOverall": false, "label": "Compare Item", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 9200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 400.0, "minX": 2.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 400.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 400.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 69.2750000000001, "minX": 1.57312092E12, "maxY": 69.2750000000001, "series": [{"data": [[1.57312092E12, 69.2750000000001]], "isOverall": false, "label": "User_100-10", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57312092E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1898.0, "minX": 1.0, "maxY": 7600.5, "series": [{"data": [[25.0, 2159.0], [26.0, 2378.5], [27.0, 2028.0], [28.0, 2020.0], [29.0, 1965.5], [30.0, 1923.0], [31.0, 1935.0], [32.0, 1914.0], [34.0, 1947.0], [35.0, 1925.0], [36.0, 1926.0], [37.0, 1927.0], [38.0, 1898.0], [40.0, 1929.0], [41.0, 1943.0], [42.0, 1962.0], [43.0, 1950.0], [44.0, 1901.0], [45.0, 1943.0], [48.0, 2170.0], [49.0, 2132.0], [50.0, 2103.0], [52.0, 2089.0], [53.0, 2343.0], [57.0, 2392.0], [58.0, 2354.0], [59.0, 2362.0], [63.0, 2662.0], [64.0, 2849.0], [66.0, 1989.0], [67.0, 2206.0], [68.0, 2761.0], [69.0, 2738.0], [70.0, 2526.5], [71.0, 3058.0], [72.0, 2239.0], [73.0, 2109.0], [75.0, 2204.0], [76.0, 2555.0], [80.0, 2640.0], [82.0, 2312.0], [83.0, 2969.3333333333335], [86.0, 2332.0], [87.0, 3052.0], [88.0, 3478.0], [93.0, 3527.0], [95.0, 3368.0], [96.0, 2829.5], [98.0, 4514.0], [99.0, 3323.0], [97.0, 4730.0], [100.0, 3278.120000000001]], "isOverall": false, "label": "Category Drill down", "isController": false}, {"data": [[71.52000000000004, 2715.7199999999993]], "isOverall": false, "label": "Category Drill down-Aggregated", "isController": false}, {"data": [[34.0, 4492.0], [37.0, 4693.0], [36.0, 4665.4], [39.0, 4563.0], [41.0, 4831.0], [40.0, 4082.0], [43.0, 4257.0], [42.0, 4786.0], [45.0, 4356.0], [49.0, 4745.0], [48.0, 5682.333333333333], [52.0, 5400.0], [55.0, 4590.5], [56.0, 5223.333333333333], [59.0, 6042.0], [61.0, 4339.0], [60.0, 5825.0], [63.0, 5145.5], [67.0, 5122.5], [66.0, 5268.0], [64.0, 4562.0], [71.0, 5442.0], [70.0, 5770.333333333333], [68.0, 7188.0], [75.0, 5738.0], [72.0, 6775.333333333333], [77.0, 5317.333333333333], [76.0, 6375.5], [80.0, 6303.666666666667], [86.0, 5115.5], [85.0, 6605.0], [91.0, 6259.0], [90.0, 7600.5], [89.0, 5946.0], [95.0, 6587.0], [94.0, 6985.0], [93.0, 6203.5], [92.0, 5123.0], [97.0, 5278.5], [98.0, 4711.0], [96.0, 7397.0], [100.0, 4986.611111111111], [26.0, 3859.0], [29.0, 4914.0], [31.0, 3769.0]], "isOverall": false, "label": "Item Details", "isController": false}, {"data": [[71.72000000000001, 5364.75]], "isOverall": false, "label": "Item Details-Aggregated", "isController": false}, {"data": [[54.0, 2366.0], [55.0, 2602.0], [58.0, 3302.0], [59.0, 3398.5], [60.0, 3057.0], [61.0, 2873.0], [62.0, 3192.6666666666665], [63.0, 3355.5], [66.0, 4165.0], [67.0, 2855.0], [64.0, 5179.0], [68.0, 4212.0], [69.0, 2778.0], [70.0, 2826.0], [71.0, 3516.0], [72.0, 2841.0], [74.0, 4833.0], [75.0, 4416.5], [78.0, 4133.0], [79.0, 4762.0], [77.0, 5371.0], [76.0, 4369.0], [82.0, 4000.5], [83.0, 3158.0], [81.0, 4577.0], [80.0, 4867.2], [84.0, 3469.0], [86.0, 2832.0], [85.0, 5567.666666666667], [88.0, 3071.5], [90.0, 4126.25], [91.0, 4416.0], [92.0, 4010.0], [93.0, 4781.428571428572], [95.0, 4116.0], [98.0, 4203.833333333333], [99.0, 4462.0], [97.0, 4309.0], [96.0, 4151.0], [100.0, 4344.000000000001]], "isOverall": false, "label": "View Items", "isController": false}, {"data": [[83.34000000000002, 4157.209999999999]], "isOverall": false, "label": "View Items-Aggregated", "isController": false}, {"data": [[3.0, 2258.0], [4.0, 2150.0], [5.0, 2258.0], [6.0, 2281.0], [8.0, 2204.0], [9.0, 2255.0], [10.0, 2517.0], [11.0, 2261.0], [12.0, 2219.0], [13.0, 2290.0], [14.0, 2235.0], [15.0, 2268.0], [16.0, 2315.0], [17.0, 2213.0], [18.0, 2286.0], [19.0, 2487.0], [20.0, 2280.0], [21.0, 2253.0], [22.0, 2288.0], [23.0, 2254.0], [24.0, 2311.0], [25.0, 2212.0], [26.0, 2273.0], [27.0, 2291.0], [28.0, 2338.0], [29.0, 2400.0], [30.0, 2385.0], [31.0, 2344.0], [33.0, 2272.0], [32.0, 2357.0], [35.0, 2375.0], [34.0, 2387.0], [37.0, 2422.0], [36.0, 2404.0], [39.0, 2429.0], [38.0, 2398.0], [41.0, 2640.0], [40.0, 2531.0], [43.0, 2610.0], [42.0, 2678.0], [45.0, 2589.0], [44.0, 2931.0], [47.0, 2950.0], [46.0, 2625.0], [49.0, 2523.0], [48.0, 3012.0], [51.0, 3179.0], [50.0, 3449.0], [53.0, 2564.0], [52.0, 3491.0], [55.0, 2633.0], [54.0, 2648.0], [57.0, 3092.0], [56.0, 2973.0], [59.0, 2766.0], [58.0, 2755.0], [61.0, 2868.0], [60.0, 3169.0], [63.0, 4462.0], [62.0, 4171.0], [67.0, 3261.0], [66.0, 3538.0], [65.0, 3910.0], [64.0, 3250.0], [71.0, 3591.0], [70.0, 3273.0], [69.0, 3102.0], [68.0, 3764.0], [75.0, 3406.0], [74.0, 2948.0], [73.0, 3516.0], [72.0, 3683.0], [79.0, 3563.0], [78.0, 3086.0], [77.0, 3683.0], [76.0, 3688.0], [83.0, 4241.0], [82.0, 4286.0], [81.0, 3659.0], [80.0, 3357.0], [87.0, 3111.0], [86.0, 3762.0], [85.0, 3486.0], [84.0, 3520.0], [91.0, 3950.0], [90.0, 4680.0], [89.0, 5322.0], [88.0, 2927.0], [95.0, 4283.0], [94.0, 2979.0], [93.0, 5114.0], [92.0, 3276.0], [99.0, 3206.0], [98.0, 3299.0], [97.0, 2901.0], [96.0, 4564.0], [100.0, 3175.0], [1.0, 2300.0]], "isOverall": false, "label": "Compare Item", "isController": false}, {"data": [[50.52000000000001, 2956.010000000001]], "isOverall": false, "label": "Compare Item-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 1523.3333333333333, "minX": 1.57312092E12, "maxY": 994008.3333333334, "series": [{"data": [[1.57312092E12, 994008.3333333334]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.57312092E12, 1523.3333333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57312092E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 2715.7199999999993, "minX": 1.57312092E12, "maxY": 5364.75, "series": [{"data": [[1.57312092E12, 2715.7199999999993]], "isOverall": false, "label": "Category Drill down", "isController": false}, {"data": [[1.57312092E12, 5364.75]], "isOverall": false, "label": "Item Details", "isController": false}, {"data": [[1.57312092E12, 4157.209999999999]], "isOverall": false, "label": "View Items", "isController": false}, {"data": [[1.57312092E12, 2956.010000000001]], "isOverall": false, "label": "Compare Item", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57312092E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1222.8900000000006, "minX": 1.57312092E12, "maxY": 2524.42, "series": [{"data": [[1.57312092E12, 1222.8900000000006]], "isOverall": false, "label": "Category Drill down", "isController": false}, {"data": [[1.57312092E12, 2524.42]], "isOverall": false, "label": "Item Details", "isController": false}, {"data": [[1.57312092E12, 2243.7199999999993]], "isOverall": false, "label": "View Items", "isController": false}, {"data": [[1.57312092E12, 1484.6099999999997]], "isOverall": false, "label": "Compare Item", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57312092E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 191.32999999999998, "minX": 1.57312092E12, "maxY": 203.63000000000005, "series": [{"data": [[1.57312092E12, 203.63000000000005]], "isOverall": false, "label": "Category Drill down", "isController": false}, {"data": [[1.57312092E12, 201.46999999999997]], "isOverall": false, "label": "Item Details", "isController": false}, {"data": [[1.57312092E12, 191.32999999999998]], "isOverall": false, "label": "View Items", "isController": false}, {"data": [[1.57312092E12, 201.6300000000001]], "isOverall": false, "label": "Compare Item", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57312092E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1861.0, "minX": 1.57312092E12, "maxY": 9284.0, "series": [{"data": [[1.57312092E12, 9284.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.57312092E12, 1861.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.57312092E12, 5690.3]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.57312092E12, 7396.79]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.57312092E12, 6174.299999999999]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57312092E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1926.5, "minX": 4.0, "maxY": 4885.5, "series": [{"data": [[10.0, 1926.5], [12.0, 3215.0], [13.0, 3125.0], [15.0, 2281.0], [4.0, 2258.0], [17.0, 2897.0], [18.0, 2324.5], [19.0, 4684.0], [20.0, 4575.0], [21.0, 4374.5], [22.0, 4885.5], [23.0, 2792.0], [25.0, 3466.0], [26.0, 4544.0], [7.0, 2132.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 26.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 675.0, "minX": 4.0, "maxY": 2707.5, "series": [{"data": [[10.0, 675.0], [12.0, 1208.5], [13.0, 1510.0], [15.0, 863.0], [4.0, 855.0], [17.0, 1422.0], [18.0, 904.0], [19.0, 2354.0], [20.0, 2356.5], [21.0, 2190.0], [22.0, 2707.5], [23.0, 1533.0], [25.0, 1614.0], [26.0, 2106.0], [7.0, 858.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 26.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 6.666666666666667, "minX": 1.57312092E12, "maxY": 6.666666666666667, "series": [{"data": [[1.57312092E12, 6.666666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57312092E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 6.666666666666667, "minX": 1.57312092E12, "maxY": 6.666666666666667, "series": [{"data": [[1.57312092E12, 6.666666666666667]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57312092E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.6666666666666667, "minX": 1.57312092E12, "maxY": 1.6666666666666667, "series": [{"data": [[1.57312092E12, 1.6666666666666667]], "isOverall": false, "label": "Compare Item-success", "isController": false}, {"data": [[1.57312092E12, 1.6666666666666667]], "isOverall": false, "label": "Category Drill down-success", "isController": false}, {"data": [[1.57312092E12, 1.6666666666666667]], "isOverall": false, "label": "Item Details-success", "isController": false}, {"data": [[1.57312092E12, 1.6666666666666667]], "isOverall": false, "label": "View Items-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57312092E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 6.666666666666667, "minX": 1.57312092E12, "maxY": 6.666666666666667, "series": [{"data": [[1.57312092E12, 6.666666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57312092E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

