/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1838.0, "minX": 0.0, "maxY": 6391.0, "series": [{"data": [[0.0, 1838.0], [0.1, 1838.0], [0.2, 1838.0], [0.3, 1838.0], [0.4, 1838.0], [0.5, 1838.0], [0.6, 1838.0], [0.7, 1838.0], [0.8, 1838.0], [0.9, 1838.0], [1.0, 1842.0], [1.1, 1842.0], [1.2, 1842.0], [1.3, 1842.0], [1.4, 1842.0], [1.5, 1842.0], [1.6, 1842.0], [1.7, 1842.0], [1.8, 1842.0], [1.9, 1842.0], [2.0, 1854.0], [2.1, 1854.0], [2.2, 1854.0], [2.3, 1854.0], [2.4, 1854.0], [2.5, 1854.0], [2.6, 1854.0], [2.7, 1854.0], [2.8, 1854.0], [2.9, 1854.0], [3.0, 1878.0], [3.1, 1878.0], [3.2, 1878.0], [3.3, 1878.0], [3.4, 1878.0], [3.5, 1878.0], [3.6, 1878.0], [3.7, 1878.0], [3.8, 1878.0], [3.9, 1878.0], [4.0, 1881.0], [4.1, 1881.0], [4.2, 1881.0], [4.3, 1881.0], [4.4, 1881.0], [4.5, 1881.0], [4.6, 1881.0], [4.7, 1881.0], [4.8, 1881.0], [4.9, 1881.0], [5.0, 1904.0], [5.1, 1904.0], [5.2, 1904.0], [5.3, 1904.0], [5.4, 1904.0], [5.5, 1904.0], [5.6, 1904.0], [5.7, 1904.0], [5.8, 1904.0], [5.9, 1904.0], [6.0, 1907.0], [6.1, 1907.0], [6.2, 1907.0], [6.3, 1907.0], [6.4, 1907.0], [6.5, 1907.0], [6.6, 1907.0], [6.7, 1907.0], [6.8, 1907.0], [6.9, 1907.0], [7.0, 1908.0], [7.1, 1908.0], [7.2, 1908.0], [7.3, 1908.0], [7.4, 1908.0], [7.5, 1908.0], [7.6, 1908.0], [7.7, 1908.0], [7.8, 1908.0], [7.9, 1908.0], [8.0, 1908.0], [8.1, 1908.0], [8.2, 1908.0], [8.3, 1908.0], [8.4, 1908.0], [8.5, 1908.0], [8.6, 1908.0], [8.7, 1908.0], [8.8, 1908.0], [8.9, 1908.0], [9.0, 1910.0], [9.1, 1910.0], [9.2, 1910.0], [9.3, 1910.0], [9.4, 1910.0], [9.5, 1910.0], [9.6, 1910.0], [9.7, 1910.0], [9.8, 1910.0], [9.9, 1910.0], [10.0, 1912.0], [10.1, 1912.0], [10.2, 1912.0], [10.3, 1912.0], [10.4, 1912.0], [10.5, 1912.0], [10.6, 1912.0], [10.7, 1912.0], [10.8, 1912.0], [10.9, 1912.0], [11.0, 1912.0], [11.1, 1912.0], [11.2, 1912.0], [11.3, 1912.0], [11.4, 1912.0], [11.5, 1912.0], [11.6, 1912.0], [11.7, 1912.0], [11.8, 1912.0], [11.9, 1912.0], [12.0, 1916.0], [12.1, 1916.0], [12.2, 1916.0], [12.3, 1916.0], [12.4, 1916.0], [12.5, 1916.0], [12.6, 1916.0], [12.7, 1916.0], [12.8, 1916.0], [12.9, 1916.0], [13.0, 1919.0], [13.1, 1919.0], [13.2, 1919.0], [13.3, 1919.0], [13.4, 1919.0], [13.5, 1919.0], [13.6, 1919.0], [13.7, 1919.0], [13.8, 1919.0], [13.9, 1919.0], [14.0, 1919.0], [14.1, 1919.0], [14.2, 1919.0], [14.3, 1919.0], [14.4, 1919.0], [14.5, 1919.0], [14.6, 1919.0], [14.7, 1919.0], [14.8, 1919.0], [14.9, 1919.0], [15.0, 1925.0], [15.1, 1925.0], [15.2, 1925.0], [15.3, 1925.0], [15.4, 1925.0], [15.5, 1925.0], [15.6, 1925.0], [15.7, 1925.0], [15.8, 1925.0], [15.9, 1925.0], [16.0, 1932.0], [16.1, 1932.0], [16.2, 1932.0], [16.3, 1932.0], [16.4, 1932.0], [16.5, 1932.0], [16.6, 1932.0], [16.7, 1932.0], [16.8, 1932.0], [16.9, 1932.0], [17.0, 1939.0], [17.1, 1939.0], [17.2, 1939.0], [17.3, 1939.0], [17.4, 1939.0], [17.5, 1939.0], [17.6, 1939.0], [17.7, 1939.0], [17.8, 1939.0], [17.9, 1939.0], [18.0, 1939.0], [18.1, 1939.0], [18.2, 1939.0], [18.3, 1939.0], [18.4, 1939.0], [18.5, 1939.0], [18.6, 1939.0], [18.7, 1939.0], [18.8, 1939.0], [18.9, 1939.0], [19.0, 1940.0], [19.1, 1940.0], [19.2, 1940.0], [19.3, 1940.0], [19.4, 1940.0], [19.5, 1940.0], [19.6, 1940.0], [19.7, 1940.0], [19.8, 1940.0], [19.9, 1940.0], [20.0, 1944.0], [20.1, 1944.0], [20.2, 1944.0], [20.3, 1944.0], [20.4, 1944.0], [20.5, 1944.0], [20.6, 1944.0], [20.7, 1944.0], [20.8, 1944.0], [20.9, 1944.0], [21.0, 1945.0], [21.1, 1945.0], [21.2, 1945.0], [21.3, 1945.0], [21.4, 1945.0], [21.5, 1945.0], [21.6, 1945.0], [21.7, 1945.0], [21.8, 1945.0], [21.9, 1945.0], [22.0, 1947.0], [22.1, 1947.0], [22.2, 1947.0], [22.3, 1947.0], [22.4, 1947.0], [22.5, 1947.0], [22.6, 1947.0], [22.7, 1947.0], [22.8, 1947.0], [22.9, 1947.0], [23.0, 1952.0], [23.1, 1952.0], [23.2, 1952.0], [23.3, 1952.0], [23.4, 1952.0], [23.5, 1952.0], [23.6, 1952.0], [23.7, 1952.0], [23.8, 1952.0], [23.9, 1952.0], [24.0, 1955.0], [24.1, 1955.0], [24.2, 1955.0], [24.3, 1955.0], [24.4, 1955.0], [24.5, 1955.0], [24.6, 1955.0], [24.7, 1955.0], [24.8, 1955.0], [24.9, 1955.0], [25.0, 1959.0], [25.1, 1959.0], [25.2, 1959.0], [25.3, 1959.0], [25.4, 1959.0], [25.5, 1959.0], [25.6, 1959.0], [25.7, 1959.0], [25.8, 1959.0], [25.9, 1959.0], [26.0, 1963.0], [26.1, 1963.0], [26.2, 1963.0], [26.3, 1963.0], [26.4, 1963.0], [26.5, 1963.0], [26.6, 1963.0], [26.7, 1963.0], [26.8, 1963.0], [26.9, 1963.0], [27.0, 1970.0], [27.1, 1970.0], [27.2, 1970.0], [27.3, 1970.0], [27.4, 1970.0], [27.5, 1970.0], [27.6, 1970.0], [27.7, 1970.0], [27.8, 1970.0], [27.9, 1970.0], [28.0, 1989.0], [28.1, 1989.0], [28.2, 1989.0], [28.3, 1989.0], [28.4, 1989.0], [28.5, 1989.0], [28.6, 1989.0], [28.7, 1989.0], [28.8, 1989.0], [28.9, 1989.0], [29.0, 1991.0], [29.1, 1991.0], [29.2, 1991.0], [29.3, 1991.0], [29.4, 1991.0], [29.5, 1991.0], [29.6, 1991.0], [29.7, 1991.0], [29.8, 1991.0], [29.9, 1991.0], [30.0, 1992.0], [30.1, 1992.0], [30.2, 1992.0], [30.3, 1992.0], [30.4, 1992.0], [30.5, 1992.0], [30.6, 1992.0], [30.7, 1992.0], [30.8, 1992.0], [30.9, 1992.0], [31.0, 1993.0], [31.1, 1993.0], [31.2, 1993.0], [31.3, 1993.0], [31.4, 1993.0], [31.5, 1993.0], [31.6, 1993.0], [31.7, 1993.0], [31.8, 1993.0], [31.9, 1993.0], [32.0, 1997.0], [32.1, 1997.0], [32.2, 1997.0], [32.3, 1997.0], [32.4, 1997.0], [32.5, 1997.0], [32.6, 1997.0], [32.7, 1997.0], [32.8, 1997.0], [32.9, 1997.0], [33.0, 2018.0], [33.1, 2018.0], [33.2, 2018.0], [33.3, 2018.0], [33.4, 2018.0], [33.5, 2018.0], [33.6, 2018.0], [33.7, 2018.0], [33.8, 2018.0], [33.9, 2018.0], [34.0, 2020.0], [34.1, 2020.0], [34.2, 2020.0], [34.3, 2020.0], [34.4, 2020.0], [34.5, 2020.0], [34.6, 2020.0], [34.7, 2020.0], [34.8, 2020.0], [34.9, 2020.0], [35.0, 2023.0], [35.1, 2023.0], [35.2, 2023.0], [35.3, 2023.0], [35.4, 2023.0], [35.5, 2023.0], [35.6, 2023.0], [35.7, 2023.0], [35.8, 2023.0], [35.9, 2023.0], [36.0, 2025.0], [36.1, 2025.0], [36.2, 2025.0], [36.3, 2025.0], [36.4, 2025.0], [36.5, 2025.0], [36.6, 2025.0], [36.7, 2025.0], [36.8, 2025.0], [36.9, 2025.0], [37.0, 2025.0], [37.1, 2025.0], [37.2, 2025.0], [37.3, 2025.0], [37.4, 2025.0], [37.5, 2025.0], [37.6, 2025.0], [37.7, 2025.0], [37.8, 2025.0], [37.9, 2025.0], [38.0, 2029.0], [38.1, 2029.0], [38.2, 2029.0], [38.3, 2029.0], [38.4, 2029.0], [38.5, 2029.0], [38.6, 2029.0], [38.7, 2029.0], [38.8, 2029.0], [38.9, 2029.0], [39.0, 2029.0], [39.1, 2029.0], [39.2, 2029.0], [39.3, 2029.0], [39.4, 2029.0], [39.5, 2029.0], [39.6, 2029.0], [39.7, 2029.0], [39.8, 2029.0], [39.9, 2029.0], [40.0, 2030.0], [40.1, 2030.0], [40.2, 2030.0], [40.3, 2030.0], [40.4, 2030.0], [40.5, 2030.0], [40.6, 2030.0], [40.7, 2030.0], [40.8, 2030.0], [40.9, 2030.0], [41.0, 2051.0], [41.1, 2051.0], [41.2, 2051.0], [41.3, 2051.0], [41.4, 2051.0], [41.5, 2051.0], [41.6, 2051.0], [41.7, 2051.0], [41.8, 2051.0], [41.9, 2051.0], [42.0, 2055.0], [42.1, 2055.0], [42.2, 2055.0], [42.3, 2055.0], [42.4, 2055.0], [42.5, 2055.0], [42.6, 2055.0], [42.7, 2055.0], [42.8, 2055.0], [42.9, 2055.0], [43.0, 2056.0], [43.1, 2056.0], [43.2, 2056.0], [43.3, 2056.0], [43.4, 2056.0], [43.5, 2056.0], [43.6, 2056.0], [43.7, 2056.0], [43.8, 2056.0], [43.9, 2056.0], [44.0, 2058.0], [44.1, 2058.0], [44.2, 2058.0], [44.3, 2058.0], [44.4, 2058.0], [44.5, 2058.0], [44.6, 2058.0], [44.7, 2058.0], [44.8, 2058.0], [44.9, 2058.0], [45.0, 2071.0], [45.1, 2071.0], [45.2, 2071.0], [45.3, 2071.0], [45.4, 2071.0], [45.5, 2071.0], [45.6, 2071.0], [45.7, 2071.0], [45.8, 2071.0], [45.9, 2071.0], [46.0, 2091.0], [46.1, 2091.0], [46.2, 2091.0], [46.3, 2091.0], [46.4, 2091.0], [46.5, 2091.0], [46.6, 2091.0], [46.7, 2091.0], [46.8, 2091.0], [46.9, 2091.0], [47.0, 2092.0], [47.1, 2092.0], [47.2, 2092.0], [47.3, 2092.0], [47.4, 2092.0], [47.5, 2092.0], [47.6, 2092.0], [47.7, 2092.0], [47.8, 2092.0], [47.9, 2092.0], [48.0, 2099.0], [48.1, 2099.0], [48.2, 2099.0], [48.3, 2099.0], [48.4, 2099.0], [48.5, 2099.0], [48.6, 2099.0], [48.7, 2099.0], [48.8, 2099.0], [48.9, 2099.0], [49.0, 2104.0], [49.1, 2104.0], [49.2, 2104.0], [49.3, 2104.0], [49.4, 2104.0], [49.5, 2104.0], [49.6, 2104.0], [49.7, 2104.0], [49.8, 2104.0], [49.9, 2104.0], [50.0, 2106.0], [50.1, 2106.0], [50.2, 2106.0], [50.3, 2106.0], [50.4, 2106.0], [50.5, 2106.0], [50.6, 2106.0], [50.7, 2106.0], [50.8, 2106.0], [50.9, 2106.0], [51.0, 2107.0], [51.1, 2107.0], [51.2, 2107.0], [51.3, 2107.0], [51.4, 2107.0], [51.5, 2107.0], [51.6, 2107.0], [51.7, 2107.0], [51.8, 2107.0], [51.9, 2107.0], [52.0, 2113.0], [52.1, 2113.0], [52.2, 2113.0], [52.3, 2113.0], [52.4, 2113.0], [52.5, 2113.0], [52.6, 2113.0], [52.7, 2113.0], [52.8, 2113.0], [52.9, 2113.0], [53.0, 2122.0], [53.1, 2122.0], [53.2, 2122.0], [53.3, 2122.0], [53.4, 2122.0], [53.5, 2122.0], [53.6, 2122.0], [53.7, 2122.0], [53.8, 2122.0], [53.9, 2122.0], [54.0, 2124.0], [54.1, 2124.0], [54.2, 2124.0], [54.3, 2124.0], [54.4, 2124.0], [54.5, 2124.0], [54.6, 2124.0], [54.7, 2124.0], [54.8, 2124.0], [54.9, 2124.0], [55.0, 2129.0], [55.1, 2129.0], [55.2, 2129.0], [55.3, 2129.0], [55.4, 2129.0], [55.5, 2129.0], [55.6, 2129.0], [55.7, 2129.0], [55.8, 2129.0], [55.9, 2129.0], [56.0, 2130.0], [56.1, 2130.0], [56.2, 2130.0], [56.3, 2130.0], [56.4, 2130.0], [56.5, 2130.0], [56.6, 2130.0], [56.7, 2130.0], [56.8, 2130.0], [56.9, 2130.0], [57.0, 2143.0], [57.1, 2143.0], [57.2, 2143.0], [57.3, 2143.0], [57.4, 2143.0], [57.5, 2143.0], [57.6, 2143.0], [57.7, 2143.0], [57.8, 2143.0], [57.9, 2143.0], [58.0, 2153.0], [58.1, 2153.0], [58.2, 2153.0], [58.3, 2153.0], [58.4, 2153.0], [58.5, 2153.0], [58.6, 2153.0], [58.7, 2153.0], [58.8, 2153.0], [58.9, 2153.0], [59.0, 2157.0], [59.1, 2157.0], [59.2, 2157.0], [59.3, 2157.0], [59.4, 2157.0], [59.5, 2157.0], [59.6, 2157.0], [59.7, 2157.0], [59.8, 2157.0], [59.9, 2157.0], [60.0, 2162.0], [60.1, 2162.0], [60.2, 2162.0], [60.3, 2162.0], [60.4, 2162.0], [60.5, 2162.0], [60.6, 2162.0], [60.7, 2162.0], [60.8, 2162.0], [60.9, 2162.0], [61.0, 2166.0], [61.1, 2166.0], [61.2, 2166.0], [61.3, 2166.0], [61.4, 2166.0], [61.5, 2166.0], [61.6, 2166.0], [61.7, 2166.0], [61.8, 2166.0], [61.9, 2166.0], [62.0, 2174.0], [62.1, 2174.0], [62.2, 2174.0], [62.3, 2174.0], [62.4, 2174.0], [62.5, 2174.0], [62.6, 2174.0], [62.7, 2174.0], [62.8, 2174.0], [62.9, 2174.0], [63.0, 2180.0], [63.1, 2180.0], [63.2, 2180.0], [63.3, 2180.0], [63.4, 2180.0], [63.5, 2180.0], [63.6, 2180.0], [63.7, 2180.0], [63.8, 2180.0], [63.9, 2180.0], [64.0, 2182.0], [64.1, 2182.0], [64.2, 2182.0], [64.3, 2182.0], [64.4, 2182.0], [64.5, 2182.0], [64.6, 2182.0], [64.7, 2182.0], [64.8, 2182.0], [64.9, 2182.0], [65.0, 2192.0], [65.1, 2192.0], [65.2, 2192.0], [65.3, 2192.0], [65.4, 2192.0], [65.5, 2192.0], [65.6, 2192.0], [65.7, 2192.0], [65.8, 2192.0], [65.9, 2192.0], [66.0, 2202.0], [66.1, 2202.0], [66.2, 2202.0], [66.3, 2202.0], [66.4, 2202.0], [66.5, 2202.0], [66.6, 2202.0], [66.7, 2202.0], [66.8, 2202.0], [66.9, 2202.0], [67.0, 2210.0], [67.1, 2210.0], [67.2, 2210.0], [67.3, 2210.0], [67.4, 2210.0], [67.5, 2210.0], [67.6, 2210.0], [67.7, 2210.0], [67.8, 2210.0], [67.9, 2210.0], [68.0, 2223.0], [68.1, 2223.0], [68.2, 2223.0], [68.3, 2223.0], [68.4, 2223.0], [68.5, 2223.0], [68.6, 2223.0], [68.7, 2223.0], [68.8, 2223.0], [68.9, 2223.0], [69.0, 2227.0], [69.1, 2227.0], [69.2, 2227.0], [69.3, 2227.0], [69.4, 2227.0], [69.5, 2227.0], [69.6, 2227.0], [69.7, 2227.0], [69.8, 2227.0], [69.9, 2227.0], [70.0, 2237.0], [70.1, 2237.0], [70.2, 2237.0], [70.3, 2237.0], [70.4, 2237.0], [70.5, 2237.0], [70.6, 2237.0], [70.7, 2237.0], [70.8, 2237.0], [70.9, 2237.0], [71.0, 2247.0], [71.1, 2247.0], [71.2, 2247.0], [71.3, 2247.0], [71.4, 2247.0], [71.5, 2247.0], [71.6, 2247.0], [71.7, 2247.0], [71.8, 2247.0], [71.9, 2247.0], [72.0, 2251.0], [72.1, 2251.0], [72.2, 2251.0], [72.3, 2251.0], [72.4, 2251.0], [72.5, 2251.0], [72.6, 2251.0], [72.7, 2251.0], [72.8, 2251.0], [72.9, 2251.0], [73.0, 2257.0], [73.1, 2257.0], [73.2, 2257.0], [73.3, 2257.0], [73.4, 2257.0], [73.5, 2257.0], [73.6, 2257.0], [73.7, 2257.0], [73.8, 2257.0], [73.9, 2257.0], [74.0, 2260.0], [74.1, 2260.0], [74.2, 2260.0], [74.3, 2260.0], [74.4, 2260.0], [74.5, 2260.0], [74.6, 2260.0], [74.7, 2260.0], [74.8, 2260.0], [74.9, 2260.0], [75.0, 2277.0], [75.1, 2277.0], [75.2, 2277.0], [75.3, 2277.0], [75.4, 2277.0], [75.5, 2277.0], [75.6, 2277.0], [75.7, 2277.0], [75.8, 2277.0], [75.9, 2277.0], [76.0, 2290.0], [76.1, 2290.0], [76.2, 2290.0], [76.3, 2290.0], [76.4, 2290.0], [76.5, 2290.0], [76.6, 2290.0], [76.7, 2290.0], [76.8, 2290.0], [76.9, 2290.0], [77.0, 2304.0], [77.1, 2304.0], [77.2, 2304.0], [77.3, 2304.0], [77.4, 2304.0], [77.5, 2304.0], [77.6, 2304.0], [77.7, 2304.0], [77.8, 2304.0], [77.9, 2304.0], [78.0, 2375.0], [78.1, 2375.0], [78.2, 2375.0], [78.3, 2375.0], [78.4, 2375.0], [78.5, 2375.0], [78.6, 2375.0], [78.7, 2375.0], [78.8, 2375.0], [78.9, 2375.0], [79.0, 2393.0], [79.1, 2393.0], [79.2, 2393.0], [79.3, 2393.0], [79.4, 2393.0], [79.5, 2393.0], [79.6, 2393.0], [79.7, 2393.0], [79.8, 2393.0], [79.9, 2393.0], [80.0, 2417.0], [80.1, 2417.0], [80.2, 2417.0], [80.3, 2417.0], [80.4, 2417.0], [80.5, 2417.0], [80.6, 2417.0], [80.7, 2417.0], [80.8, 2417.0], [80.9, 2417.0], [81.0, 2432.0], [81.1, 2432.0], [81.2, 2432.0], [81.3, 2432.0], [81.4, 2432.0], [81.5, 2432.0], [81.6, 2432.0], [81.7, 2432.0], [81.8, 2432.0], [81.9, 2432.0], [82.0, 2446.0], [82.1, 2446.0], [82.2, 2446.0], [82.3, 2446.0], [82.4, 2446.0], [82.5, 2446.0], [82.6, 2446.0], [82.7, 2446.0], [82.8, 2446.0], [82.9, 2446.0], [83.0, 2514.0], [83.1, 2514.0], [83.2, 2514.0], [83.3, 2514.0], [83.4, 2514.0], [83.5, 2514.0], [83.6, 2514.0], [83.7, 2514.0], [83.8, 2514.0], [83.9, 2514.0], [84.0, 2547.0], [84.1, 2547.0], [84.2, 2547.0], [84.3, 2547.0], [84.4, 2547.0], [84.5, 2547.0], [84.6, 2547.0], [84.7, 2547.0], [84.8, 2547.0], [84.9, 2547.0], [85.0, 2564.0], [85.1, 2564.0], [85.2, 2564.0], [85.3, 2564.0], [85.4, 2564.0], [85.5, 2564.0], [85.6, 2564.0], [85.7, 2564.0], [85.8, 2564.0], [85.9, 2564.0], [86.0, 2570.0], [86.1, 2570.0], [86.2, 2570.0], [86.3, 2570.0], [86.4, 2570.0], [86.5, 2570.0], [86.6, 2570.0], [86.7, 2570.0], [86.8, 2570.0], [86.9, 2570.0], [87.0, 2617.0], [87.1, 2617.0], [87.2, 2617.0], [87.3, 2617.0], [87.4, 2617.0], [87.5, 2617.0], [87.6, 2617.0], [87.7, 2617.0], [87.8, 2617.0], [87.9, 2617.0], [88.0, 2632.0], [88.1, 2632.0], [88.2, 2632.0], [88.3, 2632.0], [88.4, 2632.0], [88.5, 2632.0], [88.6, 2632.0], [88.7, 2632.0], [88.8, 2632.0], [88.9, 2632.0], [89.0, 2674.0], [89.1, 2674.0], [89.2, 2674.0], [89.3, 2674.0], [89.4, 2674.0], [89.5, 2674.0], [89.6, 2674.0], [89.7, 2674.0], [89.8, 2674.0], [89.9, 2674.0], [90.0, 2680.0], [90.1, 2680.0], [90.2, 2680.0], [90.3, 2680.0], [90.4, 2680.0], [90.5, 2680.0], [90.6, 2680.0], [90.7, 2680.0], [90.8, 2680.0], [90.9, 2680.0], [91.0, 2726.0], [91.1, 2726.0], [91.2, 2726.0], [91.3, 2726.0], [91.4, 2726.0], [91.5, 2726.0], [91.6, 2726.0], [91.7, 2726.0], [91.8, 2726.0], [91.9, 2726.0], [92.0, 2743.0], [92.1, 2743.0], [92.2, 2743.0], [92.3, 2743.0], [92.4, 2743.0], [92.5, 2743.0], [92.6, 2743.0], [92.7, 2743.0], [92.8, 2743.0], [92.9, 2743.0], [93.0, 2753.0], [93.1, 2753.0], [93.2, 2753.0], [93.3, 2753.0], [93.4, 2753.0], [93.5, 2753.0], [93.6, 2753.0], [93.7, 2753.0], [93.8, 2753.0], [93.9, 2753.0], [94.0, 2767.0], [94.1, 2767.0], [94.2, 2767.0], [94.3, 2767.0], [94.4, 2767.0], [94.5, 2767.0], [94.6, 2767.0], [94.7, 2767.0], [94.8, 2767.0], [94.9, 2767.0], [95.0, 2833.0], [95.1, 2833.0], [95.2, 2833.0], [95.3, 2833.0], [95.4, 2833.0], [95.5, 2833.0], [95.6, 2833.0], [95.7, 2833.0], [95.8, 2833.0], [95.9, 2833.0], [96.0, 2868.0], [96.1, 2868.0], [96.2, 2868.0], [96.3, 2868.0], [96.4, 2868.0], [96.5, 2868.0], [96.6, 2868.0], [96.7, 2868.0], [96.8, 2868.0], [96.9, 2868.0], [97.0, 2970.0], [97.1, 2970.0], [97.2, 2970.0], [97.3, 2970.0], [97.4, 2970.0], [97.5, 2970.0], [97.6, 2970.0], [97.7, 2970.0], [97.8, 2970.0], [97.9, 2970.0], [98.0, 3213.0], [98.1, 3213.0], [98.2, 3213.0], [98.3, 3213.0], [98.4, 3213.0], [98.5, 3213.0], [98.6, 3213.0], [98.7, 3213.0], [98.8, 3213.0], [98.9, 3213.0], [99.0, 3302.0], [99.1, 3302.0], [99.2, 3302.0], [99.3, 3302.0], [99.4, 3302.0], [99.5, 3302.0], [99.6, 3302.0], [99.7, 3302.0], [99.8, 3302.0], [99.9, 3302.0]], "isOverall": false, "label": "Category Drill down", "isController": false}, {"data": [[0.0, 3411.0], [0.1, 3411.0], [0.2, 3411.0], [0.3, 3411.0], [0.4, 3411.0], [0.5, 3411.0], [0.6, 3411.0], [0.7, 3411.0], [0.8, 3411.0], [0.9, 3411.0], [1.0, 3428.0], [1.1, 3428.0], [1.2, 3428.0], [1.3, 3428.0], [1.4, 3428.0], [1.5, 3428.0], [1.6, 3428.0], [1.7, 3428.0], [1.8, 3428.0], [1.9, 3428.0], [2.0, 3435.0], [2.1, 3435.0], [2.2, 3435.0], [2.3, 3435.0], [2.4, 3435.0], [2.5, 3435.0], [2.6, 3435.0], [2.7, 3435.0], [2.8, 3435.0], [2.9, 3435.0], [3.0, 3515.0], [3.1, 3515.0], [3.2, 3515.0], [3.3, 3515.0], [3.4, 3515.0], [3.5, 3515.0], [3.6, 3515.0], [3.7, 3515.0], [3.8, 3515.0], [3.9, 3515.0], [4.0, 3533.0], [4.1, 3533.0], [4.2, 3533.0], [4.3, 3533.0], [4.4, 3533.0], [4.5, 3533.0], [4.6, 3533.0], [4.7, 3533.0], [4.8, 3533.0], [4.9, 3533.0], [5.0, 3544.0], [5.1, 3544.0], [5.2, 3544.0], [5.3, 3544.0], [5.4, 3544.0], [5.5, 3544.0], [5.6, 3544.0], [5.7, 3544.0], [5.8, 3544.0], [5.9, 3544.0], [6.0, 3545.0], [6.1, 3545.0], [6.2, 3545.0], [6.3, 3545.0], [6.4, 3545.0], [6.5, 3545.0], [6.6, 3545.0], [6.7, 3545.0], [6.8, 3545.0], [6.9, 3545.0], [7.0, 3557.0], [7.1, 3557.0], [7.2, 3557.0], [7.3, 3557.0], [7.4, 3557.0], [7.5, 3557.0], [7.6, 3557.0], [7.7, 3557.0], [7.8, 3557.0], [7.9, 3557.0], [8.0, 3588.0], [8.1, 3588.0], [8.2, 3588.0], [8.3, 3588.0], [8.4, 3588.0], [8.5, 3588.0], [8.6, 3588.0], [8.7, 3588.0], [8.8, 3588.0], [8.9, 3588.0], [9.0, 3590.0], [9.1, 3590.0], [9.2, 3590.0], [9.3, 3590.0], [9.4, 3590.0], [9.5, 3590.0], [9.6, 3590.0], [9.7, 3590.0], [9.8, 3590.0], [9.9, 3590.0], [10.0, 3604.0], [10.1, 3604.0], [10.2, 3604.0], [10.3, 3604.0], [10.4, 3604.0], [10.5, 3604.0], [10.6, 3604.0], [10.7, 3604.0], [10.8, 3604.0], [10.9, 3604.0], [11.0, 3606.0], [11.1, 3606.0], [11.2, 3606.0], [11.3, 3606.0], [11.4, 3606.0], [11.5, 3606.0], [11.6, 3606.0], [11.7, 3606.0], [11.8, 3606.0], [11.9, 3606.0], [12.0, 3625.0], [12.1, 3625.0], [12.2, 3625.0], [12.3, 3625.0], [12.4, 3625.0], [12.5, 3625.0], [12.6, 3625.0], [12.7, 3625.0], [12.8, 3625.0], [12.9, 3625.0], [13.0, 3625.0], [13.1, 3625.0], [13.2, 3625.0], [13.3, 3625.0], [13.4, 3625.0], [13.5, 3625.0], [13.6, 3625.0], [13.7, 3625.0], [13.8, 3625.0], [13.9, 3625.0], [14.0, 3627.0], [14.1, 3627.0], [14.2, 3627.0], [14.3, 3627.0], [14.4, 3627.0], [14.5, 3627.0], [14.6, 3627.0], [14.7, 3627.0], [14.8, 3627.0], [14.9, 3627.0], [15.0, 3641.0], [15.1, 3641.0], [15.2, 3641.0], [15.3, 3641.0], [15.4, 3641.0], [15.5, 3641.0], [15.6, 3641.0], [15.7, 3641.0], [15.8, 3641.0], [15.9, 3641.0], [16.0, 3650.0], [16.1, 3650.0], [16.2, 3650.0], [16.3, 3650.0], [16.4, 3650.0], [16.5, 3650.0], [16.6, 3650.0], [16.7, 3650.0], [16.8, 3650.0], [16.9, 3650.0], [17.0, 3664.0], [17.1, 3664.0], [17.2, 3664.0], [17.3, 3664.0], [17.4, 3664.0], [17.5, 3664.0], [17.6, 3664.0], [17.7, 3664.0], [17.8, 3664.0], [17.9, 3664.0], [18.0, 3667.0], [18.1, 3667.0], [18.2, 3667.0], [18.3, 3667.0], [18.4, 3667.0], [18.5, 3667.0], [18.6, 3667.0], [18.7, 3667.0], [18.8, 3667.0], [18.9, 3667.0], [19.0, 3669.0], [19.1, 3669.0], [19.2, 3669.0], [19.3, 3669.0], [19.4, 3669.0], [19.5, 3669.0], [19.6, 3669.0], [19.7, 3669.0], [19.8, 3669.0], [19.9, 3669.0], [20.0, 3679.0], [20.1, 3679.0], [20.2, 3679.0], [20.3, 3679.0], [20.4, 3679.0], [20.5, 3679.0], [20.6, 3679.0], [20.7, 3679.0], [20.8, 3679.0], [20.9, 3679.0], [21.0, 3680.0], [21.1, 3680.0], [21.2, 3680.0], [21.3, 3680.0], [21.4, 3680.0], [21.5, 3680.0], [21.6, 3680.0], [21.7, 3680.0], [21.8, 3680.0], [21.9, 3680.0], [22.0, 3683.0], [22.1, 3683.0], [22.2, 3683.0], [22.3, 3683.0], [22.4, 3683.0], [22.5, 3683.0], [22.6, 3683.0], [22.7, 3683.0], [22.8, 3683.0], [22.9, 3683.0], [23.0, 3688.0], [23.1, 3688.0], [23.2, 3688.0], [23.3, 3688.0], [23.4, 3688.0], [23.5, 3688.0], [23.6, 3688.0], [23.7, 3688.0], [23.8, 3688.0], [23.9, 3688.0], [24.0, 3690.0], [24.1, 3690.0], [24.2, 3690.0], [24.3, 3690.0], [24.4, 3690.0], [24.5, 3690.0], [24.6, 3690.0], [24.7, 3690.0], [24.8, 3690.0], [24.9, 3690.0], [25.0, 3702.0], [25.1, 3702.0], [25.2, 3702.0], [25.3, 3702.0], [25.4, 3702.0], [25.5, 3702.0], [25.6, 3702.0], [25.7, 3702.0], [25.8, 3702.0], [25.9, 3702.0], [26.0, 3710.0], [26.1, 3710.0], [26.2, 3710.0], [26.3, 3710.0], [26.4, 3710.0], [26.5, 3710.0], [26.6, 3710.0], [26.7, 3710.0], [26.8, 3710.0], [26.9, 3710.0], [27.0, 3716.0], [27.1, 3716.0], [27.2, 3716.0], [27.3, 3716.0], [27.4, 3716.0], [27.5, 3716.0], [27.6, 3716.0], [27.7, 3716.0], [27.8, 3716.0], [27.9, 3716.0], [28.0, 3720.0], [28.1, 3720.0], [28.2, 3720.0], [28.3, 3720.0], [28.4, 3720.0], [28.5, 3720.0], [28.6, 3720.0], [28.7, 3720.0], [28.8, 3720.0], [28.9, 3720.0], [29.0, 3745.0], [29.1, 3745.0], [29.2, 3745.0], [29.3, 3745.0], [29.4, 3745.0], [29.5, 3745.0], [29.6, 3745.0], [29.7, 3745.0], [29.8, 3745.0], [29.9, 3745.0], [30.0, 3753.0], [30.1, 3753.0], [30.2, 3753.0], [30.3, 3753.0], [30.4, 3753.0], [30.5, 3753.0], [30.6, 3753.0], [30.7, 3753.0], [30.8, 3753.0], [30.9, 3753.0], [31.0, 3753.0], [31.1, 3753.0], [31.2, 3753.0], [31.3, 3753.0], [31.4, 3753.0], [31.5, 3753.0], [31.6, 3753.0], [31.7, 3753.0], [31.8, 3753.0], [31.9, 3753.0], [32.0, 3756.0], [32.1, 3756.0], [32.2, 3756.0], [32.3, 3756.0], [32.4, 3756.0], [32.5, 3756.0], [32.6, 3756.0], [32.7, 3756.0], [32.8, 3756.0], [32.9, 3756.0], [33.0, 3759.0], [33.1, 3759.0], [33.2, 3759.0], [33.3, 3759.0], [33.4, 3759.0], [33.5, 3759.0], [33.6, 3759.0], [33.7, 3759.0], [33.8, 3759.0], [33.9, 3759.0], [34.0, 3759.0], [34.1, 3759.0], [34.2, 3759.0], [34.3, 3759.0], [34.4, 3759.0], [34.5, 3759.0], [34.6, 3759.0], [34.7, 3759.0], [34.8, 3759.0], [34.9, 3759.0], [35.0, 3764.0], [35.1, 3764.0], [35.2, 3764.0], [35.3, 3764.0], [35.4, 3764.0], [35.5, 3764.0], [35.6, 3764.0], [35.7, 3764.0], [35.8, 3764.0], [35.9, 3764.0], [36.0, 3771.0], [36.1, 3771.0], [36.2, 3771.0], [36.3, 3771.0], [36.4, 3771.0], [36.5, 3771.0], [36.6, 3771.0], [36.7, 3771.0], [36.8, 3771.0], [36.9, 3771.0], [37.0, 3783.0], [37.1, 3783.0], [37.2, 3783.0], [37.3, 3783.0], [37.4, 3783.0], [37.5, 3783.0], [37.6, 3783.0], [37.7, 3783.0], [37.8, 3783.0], [37.9, 3783.0], [38.0, 3787.0], [38.1, 3787.0], [38.2, 3787.0], [38.3, 3787.0], [38.4, 3787.0], [38.5, 3787.0], [38.6, 3787.0], [38.7, 3787.0], [38.8, 3787.0], [38.9, 3787.0], [39.0, 3789.0], [39.1, 3789.0], [39.2, 3789.0], [39.3, 3789.0], [39.4, 3789.0], [39.5, 3789.0], [39.6, 3789.0], [39.7, 3789.0], [39.8, 3789.0], [39.9, 3789.0], [40.0, 3796.0], [40.1, 3796.0], [40.2, 3796.0], [40.3, 3796.0], [40.4, 3796.0], [40.5, 3796.0], [40.6, 3796.0], [40.7, 3796.0], [40.8, 3796.0], [40.9, 3796.0], [41.0, 3796.0], [41.1, 3796.0], [41.2, 3796.0], [41.3, 3796.0], [41.4, 3796.0], [41.5, 3796.0], [41.6, 3796.0], [41.7, 3796.0], [41.8, 3796.0], [41.9, 3796.0], [42.0, 3802.0], [42.1, 3802.0], [42.2, 3802.0], [42.3, 3802.0], [42.4, 3802.0], [42.5, 3802.0], [42.6, 3802.0], [42.7, 3802.0], [42.8, 3802.0], [42.9, 3802.0], [43.0, 3821.0], [43.1, 3821.0], [43.2, 3821.0], [43.3, 3821.0], [43.4, 3821.0], [43.5, 3821.0], [43.6, 3821.0], [43.7, 3821.0], [43.8, 3821.0], [43.9, 3821.0], [44.0, 3835.0], [44.1, 3835.0], [44.2, 3835.0], [44.3, 3835.0], [44.4, 3835.0], [44.5, 3835.0], [44.6, 3835.0], [44.7, 3835.0], [44.8, 3835.0], [44.9, 3835.0], [45.0, 3850.0], [45.1, 3850.0], [45.2, 3850.0], [45.3, 3850.0], [45.4, 3850.0], [45.5, 3850.0], [45.6, 3850.0], [45.7, 3850.0], [45.8, 3850.0], [45.9, 3850.0], [46.0, 3854.0], [46.1, 3854.0], [46.2, 3854.0], [46.3, 3854.0], [46.4, 3854.0], [46.5, 3854.0], [46.6, 3854.0], [46.7, 3854.0], [46.8, 3854.0], [46.9, 3854.0], [47.0, 3857.0], [47.1, 3857.0], [47.2, 3857.0], [47.3, 3857.0], [47.4, 3857.0], [47.5, 3857.0], [47.6, 3857.0], [47.7, 3857.0], [47.8, 3857.0], [47.9, 3857.0], [48.0, 3861.0], [48.1, 3861.0], [48.2, 3861.0], [48.3, 3861.0], [48.4, 3861.0], [48.5, 3861.0], [48.6, 3861.0], [48.7, 3861.0], [48.8, 3861.0], [48.9, 3861.0], [49.0, 3868.0], [49.1, 3868.0], [49.2, 3868.0], [49.3, 3868.0], [49.4, 3868.0], [49.5, 3868.0], [49.6, 3868.0], [49.7, 3868.0], [49.8, 3868.0], [49.9, 3868.0], [50.0, 3879.0], [50.1, 3879.0], [50.2, 3879.0], [50.3, 3879.0], [50.4, 3879.0], [50.5, 3879.0], [50.6, 3879.0], [50.7, 3879.0], [50.8, 3879.0], [50.9, 3879.0], [51.0, 3893.0], [51.1, 3893.0], [51.2, 3893.0], [51.3, 3893.0], [51.4, 3893.0], [51.5, 3893.0], [51.6, 3893.0], [51.7, 3893.0], [51.8, 3893.0], [51.9, 3893.0], [52.0, 3895.0], [52.1, 3895.0], [52.2, 3895.0], [52.3, 3895.0], [52.4, 3895.0], [52.5, 3895.0], [52.6, 3895.0], [52.7, 3895.0], [52.8, 3895.0], [52.9, 3895.0], [53.0, 3905.0], [53.1, 3905.0], [53.2, 3905.0], [53.3, 3905.0], [53.4, 3905.0], [53.5, 3905.0], [53.6, 3905.0], [53.7, 3905.0], [53.8, 3905.0], [53.9, 3905.0], [54.0, 3908.0], [54.1, 3908.0], [54.2, 3908.0], [54.3, 3908.0], [54.4, 3908.0], [54.5, 3908.0], [54.6, 3908.0], [54.7, 3908.0], [54.8, 3908.0], [54.9, 3908.0], [55.0, 3910.0], [55.1, 3910.0], [55.2, 3910.0], [55.3, 3910.0], [55.4, 3910.0], [55.5, 3910.0], [55.6, 3910.0], [55.7, 3910.0], [55.8, 3910.0], [55.9, 3910.0], [56.0, 3925.0], [56.1, 3925.0], [56.2, 3925.0], [56.3, 3925.0], [56.4, 3925.0], [56.5, 3925.0], [56.6, 3925.0], [56.7, 3925.0], [56.8, 3925.0], [56.9, 3925.0], [57.0, 3952.0], [57.1, 3952.0], [57.2, 3952.0], [57.3, 3952.0], [57.4, 3952.0], [57.5, 3952.0], [57.6, 3952.0], [57.7, 3952.0], [57.8, 3952.0], [57.9, 3952.0], [58.0, 3959.0], [58.1, 3959.0], [58.2, 3959.0], [58.3, 3959.0], [58.4, 3959.0], [58.5, 3959.0], [58.6, 3959.0], [58.7, 3959.0], [58.8, 3959.0], [58.9, 3959.0], [59.0, 3964.0], [59.1, 3964.0], [59.2, 3964.0], [59.3, 3964.0], [59.4, 3964.0], [59.5, 3964.0], [59.6, 3964.0], [59.7, 3964.0], [59.8, 3964.0], [59.9, 3964.0], [60.0, 3972.0], [60.1, 3972.0], [60.2, 3972.0], [60.3, 3972.0], [60.4, 3972.0], [60.5, 3972.0], [60.6, 3972.0], [60.7, 3972.0], [60.8, 3972.0], [60.9, 3972.0], [61.0, 3974.0], [61.1, 3974.0], [61.2, 3974.0], [61.3, 3974.0], [61.4, 3974.0], [61.5, 3974.0], [61.6, 3974.0], [61.7, 3974.0], [61.8, 3974.0], [61.9, 3974.0], [62.0, 3980.0], [62.1, 3980.0], [62.2, 3980.0], [62.3, 3980.0], [62.4, 3980.0], [62.5, 3980.0], [62.6, 3980.0], [62.7, 3980.0], [62.8, 3980.0], [62.9, 3980.0], [63.0, 3986.0], [63.1, 3986.0], [63.2, 3986.0], [63.3, 3986.0], [63.4, 3986.0], [63.5, 3986.0], [63.6, 3986.0], [63.7, 3986.0], [63.8, 3986.0], [63.9, 3986.0], [64.0, 3996.0], [64.1, 3996.0], [64.2, 3996.0], [64.3, 3996.0], [64.4, 3996.0], [64.5, 3996.0], [64.6, 3996.0], [64.7, 3996.0], [64.8, 3996.0], [64.9, 3996.0], [65.0, 4011.0], [65.1, 4011.0], [65.2, 4011.0], [65.3, 4011.0], [65.4, 4011.0], [65.5, 4011.0], [65.6, 4011.0], [65.7, 4011.0], [65.8, 4011.0], [65.9, 4011.0], [66.0, 4017.0], [66.1, 4017.0], [66.2, 4017.0], [66.3, 4017.0], [66.4, 4017.0], [66.5, 4017.0], [66.6, 4017.0], [66.7, 4017.0], [66.8, 4017.0], [66.9, 4017.0], [67.0, 4021.0], [67.1, 4021.0], [67.2, 4021.0], [67.3, 4021.0], [67.4, 4021.0], [67.5, 4021.0], [67.6, 4021.0], [67.7, 4021.0], [67.8, 4021.0], [67.9, 4021.0], [68.0, 4025.0], [68.1, 4025.0], [68.2, 4025.0], [68.3, 4025.0], [68.4, 4025.0], [68.5, 4025.0], [68.6, 4025.0], [68.7, 4025.0], [68.8, 4025.0], [68.9, 4025.0], [69.0, 4035.0], [69.1, 4035.0], [69.2, 4035.0], [69.3, 4035.0], [69.4, 4035.0], [69.5, 4035.0], [69.6, 4035.0], [69.7, 4035.0], [69.8, 4035.0], [69.9, 4035.0], [70.0, 4050.0], [70.1, 4050.0], [70.2, 4050.0], [70.3, 4050.0], [70.4, 4050.0], [70.5, 4050.0], [70.6, 4050.0], [70.7, 4050.0], [70.8, 4050.0], [70.9, 4050.0], [71.0, 4070.0], [71.1, 4070.0], [71.2, 4070.0], [71.3, 4070.0], [71.4, 4070.0], [71.5, 4070.0], [71.6, 4070.0], [71.7, 4070.0], [71.8, 4070.0], [71.9, 4070.0], [72.0, 4075.0], [72.1, 4075.0], [72.2, 4075.0], [72.3, 4075.0], [72.4, 4075.0], [72.5, 4075.0], [72.6, 4075.0], [72.7, 4075.0], [72.8, 4075.0], [72.9, 4075.0], [73.0, 4082.0], [73.1, 4082.0], [73.2, 4082.0], [73.3, 4082.0], [73.4, 4082.0], [73.5, 4082.0], [73.6, 4082.0], [73.7, 4082.0], [73.8, 4082.0], [73.9, 4082.0], [74.0, 4083.0], [74.1, 4083.0], [74.2, 4083.0], [74.3, 4083.0], [74.4, 4083.0], [74.5, 4083.0], [74.6, 4083.0], [74.7, 4083.0], [74.8, 4083.0], [74.9, 4083.0], [75.0, 4100.0], [75.1, 4100.0], [75.2, 4100.0], [75.3, 4100.0], [75.4, 4100.0], [75.5, 4100.0], [75.6, 4100.0], [75.7, 4100.0], [75.8, 4100.0], [75.9, 4100.0], [76.0, 4122.0], [76.1, 4122.0], [76.2, 4122.0], [76.3, 4122.0], [76.4, 4122.0], [76.5, 4122.0], [76.6, 4122.0], [76.7, 4122.0], [76.8, 4122.0], [76.9, 4122.0], [77.0, 4126.0], [77.1, 4126.0], [77.2, 4126.0], [77.3, 4126.0], [77.4, 4126.0], [77.5, 4126.0], [77.6, 4126.0], [77.7, 4126.0], [77.8, 4126.0], [77.9, 4126.0], [78.0, 4159.0], [78.1, 4159.0], [78.2, 4159.0], [78.3, 4159.0], [78.4, 4159.0], [78.5, 4159.0], [78.6, 4159.0], [78.7, 4159.0], [78.8, 4159.0], [78.9, 4159.0], [79.0, 4186.0], [79.1, 4186.0], [79.2, 4186.0], [79.3, 4186.0], [79.4, 4186.0], [79.5, 4186.0], [79.6, 4186.0], [79.7, 4186.0], [79.8, 4186.0], [79.9, 4186.0], [80.0, 4186.0], [80.1, 4186.0], [80.2, 4186.0], [80.3, 4186.0], [80.4, 4186.0], [80.5, 4186.0], [80.6, 4186.0], [80.7, 4186.0], [80.8, 4186.0], [80.9, 4186.0], [81.0, 4187.0], [81.1, 4187.0], [81.2, 4187.0], [81.3, 4187.0], [81.4, 4187.0], [81.5, 4187.0], [81.6, 4187.0], [81.7, 4187.0], [81.8, 4187.0], [81.9, 4187.0], [82.0, 4215.0], [82.1, 4215.0], [82.2, 4215.0], [82.3, 4215.0], [82.4, 4215.0], [82.5, 4215.0], [82.6, 4215.0], [82.7, 4215.0], [82.8, 4215.0], [82.9, 4215.0], [83.0, 4236.0], [83.1, 4236.0], [83.2, 4236.0], [83.3, 4236.0], [83.4, 4236.0], [83.5, 4236.0], [83.6, 4236.0], [83.7, 4236.0], [83.8, 4236.0], [83.9, 4236.0], [84.0, 4242.0], [84.1, 4242.0], [84.2, 4242.0], [84.3, 4242.0], [84.4, 4242.0], [84.5, 4242.0], [84.6, 4242.0], [84.7, 4242.0], [84.8, 4242.0], [84.9, 4242.0], [85.0, 4244.0], [85.1, 4244.0], [85.2, 4244.0], [85.3, 4244.0], [85.4, 4244.0], [85.5, 4244.0], [85.6, 4244.0], [85.7, 4244.0], [85.8, 4244.0], [85.9, 4244.0], [86.0, 4282.0], [86.1, 4282.0], [86.2, 4282.0], [86.3, 4282.0], [86.4, 4282.0], [86.5, 4282.0], [86.6, 4282.0], [86.7, 4282.0], [86.8, 4282.0], [86.9, 4282.0], [87.0, 4284.0], [87.1, 4284.0], [87.2, 4284.0], [87.3, 4284.0], [87.4, 4284.0], [87.5, 4284.0], [87.6, 4284.0], [87.7, 4284.0], [87.8, 4284.0], [87.9, 4284.0], [88.0, 4290.0], [88.1, 4290.0], [88.2, 4290.0], [88.3, 4290.0], [88.4, 4290.0], [88.5, 4290.0], [88.6, 4290.0], [88.7, 4290.0], [88.8, 4290.0], [88.9, 4290.0], [89.0, 4296.0], [89.1, 4296.0], [89.2, 4296.0], [89.3, 4296.0], [89.4, 4296.0], [89.5, 4296.0], [89.6, 4296.0], [89.7, 4296.0], [89.8, 4296.0], [89.9, 4296.0], [90.0, 4342.0], [90.1, 4342.0], [90.2, 4342.0], [90.3, 4342.0], [90.4, 4342.0], [90.5, 4342.0], [90.6, 4342.0], [90.7, 4342.0], [90.8, 4342.0], [90.9, 4342.0], [91.0, 4344.0], [91.1, 4344.0], [91.2, 4344.0], [91.3, 4344.0], [91.4, 4344.0], [91.5, 4344.0], [91.6, 4344.0], [91.7, 4344.0], [91.8, 4344.0], [91.9, 4344.0], [92.0, 4354.0], [92.1, 4354.0], [92.2, 4354.0], [92.3, 4354.0], [92.4, 4354.0], [92.5, 4354.0], [92.6, 4354.0], [92.7, 4354.0], [92.8, 4354.0], [92.9, 4354.0], [93.0, 4360.0], [93.1, 4360.0], [93.2, 4360.0], [93.3, 4360.0], [93.4, 4360.0], [93.5, 4360.0], [93.6, 4360.0], [93.7, 4360.0], [93.8, 4360.0], [93.9, 4360.0], [94.0, 4368.0], [94.1, 4368.0], [94.2, 4368.0], [94.3, 4368.0], [94.4, 4368.0], [94.5, 4368.0], [94.6, 4368.0], [94.7, 4368.0], [94.8, 4368.0], [94.9, 4368.0], [95.0, 4400.0], [95.1, 4400.0], [95.2, 4400.0], [95.3, 4400.0], [95.4, 4400.0], [95.5, 4400.0], [95.6, 4400.0], [95.7, 4400.0], [95.8, 4400.0], [95.9, 4400.0], [96.0, 4421.0], [96.1, 4421.0], [96.2, 4421.0], [96.3, 4421.0], [96.4, 4421.0], [96.5, 4421.0], [96.6, 4421.0], [96.7, 4421.0], [96.8, 4421.0], [96.9, 4421.0], [97.0, 4518.0], [97.1, 4518.0], [97.2, 4518.0], [97.3, 4518.0], [97.4, 4518.0], [97.5, 4518.0], [97.6, 4518.0], [97.7, 4518.0], [97.8, 4518.0], [97.9, 4518.0], [98.0, 4821.0], [98.1, 4821.0], [98.2, 4821.0], [98.3, 4821.0], [98.4, 4821.0], [98.5, 4821.0], [98.6, 4821.0], [98.7, 4821.0], [98.8, 4821.0], [98.9, 4821.0], [99.0, 4879.0], [99.1, 4879.0], [99.2, 4879.0], [99.3, 4879.0], [99.4, 4879.0], [99.5, 4879.0], [99.6, 4879.0], [99.7, 4879.0], [99.8, 4879.0], [99.9, 4879.0]], "isOverall": false, "label": "Item Details", "isController": false}, {"data": [[0.0, 2156.0], [0.1, 2156.0], [0.2, 2156.0], [0.3, 2156.0], [0.4, 2156.0], [0.5, 2156.0], [0.6, 2156.0], [0.7, 2156.0], [0.8, 2156.0], [0.9, 2156.0], [1.0, 2188.0], [1.1, 2188.0], [1.2, 2188.0], [1.3, 2188.0], [1.4, 2188.0], [1.5, 2188.0], [1.6, 2188.0], [1.7, 2188.0], [1.8, 2188.0], [1.9, 2188.0], [2.0, 2354.0], [2.1, 2354.0], [2.2, 2354.0], [2.3, 2354.0], [2.4, 2354.0], [2.5, 2354.0], [2.6, 2354.0], [2.7, 2354.0], [2.8, 2354.0], [2.9, 2354.0], [3.0, 2380.0], [3.1, 2380.0], [3.2, 2380.0], [3.3, 2380.0], [3.4, 2380.0], [3.5, 2380.0], [3.6, 2380.0], [3.7, 2380.0], [3.8, 2380.0], [3.9, 2380.0], [4.0, 2426.0], [4.1, 2426.0], [4.2, 2426.0], [4.3, 2426.0], [4.4, 2426.0], [4.5, 2426.0], [4.6, 2426.0], [4.7, 2426.0], [4.8, 2426.0], [4.9, 2426.0], [5.0, 2430.0], [5.1, 2430.0], [5.2, 2430.0], [5.3, 2430.0], [5.4, 2430.0], [5.5, 2430.0], [5.6, 2430.0], [5.7, 2430.0], [5.8, 2430.0], [5.9, 2430.0], [6.0, 2505.0], [6.1, 2505.0], [6.2, 2505.0], [6.3, 2505.0], [6.4, 2505.0], [6.5, 2505.0], [6.6, 2505.0], [6.7, 2505.0], [6.8, 2505.0], [6.9, 2505.0], [7.0, 2512.0], [7.1, 2512.0], [7.2, 2512.0], [7.3, 2512.0], [7.4, 2512.0], [7.5, 2512.0], [7.6, 2512.0], [7.7, 2512.0], [7.8, 2512.0], [7.9, 2512.0], [8.0, 2525.0], [8.1, 2525.0], [8.2, 2525.0], [8.3, 2525.0], [8.4, 2525.0], [8.5, 2525.0], [8.6, 2525.0], [8.7, 2525.0], [8.8, 2525.0], [8.9, 2525.0], [9.0, 2539.0], [9.1, 2539.0], [9.2, 2539.0], [9.3, 2539.0], [9.4, 2539.0], [9.5, 2539.0], [9.6, 2539.0], [9.7, 2539.0], [9.8, 2539.0], [9.9, 2539.0], [10.0, 2547.0], [10.1, 2547.0], [10.2, 2547.0], [10.3, 2547.0], [10.4, 2547.0], [10.5, 2547.0], [10.6, 2547.0], [10.7, 2547.0], [10.8, 2547.0], [10.9, 2547.0], [11.0, 2557.0], [11.1, 2557.0], [11.2, 2557.0], [11.3, 2557.0], [11.4, 2557.0], [11.5, 2557.0], [11.6, 2557.0], [11.7, 2557.0], [11.8, 2557.0], [11.9, 2557.0], [12.0, 2579.0], [12.1, 2579.0], [12.2, 2579.0], [12.3, 2579.0], [12.4, 2579.0], [12.5, 2579.0], [12.6, 2579.0], [12.7, 2579.0], [12.8, 2579.0], [12.9, 2579.0], [13.0, 2587.0], [13.1, 2587.0], [13.2, 2587.0], [13.3, 2587.0], [13.4, 2587.0], [13.5, 2587.0], [13.6, 2587.0], [13.7, 2587.0], [13.8, 2587.0], [13.9, 2587.0], [14.0, 2589.0], [14.1, 2589.0], [14.2, 2589.0], [14.3, 2589.0], [14.4, 2589.0], [14.5, 2589.0], [14.6, 2589.0], [14.7, 2589.0], [14.8, 2589.0], [14.9, 2589.0], [15.0, 2595.0], [15.1, 2595.0], [15.2, 2595.0], [15.3, 2595.0], [15.4, 2595.0], [15.5, 2595.0], [15.6, 2595.0], [15.7, 2595.0], [15.8, 2595.0], [15.9, 2595.0], [16.0, 2600.0], [16.1, 2600.0], [16.2, 2600.0], [16.3, 2600.0], [16.4, 2600.0], [16.5, 2600.0], [16.6, 2600.0], [16.7, 2600.0], [16.8, 2600.0], [16.9, 2600.0], [17.0, 2617.0], [17.1, 2617.0], [17.2, 2617.0], [17.3, 2617.0], [17.4, 2617.0], [17.5, 2617.0], [17.6, 2617.0], [17.7, 2617.0], [17.8, 2617.0], [17.9, 2617.0], [18.0, 2617.0], [18.1, 2617.0], [18.2, 2617.0], [18.3, 2617.0], [18.4, 2617.0], [18.5, 2617.0], [18.6, 2617.0], [18.7, 2617.0], [18.8, 2617.0], [18.9, 2617.0], [19.0, 2638.0], [19.1, 2638.0], [19.2, 2638.0], [19.3, 2638.0], [19.4, 2638.0], [19.5, 2638.0], [19.6, 2638.0], [19.7, 2638.0], [19.8, 2638.0], [19.9, 2638.0], [20.0, 2640.0], [20.1, 2640.0], [20.2, 2640.0], [20.3, 2640.0], [20.4, 2640.0], [20.5, 2640.0], [20.6, 2640.0], [20.7, 2640.0], [20.8, 2640.0], [20.9, 2640.0], [21.0, 2643.0], [21.1, 2643.0], [21.2, 2643.0], [21.3, 2643.0], [21.4, 2643.0], [21.5, 2643.0], [21.6, 2643.0], [21.7, 2643.0], [21.8, 2643.0], [21.9, 2643.0], [22.0, 2658.0], [22.1, 2658.0], [22.2, 2658.0], [22.3, 2658.0], [22.4, 2658.0], [22.5, 2658.0], [22.6, 2658.0], [22.7, 2658.0], [22.8, 2658.0], [22.9, 2658.0], [23.0, 2665.0], [23.1, 2665.0], [23.2, 2665.0], [23.3, 2665.0], [23.4, 2665.0], [23.5, 2665.0], [23.6, 2665.0], [23.7, 2665.0], [23.8, 2665.0], [23.9, 2665.0], [24.0, 2666.0], [24.1, 2666.0], [24.2, 2666.0], [24.3, 2666.0], [24.4, 2666.0], [24.5, 2666.0], [24.6, 2666.0], [24.7, 2666.0], [24.8, 2666.0], [24.9, 2666.0], [25.0, 2669.0], [25.1, 2669.0], [25.2, 2669.0], [25.3, 2669.0], [25.4, 2669.0], [25.5, 2669.0], [25.6, 2669.0], [25.7, 2669.0], [25.8, 2669.0], [25.9, 2669.0], [26.0, 2682.0], [26.1, 2682.0], [26.2, 2682.0], [26.3, 2682.0], [26.4, 2682.0], [26.5, 2682.0], [26.6, 2682.0], [26.7, 2682.0], [26.8, 2682.0], [26.9, 2682.0], [27.0, 2683.0], [27.1, 2683.0], [27.2, 2683.0], [27.3, 2683.0], [27.4, 2683.0], [27.5, 2683.0], [27.6, 2683.0], [27.7, 2683.0], [27.8, 2683.0], [27.9, 2683.0], [28.0, 2684.0], [28.1, 2684.0], [28.2, 2684.0], [28.3, 2684.0], [28.4, 2684.0], [28.5, 2684.0], [28.6, 2684.0], [28.7, 2684.0], [28.8, 2684.0], [28.9, 2684.0], [29.0, 2705.0], [29.1, 2705.0], [29.2, 2705.0], [29.3, 2705.0], [29.4, 2705.0], [29.5, 2705.0], [29.6, 2705.0], [29.7, 2705.0], [29.8, 2705.0], [29.9, 2705.0], [30.0, 2709.0], [30.1, 2709.0], [30.2, 2709.0], [30.3, 2709.0], [30.4, 2709.0], [30.5, 2709.0], [30.6, 2709.0], [30.7, 2709.0], [30.8, 2709.0], [30.9, 2709.0], [31.0, 2716.0], [31.1, 2716.0], [31.2, 2716.0], [31.3, 2716.0], [31.4, 2716.0], [31.5, 2716.0], [31.6, 2716.0], [31.7, 2716.0], [31.8, 2716.0], [31.9, 2716.0], [32.0, 2727.0], [32.1, 2727.0], [32.2, 2727.0], [32.3, 2727.0], [32.4, 2727.0], [32.5, 2727.0], [32.6, 2727.0], [32.7, 2727.0], [32.8, 2727.0], [32.9, 2727.0], [33.0, 2731.0], [33.1, 2731.0], [33.2, 2731.0], [33.3, 2731.0], [33.4, 2731.0], [33.5, 2731.0], [33.6, 2731.0], [33.7, 2731.0], [33.8, 2731.0], [33.9, 2731.0], [34.0, 2735.0], [34.1, 2735.0], [34.2, 2735.0], [34.3, 2735.0], [34.4, 2735.0], [34.5, 2735.0], [34.6, 2735.0], [34.7, 2735.0], [34.8, 2735.0], [34.9, 2735.0], [35.0, 2755.0], [35.1, 2755.0], [35.2, 2755.0], [35.3, 2755.0], [35.4, 2755.0], [35.5, 2755.0], [35.6, 2755.0], [35.7, 2755.0], [35.8, 2755.0], [35.9, 2755.0], [36.0, 2770.0], [36.1, 2770.0], [36.2, 2770.0], [36.3, 2770.0], [36.4, 2770.0], [36.5, 2770.0], [36.6, 2770.0], [36.7, 2770.0], [36.8, 2770.0], [36.9, 2770.0], [37.0, 2776.0], [37.1, 2776.0], [37.2, 2776.0], [37.3, 2776.0], [37.4, 2776.0], [37.5, 2776.0], [37.6, 2776.0], [37.7, 2776.0], [37.8, 2776.0], [37.9, 2776.0], [38.0, 2781.0], [38.1, 2781.0], [38.2, 2781.0], [38.3, 2781.0], [38.4, 2781.0], [38.5, 2781.0], [38.6, 2781.0], [38.7, 2781.0], [38.8, 2781.0], [38.9, 2781.0], [39.0, 2784.0], [39.1, 2784.0], [39.2, 2784.0], [39.3, 2784.0], [39.4, 2784.0], [39.5, 2784.0], [39.6, 2784.0], [39.7, 2784.0], [39.8, 2784.0], [39.9, 2784.0], [40.0, 2792.0], [40.1, 2792.0], [40.2, 2792.0], [40.3, 2792.0], [40.4, 2792.0], [40.5, 2792.0], [40.6, 2792.0], [40.7, 2792.0], [40.8, 2792.0], [40.9, 2792.0], [41.0, 2793.0], [41.1, 2793.0], [41.2, 2793.0], [41.3, 2793.0], [41.4, 2793.0], [41.5, 2793.0], [41.6, 2793.0], [41.7, 2793.0], [41.8, 2793.0], [41.9, 2793.0], [42.0, 2799.0], [42.1, 2799.0], [42.2, 2799.0], [42.3, 2799.0], [42.4, 2799.0], [42.5, 2799.0], [42.6, 2799.0], [42.7, 2799.0], [42.8, 2799.0], [42.9, 2799.0], [43.0, 2820.0], [43.1, 2820.0], [43.2, 2820.0], [43.3, 2820.0], [43.4, 2820.0], [43.5, 2820.0], [43.6, 2820.0], [43.7, 2820.0], [43.8, 2820.0], [43.9, 2820.0], [44.0, 2827.0], [44.1, 2827.0], [44.2, 2827.0], [44.3, 2827.0], [44.4, 2827.0], [44.5, 2827.0], [44.6, 2827.0], [44.7, 2827.0], [44.8, 2827.0], [44.9, 2827.0], [45.0, 2832.0], [45.1, 2832.0], [45.2, 2832.0], [45.3, 2832.0], [45.4, 2832.0], [45.5, 2832.0], [45.6, 2832.0], [45.7, 2832.0], [45.8, 2832.0], [45.9, 2832.0], [46.0, 2836.0], [46.1, 2836.0], [46.2, 2836.0], [46.3, 2836.0], [46.4, 2836.0], [46.5, 2836.0], [46.6, 2836.0], [46.7, 2836.0], [46.8, 2836.0], [46.9, 2836.0], [47.0, 2841.0], [47.1, 2841.0], [47.2, 2841.0], [47.3, 2841.0], [47.4, 2841.0], [47.5, 2841.0], [47.6, 2841.0], [47.7, 2841.0], [47.8, 2841.0], [47.9, 2841.0], [48.0, 2852.0], [48.1, 2852.0], [48.2, 2852.0], [48.3, 2852.0], [48.4, 2852.0], [48.5, 2852.0], [48.6, 2852.0], [48.7, 2852.0], [48.8, 2852.0], [48.9, 2852.0], [49.0, 2853.0], [49.1, 2853.0], [49.2, 2853.0], [49.3, 2853.0], [49.4, 2853.0], [49.5, 2853.0], [49.6, 2853.0], [49.7, 2853.0], [49.8, 2853.0], [49.9, 2853.0], [50.0, 2870.0], [50.1, 2870.0], [50.2, 2870.0], [50.3, 2870.0], [50.4, 2870.0], [50.5, 2870.0], [50.6, 2870.0], [50.7, 2870.0], [50.8, 2870.0], [50.9, 2870.0], [51.0, 2878.0], [51.1, 2878.0], [51.2, 2878.0], [51.3, 2878.0], [51.4, 2878.0], [51.5, 2878.0], [51.6, 2878.0], [51.7, 2878.0], [51.8, 2878.0], [51.9, 2878.0], [52.0, 2881.0], [52.1, 2881.0], [52.2, 2881.0], [52.3, 2881.0], [52.4, 2881.0], [52.5, 2881.0], [52.6, 2881.0], [52.7, 2881.0], [52.8, 2881.0], [52.9, 2881.0], [53.0, 2888.0], [53.1, 2888.0], [53.2, 2888.0], [53.3, 2888.0], [53.4, 2888.0], [53.5, 2888.0], [53.6, 2888.0], [53.7, 2888.0], [53.8, 2888.0], [53.9, 2888.0], [54.0, 2910.0], [54.1, 2910.0], [54.2, 2910.0], [54.3, 2910.0], [54.4, 2910.0], [54.5, 2910.0], [54.6, 2910.0], [54.7, 2910.0], [54.8, 2910.0], [54.9, 2910.0], [55.0, 2917.0], [55.1, 2917.0], [55.2, 2917.0], [55.3, 2917.0], [55.4, 2917.0], [55.5, 2917.0], [55.6, 2917.0], [55.7, 2917.0], [55.8, 2917.0], [55.9, 2917.0], [56.0, 2918.0], [56.1, 2918.0], [56.2, 2918.0], [56.3, 2918.0], [56.4, 2918.0], [56.5, 2918.0], [56.6, 2918.0], [56.7, 2918.0], [56.8, 2918.0], [56.9, 2918.0], [57.0, 2927.0], [57.1, 2927.0], [57.2, 2927.0], [57.3, 2927.0], [57.4, 2927.0], [57.5, 2927.0], [57.6, 2927.0], [57.7, 2927.0], [57.8, 2927.0], [57.9, 2927.0], [58.0, 2950.0], [58.1, 2950.0], [58.2, 2950.0], [58.3, 2950.0], [58.4, 2950.0], [58.5, 2950.0], [58.6, 2950.0], [58.7, 2950.0], [58.8, 2950.0], [58.9, 2950.0], [59.0, 2954.0], [59.1, 2954.0], [59.2, 2954.0], [59.3, 2954.0], [59.4, 2954.0], [59.5, 2954.0], [59.6, 2954.0], [59.7, 2954.0], [59.8, 2954.0], [59.9, 2954.0], [60.0, 2966.0], [60.1, 2966.0], [60.2, 2966.0], [60.3, 2966.0], [60.4, 2966.0], [60.5, 2966.0], [60.6, 2966.0], [60.7, 2966.0], [60.8, 2966.0], [60.9, 2966.0], [61.0, 2980.0], [61.1, 2980.0], [61.2, 2980.0], [61.3, 2980.0], [61.4, 2980.0], [61.5, 2980.0], [61.6, 2980.0], [61.7, 2980.0], [61.8, 2980.0], [61.9, 2980.0], [62.0, 2990.0], [62.1, 2990.0], [62.2, 2990.0], [62.3, 2990.0], [62.4, 2990.0], [62.5, 2990.0], [62.6, 2990.0], [62.7, 2990.0], [62.8, 2990.0], [62.9, 2990.0], [63.0, 2993.0], [63.1, 2993.0], [63.2, 2993.0], [63.3, 2993.0], [63.4, 2993.0], [63.5, 2993.0], [63.6, 2993.0], [63.7, 2993.0], [63.8, 2993.0], [63.9, 2993.0], [64.0, 2995.0], [64.1, 2995.0], [64.2, 2995.0], [64.3, 2995.0], [64.4, 2995.0], [64.5, 2995.0], [64.6, 2995.0], [64.7, 2995.0], [64.8, 2995.0], [64.9, 2995.0], [65.0, 3005.0], [65.1, 3005.0], [65.2, 3005.0], [65.3, 3005.0], [65.4, 3005.0], [65.5, 3005.0], [65.6, 3005.0], [65.7, 3005.0], [65.8, 3005.0], [65.9, 3005.0], [66.0, 3029.0], [66.1, 3029.0], [66.2, 3029.0], [66.3, 3029.0], [66.4, 3029.0], [66.5, 3029.0], [66.6, 3029.0], [66.7, 3029.0], [66.8, 3029.0], [66.9, 3029.0], [67.0, 3046.0], [67.1, 3046.0], [67.2, 3046.0], [67.3, 3046.0], [67.4, 3046.0], [67.5, 3046.0], [67.6, 3046.0], [67.7, 3046.0], [67.8, 3046.0], [67.9, 3046.0], [68.0, 3062.0], [68.1, 3062.0], [68.2, 3062.0], [68.3, 3062.0], [68.4, 3062.0], [68.5, 3062.0], [68.6, 3062.0], [68.7, 3062.0], [68.8, 3062.0], [68.9, 3062.0], [69.0, 3079.0], [69.1, 3079.0], [69.2, 3079.0], [69.3, 3079.0], [69.4, 3079.0], [69.5, 3079.0], [69.6, 3079.0], [69.7, 3079.0], [69.8, 3079.0], [69.9, 3079.0], [70.0, 3100.0], [70.1, 3100.0], [70.2, 3100.0], [70.3, 3100.0], [70.4, 3100.0], [70.5, 3100.0], [70.6, 3100.0], [70.7, 3100.0], [70.8, 3100.0], [70.9, 3100.0], [71.0, 3123.0], [71.1, 3123.0], [71.2, 3123.0], [71.3, 3123.0], [71.4, 3123.0], [71.5, 3123.0], [71.6, 3123.0], [71.7, 3123.0], [71.8, 3123.0], [71.9, 3123.0], [72.0, 3132.0], [72.1, 3132.0], [72.2, 3132.0], [72.3, 3132.0], [72.4, 3132.0], [72.5, 3132.0], [72.6, 3132.0], [72.7, 3132.0], [72.8, 3132.0], [72.9, 3132.0], [73.0, 3160.0], [73.1, 3160.0], [73.2, 3160.0], [73.3, 3160.0], [73.4, 3160.0], [73.5, 3160.0], [73.6, 3160.0], [73.7, 3160.0], [73.8, 3160.0], [73.9, 3160.0], [74.0, 3188.0], [74.1, 3188.0], [74.2, 3188.0], [74.3, 3188.0], [74.4, 3188.0], [74.5, 3188.0], [74.6, 3188.0], [74.7, 3188.0], [74.8, 3188.0], [74.9, 3188.0], [75.0, 3211.0], [75.1, 3211.0], [75.2, 3211.0], [75.3, 3211.0], [75.4, 3211.0], [75.5, 3211.0], [75.6, 3211.0], [75.7, 3211.0], [75.8, 3211.0], [75.9, 3211.0], [76.0, 3266.0], [76.1, 3266.0], [76.2, 3266.0], [76.3, 3266.0], [76.4, 3266.0], [76.5, 3266.0], [76.6, 3266.0], [76.7, 3266.0], [76.8, 3266.0], [76.9, 3266.0], [77.0, 3288.0], [77.1, 3288.0], [77.2, 3288.0], [77.3, 3288.0], [77.4, 3288.0], [77.5, 3288.0], [77.6, 3288.0], [77.7, 3288.0], [77.8, 3288.0], [77.9, 3288.0], [78.0, 3304.0], [78.1, 3304.0], [78.2, 3304.0], [78.3, 3304.0], [78.4, 3304.0], [78.5, 3304.0], [78.6, 3304.0], [78.7, 3304.0], [78.8, 3304.0], [78.9, 3304.0], [79.0, 3314.0], [79.1, 3314.0], [79.2, 3314.0], [79.3, 3314.0], [79.4, 3314.0], [79.5, 3314.0], [79.6, 3314.0], [79.7, 3314.0], [79.8, 3314.0], [79.9, 3314.0], [80.0, 3336.0], [80.1, 3336.0], [80.2, 3336.0], [80.3, 3336.0], [80.4, 3336.0], [80.5, 3336.0], [80.6, 3336.0], [80.7, 3336.0], [80.8, 3336.0], [80.9, 3336.0], [81.0, 3399.0], [81.1, 3399.0], [81.2, 3399.0], [81.3, 3399.0], [81.4, 3399.0], [81.5, 3399.0], [81.6, 3399.0], [81.7, 3399.0], [81.8, 3399.0], [81.9, 3399.0], [82.0, 3412.0], [82.1, 3412.0], [82.2, 3412.0], [82.3, 3412.0], [82.4, 3412.0], [82.5, 3412.0], [82.6, 3412.0], [82.7, 3412.0], [82.8, 3412.0], [82.9, 3412.0], [83.0, 3454.0], [83.1, 3454.0], [83.2, 3454.0], [83.3, 3454.0], [83.4, 3454.0], [83.5, 3454.0], [83.6, 3454.0], [83.7, 3454.0], [83.8, 3454.0], [83.9, 3454.0], [84.0, 3515.0], [84.1, 3515.0], [84.2, 3515.0], [84.3, 3515.0], [84.4, 3515.0], [84.5, 3515.0], [84.6, 3515.0], [84.7, 3515.0], [84.8, 3515.0], [84.9, 3515.0], [85.0, 3575.0], [85.1, 3575.0], [85.2, 3575.0], [85.3, 3575.0], [85.4, 3575.0], [85.5, 3575.0], [85.6, 3575.0], [85.7, 3575.0], [85.8, 3575.0], [85.9, 3575.0], [86.0, 3584.0], [86.1, 3584.0], [86.2, 3584.0], [86.3, 3584.0], [86.4, 3584.0], [86.5, 3584.0], [86.6, 3584.0], [86.7, 3584.0], [86.8, 3584.0], [86.9, 3584.0], [87.0, 3594.0], [87.1, 3594.0], [87.2, 3594.0], [87.3, 3594.0], [87.4, 3594.0], [87.5, 3594.0], [87.6, 3594.0], [87.7, 3594.0], [87.8, 3594.0], [87.9, 3594.0], [88.0, 3759.0], [88.1, 3759.0], [88.2, 3759.0], [88.3, 3759.0], [88.4, 3759.0], [88.5, 3759.0], [88.6, 3759.0], [88.7, 3759.0], [88.8, 3759.0], [88.9, 3759.0], [89.0, 3973.0], [89.1, 3973.0], [89.2, 3973.0], [89.3, 3973.0], [89.4, 3973.0], [89.5, 3973.0], [89.6, 3973.0], [89.7, 3973.0], [89.8, 3973.0], [89.9, 3973.0], [90.0, 4175.0], [90.1, 4175.0], [90.2, 4175.0], [90.3, 4175.0], [90.4, 4175.0], [90.5, 4175.0], [90.6, 4175.0], [90.7, 4175.0], [90.8, 4175.0], [90.9, 4175.0], [91.0, 4443.0], [91.1, 4443.0], [91.2, 4443.0], [91.3, 4443.0], [91.4, 4443.0], [91.5, 4443.0], [91.6, 4443.0], [91.7, 4443.0], [91.8, 4443.0], [91.9, 4443.0], [92.0, 4946.0], [92.1, 4946.0], [92.2, 4946.0], [92.3, 4946.0], [92.4, 4946.0], [92.5, 4946.0], [92.6, 4946.0], [92.7, 4946.0], [92.8, 4946.0], [92.9, 4946.0], [93.0, 5002.0], [93.1, 5002.0], [93.2, 5002.0], [93.3, 5002.0], [93.4, 5002.0], [93.5, 5002.0], [93.6, 5002.0], [93.7, 5002.0], [93.8, 5002.0], [93.9, 5002.0], [94.0, 5111.0], [94.1, 5111.0], [94.2, 5111.0], [94.3, 5111.0], [94.4, 5111.0], [94.5, 5111.0], [94.6, 5111.0], [94.7, 5111.0], [94.8, 5111.0], [94.9, 5111.0], [95.0, 5346.0], [95.1, 5346.0], [95.2, 5346.0], [95.3, 5346.0], [95.4, 5346.0], [95.5, 5346.0], [95.6, 5346.0], [95.7, 5346.0], [95.8, 5346.0], [95.9, 5346.0], [96.0, 5408.0], [96.1, 5408.0], [96.2, 5408.0], [96.3, 5408.0], [96.4, 5408.0], [96.5, 5408.0], [96.6, 5408.0], [96.7, 5408.0], [96.8, 5408.0], [96.9, 5408.0], [97.0, 5561.0], [97.1, 5561.0], [97.2, 5561.0], [97.3, 5561.0], [97.4, 5561.0], [97.5, 5561.0], [97.6, 5561.0], [97.7, 5561.0], [97.8, 5561.0], [97.9, 5561.0], [98.0, 6325.0], [98.1, 6325.0], [98.2, 6325.0], [98.3, 6325.0], [98.4, 6325.0], [98.5, 6325.0], [98.6, 6325.0], [98.7, 6325.0], [98.8, 6325.0], [98.9, 6325.0], [99.0, 6391.0], [99.1, 6391.0], [99.2, 6391.0], [99.3, 6391.0], [99.4, 6391.0], [99.5, 6391.0], [99.6, 6391.0], [99.7, 6391.0], [99.8, 6391.0], [99.9, 6391.0]], "isOverall": false, "label": "View Items", "isController": false}, {"data": [[0.0, 2174.0], [0.1, 2174.0], [0.2, 2174.0], [0.3, 2174.0], [0.4, 2174.0], [0.5, 2174.0], [0.6, 2174.0], [0.7, 2174.0], [0.8, 2174.0], [0.9, 2174.0], [1.0, 2224.0], [1.1, 2224.0], [1.2, 2224.0], [1.3, 2224.0], [1.4, 2224.0], [1.5, 2224.0], [1.6, 2224.0], [1.7, 2224.0], [1.8, 2224.0], [1.9, 2224.0], [2.0, 2225.0], [2.1, 2225.0], [2.2, 2225.0], [2.3, 2225.0], [2.4, 2225.0], [2.5, 2225.0], [2.6, 2225.0], [2.7, 2225.0], [2.8, 2225.0], [2.9, 2225.0], [3.0, 2233.0], [3.1, 2233.0], [3.2, 2233.0], [3.3, 2233.0], [3.4, 2233.0], [3.5, 2233.0], [3.6, 2233.0], [3.7, 2233.0], [3.8, 2233.0], [3.9, 2233.0], [4.0, 2236.0], [4.1, 2236.0], [4.2, 2236.0], [4.3, 2236.0], [4.4, 2236.0], [4.5, 2236.0], [4.6, 2236.0], [4.7, 2236.0], [4.8, 2236.0], [4.9, 2236.0], [5.0, 2237.0], [5.1, 2237.0], [5.2, 2237.0], [5.3, 2237.0], [5.4, 2237.0], [5.5, 2237.0], [5.6, 2237.0], [5.7, 2237.0], [5.8, 2237.0], [5.9, 2237.0], [6.0, 2240.0], [6.1, 2240.0], [6.2, 2240.0], [6.3, 2240.0], [6.4, 2240.0], [6.5, 2240.0], [6.6, 2240.0], [6.7, 2240.0], [6.8, 2240.0], [6.9, 2240.0], [7.0, 2245.0], [7.1, 2245.0], [7.2, 2245.0], [7.3, 2245.0], [7.4, 2245.0], [7.5, 2245.0], [7.6, 2245.0], [7.7, 2245.0], [7.8, 2245.0], [7.9, 2245.0], [8.0, 2246.0], [8.1, 2246.0], [8.2, 2246.0], [8.3, 2246.0], [8.4, 2246.0], [8.5, 2246.0], [8.6, 2246.0], [8.7, 2246.0], [8.8, 2246.0], [8.9, 2246.0], [9.0, 2247.0], [9.1, 2247.0], [9.2, 2247.0], [9.3, 2247.0], [9.4, 2247.0], [9.5, 2247.0], [9.6, 2247.0], [9.7, 2247.0], [9.8, 2247.0], [9.9, 2247.0], [10.0, 2255.0], [10.1, 2255.0], [10.2, 2255.0], [10.3, 2255.0], [10.4, 2255.0], [10.5, 2255.0], [10.6, 2255.0], [10.7, 2255.0], [10.8, 2255.0], [10.9, 2255.0], [11.0, 2259.0], [11.1, 2259.0], [11.2, 2259.0], [11.3, 2259.0], [11.4, 2259.0], [11.5, 2259.0], [11.6, 2259.0], [11.7, 2259.0], [11.8, 2259.0], [11.9, 2259.0], [12.0, 2259.0], [12.1, 2259.0], [12.2, 2259.0], [12.3, 2259.0], [12.4, 2259.0], [12.5, 2259.0], [12.6, 2259.0], [12.7, 2259.0], [12.8, 2259.0], [12.9, 2259.0], [13.0, 2261.0], [13.1, 2261.0], [13.2, 2261.0], [13.3, 2261.0], [13.4, 2261.0], [13.5, 2261.0], [13.6, 2261.0], [13.7, 2261.0], [13.8, 2261.0], [13.9, 2261.0], [14.0, 2262.0], [14.1, 2262.0], [14.2, 2262.0], [14.3, 2262.0], [14.4, 2262.0], [14.5, 2262.0], [14.6, 2262.0], [14.7, 2262.0], [14.8, 2262.0], [14.9, 2262.0], [15.0, 2263.0], [15.1, 2263.0], [15.2, 2263.0], [15.3, 2263.0], [15.4, 2263.0], [15.5, 2263.0], [15.6, 2263.0], [15.7, 2263.0], [15.8, 2263.0], [15.9, 2263.0], [16.0, 2265.0], [16.1, 2265.0], [16.2, 2265.0], [16.3, 2265.0], [16.4, 2265.0], [16.5, 2265.0], [16.6, 2265.0], [16.7, 2265.0], [16.8, 2265.0], [16.9, 2265.0], [17.0, 2266.0], [17.1, 2266.0], [17.2, 2266.0], [17.3, 2266.0], [17.4, 2266.0], [17.5, 2266.0], [17.6, 2266.0], [17.7, 2266.0], [17.8, 2266.0], [17.9, 2266.0], [18.0, 2272.0], [18.1, 2272.0], [18.2, 2272.0], [18.3, 2272.0], [18.4, 2272.0], [18.5, 2272.0], [18.6, 2272.0], [18.7, 2272.0], [18.8, 2272.0], [18.9, 2272.0], [19.0, 2275.0], [19.1, 2275.0], [19.2, 2275.0], [19.3, 2275.0], [19.4, 2275.0], [19.5, 2275.0], [19.6, 2275.0], [19.7, 2275.0], [19.8, 2275.0], [19.9, 2275.0], [20.0, 2276.0], [20.1, 2276.0], [20.2, 2276.0], [20.3, 2276.0], [20.4, 2276.0], [20.5, 2276.0], [20.6, 2276.0], [20.7, 2276.0], [20.8, 2276.0], [20.9, 2276.0], [21.0, 2277.0], [21.1, 2277.0], [21.2, 2277.0], [21.3, 2277.0], [21.4, 2277.0], [21.5, 2277.0], [21.6, 2277.0], [21.7, 2277.0], [21.8, 2277.0], [21.9, 2277.0], [22.0, 2279.0], [22.1, 2279.0], [22.2, 2279.0], [22.3, 2279.0], [22.4, 2279.0], [22.5, 2279.0], [22.6, 2279.0], [22.7, 2279.0], [22.8, 2279.0], [22.9, 2279.0], [23.0, 2284.0], [23.1, 2284.0], [23.2, 2284.0], [23.3, 2284.0], [23.4, 2284.0], [23.5, 2284.0], [23.6, 2284.0], [23.7, 2284.0], [23.8, 2284.0], [23.9, 2284.0], [24.0, 2291.0], [24.1, 2291.0], [24.2, 2291.0], [24.3, 2291.0], [24.4, 2291.0], [24.5, 2291.0], [24.6, 2291.0], [24.7, 2291.0], [24.8, 2291.0], [24.9, 2291.0], [25.0, 2294.0], [25.1, 2294.0], [25.2, 2294.0], [25.3, 2294.0], [25.4, 2294.0], [25.5, 2294.0], [25.6, 2294.0], [25.7, 2294.0], [25.8, 2294.0], [25.9, 2294.0], [26.0, 2300.0], [26.1, 2300.0], [26.2, 2300.0], [26.3, 2300.0], [26.4, 2300.0], [26.5, 2300.0], [26.6, 2300.0], [26.7, 2300.0], [26.8, 2300.0], [26.9, 2300.0], [27.0, 2301.0], [27.1, 2301.0], [27.2, 2301.0], [27.3, 2301.0], [27.4, 2301.0], [27.5, 2301.0], [27.6, 2301.0], [27.7, 2301.0], [27.8, 2301.0], [27.9, 2301.0], [28.0, 2314.0], [28.1, 2314.0], [28.2, 2314.0], [28.3, 2314.0], [28.4, 2314.0], [28.5, 2314.0], [28.6, 2314.0], [28.7, 2314.0], [28.8, 2314.0], [28.9, 2314.0], [29.0, 2316.0], [29.1, 2316.0], [29.2, 2316.0], [29.3, 2316.0], [29.4, 2316.0], [29.5, 2316.0], [29.6, 2316.0], [29.7, 2316.0], [29.8, 2316.0], [29.9, 2316.0], [30.0, 2317.0], [30.1, 2317.0], [30.2, 2317.0], [30.3, 2317.0], [30.4, 2317.0], [30.5, 2317.0], [30.6, 2317.0], [30.7, 2317.0], [30.8, 2317.0], [30.9, 2317.0], [31.0, 2317.0], [31.1, 2317.0], [31.2, 2317.0], [31.3, 2317.0], [31.4, 2317.0], [31.5, 2317.0], [31.6, 2317.0], [31.7, 2317.0], [31.8, 2317.0], [31.9, 2317.0], [32.0, 2318.0], [32.1, 2318.0], [32.2, 2318.0], [32.3, 2318.0], [32.4, 2318.0], [32.5, 2318.0], [32.6, 2318.0], [32.7, 2318.0], [32.8, 2318.0], [32.9, 2318.0], [33.0, 2320.0], [33.1, 2320.0], [33.2, 2320.0], [33.3, 2320.0], [33.4, 2320.0], [33.5, 2320.0], [33.6, 2320.0], [33.7, 2320.0], [33.8, 2320.0], [33.9, 2320.0], [34.0, 2325.0], [34.1, 2325.0], [34.2, 2325.0], [34.3, 2325.0], [34.4, 2325.0], [34.5, 2325.0], [34.6, 2325.0], [34.7, 2325.0], [34.8, 2325.0], [34.9, 2325.0], [35.0, 2326.0], [35.1, 2326.0], [35.2, 2326.0], [35.3, 2326.0], [35.4, 2326.0], [35.5, 2326.0], [35.6, 2326.0], [35.7, 2326.0], [35.8, 2326.0], [35.9, 2326.0], [36.0, 2328.0], [36.1, 2328.0], [36.2, 2328.0], [36.3, 2328.0], [36.4, 2328.0], [36.5, 2328.0], [36.6, 2328.0], [36.7, 2328.0], [36.8, 2328.0], [36.9, 2328.0], [37.0, 2333.0], [37.1, 2333.0], [37.2, 2333.0], [37.3, 2333.0], [37.4, 2333.0], [37.5, 2333.0], [37.6, 2333.0], [37.7, 2333.0], [37.8, 2333.0], [37.9, 2333.0], [38.0, 2335.0], [38.1, 2335.0], [38.2, 2335.0], [38.3, 2335.0], [38.4, 2335.0], [38.5, 2335.0], [38.6, 2335.0], [38.7, 2335.0], [38.8, 2335.0], [38.9, 2335.0], [39.0, 2336.0], [39.1, 2336.0], [39.2, 2336.0], [39.3, 2336.0], [39.4, 2336.0], [39.5, 2336.0], [39.6, 2336.0], [39.7, 2336.0], [39.8, 2336.0], [39.9, 2336.0], [40.0, 2344.0], [40.1, 2344.0], [40.2, 2344.0], [40.3, 2344.0], [40.4, 2344.0], [40.5, 2344.0], [40.6, 2344.0], [40.7, 2344.0], [40.8, 2344.0], [40.9, 2344.0], [41.0, 2345.0], [41.1, 2345.0], [41.2, 2345.0], [41.3, 2345.0], [41.4, 2345.0], [41.5, 2345.0], [41.6, 2345.0], [41.7, 2345.0], [41.8, 2345.0], [41.9, 2345.0], [42.0, 2346.0], [42.1, 2346.0], [42.2, 2346.0], [42.3, 2346.0], [42.4, 2346.0], [42.5, 2346.0], [42.6, 2346.0], [42.7, 2346.0], [42.8, 2346.0], [42.9, 2346.0], [43.0, 2351.0], [43.1, 2351.0], [43.2, 2351.0], [43.3, 2351.0], [43.4, 2351.0], [43.5, 2351.0], [43.6, 2351.0], [43.7, 2351.0], [43.8, 2351.0], [43.9, 2351.0], [44.0, 2352.0], [44.1, 2352.0], [44.2, 2352.0], [44.3, 2352.0], [44.4, 2352.0], [44.5, 2352.0], [44.6, 2352.0], [44.7, 2352.0], [44.8, 2352.0], [44.9, 2352.0], [45.0, 2352.0], [45.1, 2352.0], [45.2, 2352.0], [45.3, 2352.0], [45.4, 2352.0], [45.5, 2352.0], [45.6, 2352.0], [45.7, 2352.0], [45.8, 2352.0], [45.9, 2352.0], [46.0, 2355.0], [46.1, 2355.0], [46.2, 2355.0], [46.3, 2355.0], [46.4, 2355.0], [46.5, 2355.0], [46.6, 2355.0], [46.7, 2355.0], [46.8, 2355.0], [46.9, 2355.0], [47.0, 2356.0], [47.1, 2356.0], [47.2, 2356.0], [47.3, 2356.0], [47.4, 2356.0], [47.5, 2356.0], [47.6, 2356.0], [47.7, 2356.0], [47.8, 2356.0], [47.9, 2356.0], [48.0, 2360.0], [48.1, 2360.0], [48.2, 2360.0], [48.3, 2360.0], [48.4, 2360.0], [48.5, 2360.0], [48.6, 2360.0], [48.7, 2360.0], [48.8, 2360.0], [48.9, 2360.0], [49.0, 2361.0], [49.1, 2361.0], [49.2, 2361.0], [49.3, 2361.0], [49.4, 2361.0], [49.5, 2361.0], [49.6, 2361.0], [49.7, 2361.0], [49.8, 2361.0], [49.9, 2361.0], [50.0, 2363.0], [50.1, 2363.0], [50.2, 2363.0], [50.3, 2363.0], [50.4, 2363.0], [50.5, 2363.0], [50.6, 2363.0], [50.7, 2363.0], [50.8, 2363.0], [50.9, 2363.0], [51.0, 2364.0], [51.1, 2364.0], [51.2, 2364.0], [51.3, 2364.0], [51.4, 2364.0], [51.5, 2364.0], [51.6, 2364.0], [51.7, 2364.0], [51.8, 2364.0], [51.9, 2364.0], [52.0, 2364.0], [52.1, 2364.0], [52.2, 2364.0], [52.3, 2364.0], [52.4, 2364.0], [52.5, 2364.0], [52.6, 2364.0], [52.7, 2364.0], [52.8, 2364.0], [52.9, 2364.0], [53.0, 2365.0], [53.1, 2365.0], [53.2, 2365.0], [53.3, 2365.0], [53.4, 2365.0], [53.5, 2365.0], [53.6, 2365.0], [53.7, 2365.0], [53.8, 2365.0], [53.9, 2365.0], [54.0, 2368.0], [54.1, 2368.0], [54.2, 2368.0], [54.3, 2368.0], [54.4, 2368.0], [54.5, 2368.0], [54.6, 2368.0], [54.7, 2368.0], [54.8, 2368.0], [54.9, 2368.0], [55.0, 2371.0], [55.1, 2371.0], [55.2, 2371.0], [55.3, 2371.0], [55.4, 2371.0], [55.5, 2371.0], [55.6, 2371.0], [55.7, 2371.0], [55.8, 2371.0], [55.9, 2371.0], [56.0, 2376.0], [56.1, 2376.0], [56.2, 2376.0], [56.3, 2376.0], [56.4, 2376.0], [56.5, 2376.0], [56.6, 2376.0], [56.7, 2376.0], [56.8, 2376.0], [56.9, 2376.0], [57.0, 2378.0], [57.1, 2378.0], [57.2, 2378.0], [57.3, 2378.0], [57.4, 2378.0], [57.5, 2378.0], [57.6, 2378.0], [57.7, 2378.0], [57.8, 2378.0], [57.9, 2378.0], [58.0, 2380.0], [58.1, 2380.0], [58.2, 2380.0], [58.3, 2380.0], [58.4, 2380.0], [58.5, 2380.0], [58.6, 2380.0], [58.7, 2380.0], [58.8, 2380.0], [58.9, 2380.0], [59.0, 2384.0], [59.1, 2384.0], [59.2, 2384.0], [59.3, 2384.0], [59.4, 2384.0], [59.5, 2384.0], [59.6, 2384.0], [59.7, 2384.0], [59.8, 2384.0], [59.9, 2384.0], [60.0, 2395.0], [60.1, 2395.0], [60.2, 2395.0], [60.3, 2395.0], [60.4, 2395.0], [60.5, 2395.0], [60.6, 2395.0], [60.7, 2395.0], [60.8, 2395.0], [60.9, 2395.0], [61.0, 2399.0], [61.1, 2399.0], [61.2, 2399.0], [61.3, 2399.0], [61.4, 2399.0], [61.5, 2399.0], [61.6, 2399.0], [61.7, 2399.0], [61.8, 2399.0], [61.9, 2399.0], [62.0, 2402.0], [62.1, 2402.0], [62.2, 2402.0], [62.3, 2402.0], [62.4, 2402.0], [62.5, 2402.0], [62.6, 2402.0], [62.7, 2402.0], [62.8, 2402.0], [62.9, 2402.0], [63.0, 2409.0], [63.1, 2409.0], [63.2, 2409.0], [63.3, 2409.0], [63.4, 2409.0], [63.5, 2409.0], [63.6, 2409.0], [63.7, 2409.0], [63.8, 2409.0], [63.9, 2409.0], [64.0, 2415.0], [64.1, 2415.0], [64.2, 2415.0], [64.3, 2415.0], [64.4, 2415.0], [64.5, 2415.0], [64.6, 2415.0], [64.7, 2415.0], [64.8, 2415.0], [64.9, 2415.0], [65.0, 2416.0], [65.1, 2416.0], [65.2, 2416.0], [65.3, 2416.0], [65.4, 2416.0], [65.5, 2416.0], [65.6, 2416.0], [65.7, 2416.0], [65.8, 2416.0], [65.9, 2416.0], [66.0, 2426.0], [66.1, 2426.0], [66.2, 2426.0], [66.3, 2426.0], [66.4, 2426.0], [66.5, 2426.0], [66.6, 2426.0], [66.7, 2426.0], [66.8, 2426.0], [66.9, 2426.0], [67.0, 2435.0], [67.1, 2435.0], [67.2, 2435.0], [67.3, 2435.0], [67.4, 2435.0], [67.5, 2435.0], [67.6, 2435.0], [67.7, 2435.0], [67.8, 2435.0], [67.9, 2435.0], [68.0, 2436.0], [68.1, 2436.0], [68.2, 2436.0], [68.3, 2436.0], [68.4, 2436.0], [68.5, 2436.0], [68.6, 2436.0], [68.7, 2436.0], [68.8, 2436.0], [68.9, 2436.0], [69.0, 2436.0], [69.1, 2436.0], [69.2, 2436.0], [69.3, 2436.0], [69.4, 2436.0], [69.5, 2436.0], [69.6, 2436.0], [69.7, 2436.0], [69.8, 2436.0], [69.9, 2436.0], [70.0, 2454.0], [70.1, 2454.0], [70.2, 2454.0], [70.3, 2454.0], [70.4, 2454.0], [70.5, 2454.0], [70.6, 2454.0], [70.7, 2454.0], [70.8, 2454.0], [70.9, 2454.0], [71.0, 2460.0], [71.1, 2460.0], [71.2, 2460.0], [71.3, 2460.0], [71.4, 2460.0], [71.5, 2460.0], [71.6, 2460.0], [71.7, 2460.0], [71.8, 2460.0], [71.9, 2460.0], [72.0, 2466.0], [72.1, 2466.0], [72.2, 2466.0], [72.3, 2466.0], [72.4, 2466.0], [72.5, 2466.0], [72.6, 2466.0], [72.7, 2466.0], [72.8, 2466.0], [72.9, 2466.0], [73.0, 2466.0], [73.1, 2466.0], [73.2, 2466.0], [73.3, 2466.0], [73.4, 2466.0], [73.5, 2466.0], [73.6, 2466.0], [73.7, 2466.0], [73.8, 2466.0], [73.9, 2466.0], [74.0, 2467.0], [74.1, 2467.0], [74.2, 2467.0], [74.3, 2467.0], [74.4, 2467.0], [74.5, 2467.0], [74.6, 2467.0], [74.7, 2467.0], [74.8, 2467.0], [74.9, 2467.0], [75.0, 2470.0], [75.1, 2470.0], [75.2, 2470.0], [75.3, 2470.0], [75.4, 2470.0], [75.5, 2470.0], [75.6, 2470.0], [75.7, 2470.0], [75.8, 2470.0], [75.9, 2470.0], [76.0, 2485.0], [76.1, 2485.0], [76.2, 2485.0], [76.3, 2485.0], [76.4, 2485.0], [76.5, 2485.0], [76.6, 2485.0], [76.7, 2485.0], [76.8, 2485.0], [76.9, 2485.0], [77.0, 2491.0], [77.1, 2491.0], [77.2, 2491.0], [77.3, 2491.0], [77.4, 2491.0], [77.5, 2491.0], [77.6, 2491.0], [77.7, 2491.0], [77.8, 2491.0], [77.9, 2491.0], [78.0, 2494.0], [78.1, 2494.0], [78.2, 2494.0], [78.3, 2494.0], [78.4, 2494.0], [78.5, 2494.0], [78.6, 2494.0], [78.7, 2494.0], [78.8, 2494.0], [78.9, 2494.0], [79.0, 2503.0], [79.1, 2503.0], [79.2, 2503.0], [79.3, 2503.0], [79.4, 2503.0], [79.5, 2503.0], [79.6, 2503.0], [79.7, 2503.0], [79.8, 2503.0], [79.9, 2503.0], [80.0, 2506.0], [80.1, 2506.0], [80.2, 2506.0], [80.3, 2506.0], [80.4, 2506.0], [80.5, 2506.0], [80.6, 2506.0], [80.7, 2506.0], [80.8, 2506.0], [80.9, 2506.0], [81.0, 2508.0], [81.1, 2508.0], [81.2, 2508.0], [81.3, 2508.0], [81.4, 2508.0], [81.5, 2508.0], [81.6, 2508.0], [81.7, 2508.0], [81.8, 2508.0], [81.9, 2508.0], [82.0, 2514.0], [82.1, 2514.0], [82.2, 2514.0], [82.3, 2514.0], [82.4, 2514.0], [82.5, 2514.0], [82.6, 2514.0], [82.7, 2514.0], [82.8, 2514.0], [82.9, 2514.0], [83.0, 2514.0], [83.1, 2514.0], [83.2, 2514.0], [83.3, 2514.0], [83.4, 2514.0], [83.5, 2514.0], [83.6, 2514.0], [83.7, 2514.0], [83.8, 2514.0], [83.9, 2514.0], [84.0, 2517.0], [84.1, 2517.0], [84.2, 2517.0], [84.3, 2517.0], [84.4, 2517.0], [84.5, 2517.0], [84.6, 2517.0], [84.7, 2517.0], [84.8, 2517.0], [84.9, 2517.0], [85.0, 2520.0], [85.1, 2520.0], [85.2, 2520.0], [85.3, 2520.0], [85.4, 2520.0], [85.5, 2520.0], [85.6, 2520.0], [85.7, 2520.0], [85.8, 2520.0], [85.9, 2520.0], [86.0, 2523.0], [86.1, 2523.0], [86.2, 2523.0], [86.3, 2523.0], [86.4, 2523.0], [86.5, 2523.0], [86.6, 2523.0], [86.7, 2523.0], [86.8, 2523.0], [86.9, 2523.0], [87.0, 2551.0], [87.1, 2551.0], [87.2, 2551.0], [87.3, 2551.0], [87.4, 2551.0], [87.5, 2551.0], [87.6, 2551.0], [87.7, 2551.0], [87.8, 2551.0], [87.9, 2551.0], [88.0, 2558.0], [88.1, 2558.0], [88.2, 2558.0], [88.3, 2558.0], [88.4, 2558.0], [88.5, 2558.0], [88.6, 2558.0], [88.7, 2558.0], [88.8, 2558.0], [88.9, 2558.0], [89.0, 2570.0], [89.1, 2570.0], [89.2, 2570.0], [89.3, 2570.0], [89.4, 2570.0], [89.5, 2570.0], [89.6, 2570.0], [89.7, 2570.0], [89.8, 2570.0], [89.9, 2570.0], [90.0, 2615.0], [90.1, 2615.0], [90.2, 2615.0], [90.3, 2615.0], [90.4, 2615.0], [90.5, 2615.0], [90.6, 2615.0], [90.7, 2615.0], [90.8, 2615.0], [90.9, 2615.0], [91.0, 2651.0], [91.1, 2651.0], [91.2, 2651.0], [91.3, 2651.0], [91.4, 2651.0], [91.5, 2651.0], [91.6, 2651.0], [91.7, 2651.0], [91.8, 2651.0], [91.9, 2651.0], [92.0, 2721.0], [92.1, 2721.0], [92.2, 2721.0], [92.3, 2721.0], [92.4, 2721.0], [92.5, 2721.0], [92.6, 2721.0], [92.7, 2721.0], [92.8, 2721.0], [92.9, 2721.0], [93.0, 2760.0], [93.1, 2760.0], [93.2, 2760.0], [93.3, 2760.0], [93.4, 2760.0], [93.5, 2760.0], [93.6, 2760.0], [93.7, 2760.0], [93.8, 2760.0], [93.9, 2760.0], [94.0, 2764.0], [94.1, 2764.0], [94.2, 2764.0], [94.3, 2764.0], [94.4, 2764.0], [94.5, 2764.0], [94.6, 2764.0], [94.7, 2764.0], [94.8, 2764.0], [94.9, 2764.0], [95.0, 2856.0], [95.1, 2856.0], [95.2, 2856.0], [95.3, 2856.0], [95.4, 2856.0], [95.5, 2856.0], [95.6, 2856.0], [95.7, 2856.0], [95.8, 2856.0], [95.9, 2856.0], [96.0, 2871.0], [96.1, 2871.0], [96.2, 2871.0], [96.3, 2871.0], [96.4, 2871.0], [96.5, 2871.0], [96.6, 2871.0], [96.7, 2871.0], [96.8, 2871.0], [96.9, 2871.0], [97.0, 2943.0], [97.1, 2943.0], [97.2, 2943.0], [97.3, 2943.0], [97.4, 2943.0], [97.5, 2943.0], [97.6, 2943.0], [97.7, 2943.0], [97.8, 2943.0], [97.9, 2943.0], [98.0, 3004.0], [98.1, 3004.0], [98.2, 3004.0], [98.3, 3004.0], [98.4, 3004.0], [98.5, 3004.0], [98.6, 3004.0], [98.7, 3004.0], [98.8, 3004.0], [98.9, 3004.0], [99.0, 3061.0], [99.1, 3061.0], [99.2, 3061.0], [99.3, 3061.0], [99.4, 3061.0], [99.5, 3061.0], [99.6, 3061.0], [99.7, 3061.0], [99.8, 3061.0], [99.9, 3061.0]], "isOverall": false, "label": "Compare Item", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 1800.0, "maxY": 36.0, "series": [{"data": [[2100.0, 17.0], [2300.0, 3.0], [2200.0, 11.0], [2400.0, 3.0], [2500.0, 4.0], [2600.0, 4.0], [2700.0, 4.0], [2800.0, 2.0], [2900.0, 1.0], [3200.0, 1.0], [3300.0, 1.0], [1800.0, 5.0], [1900.0, 28.0], [2000.0, 16.0]], "isOverall": false, "label": "Category Drill down", "isController": false}, {"data": [[3400.0, 3.0], [3500.0, 7.0], [3700.0, 17.0], [3600.0, 15.0], [3800.0, 11.0], [3900.0, 12.0], [4000.0, 10.0], [4200.0, 8.0], [4300.0, 5.0], [4100.0, 7.0], [4400.0, 2.0], [4500.0, 1.0], [4800.0, 2.0]], "isOverall": false, "label": "Item Details", "isController": false}, {"data": [[2100.0, 2.0], [2300.0, 2.0], [2400.0, 2.0], [2500.0, 10.0], [2600.0, 13.0], [2700.0, 14.0], [2800.0, 11.0], [2900.0, 11.0], [3000.0, 5.0], [3100.0, 5.0], [3300.0, 4.0], [3200.0, 3.0], [3400.0, 2.0], [3500.0, 4.0], [3700.0, 1.0], [3900.0, 1.0], [4100.0, 1.0], [4400.0, 1.0], [4900.0, 1.0], [5000.0, 1.0], [5100.0, 1.0], [5300.0, 1.0], [5400.0, 1.0], [5500.0, 1.0], [6300.0, 2.0]], "isOverall": false, "label": "View Items", "isController": false}, {"data": [[2100.0, 1.0], [2300.0, 36.0], [2200.0, 25.0], [2400.0, 17.0], [2500.0, 11.0], [2600.0, 2.0], [2700.0, 3.0], [2800.0, 2.0], [2900.0, 1.0], [3000.0, 2.0]], "isOverall": false, "label": "Compare Item", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 6300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 400.0, "minX": 2.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 400.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 400.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 41.15533980582523, "minX": 1.57312062E12, "maxY": 43.86195286195286, "series": [{"data": [[1.57312068E12, 43.86195286195286], [1.57312062E12, 41.15533980582523]], "isOverall": false, "label": "User_50-10", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57312068E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1907.0, "minX": 1.0, "maxY": 6358.0, "series": [{"data": [[35.0, 2833.0], [36.0, 2680.0], [37.0, 2743.0], [38.0, 2822.5], [39.0, 2219.5], [40.0, 2071.0], [41.0, 2730.0], [42.0, 1939.0], [43.0, 2277.0], [44.0, 1950.5], [45.0, 1908.0], [46.0, 1955.0], [47.0, 1970.0], [48.0, 1947.0], [49.0, 1944.0], [50.0, 2164.566666666666], [15.0, 2528.25], [16.0, 2345.0], [17.0, 1936.0], [18.0, 1919.0], [19.0, 1907.0], [20.0, 1919.0], [21.0, 1939.0], [22.0, 1940.0], [23.0, 1945.0], [24.0, 1908.0], [26.0, 2124.0], [27.0, 1989.0], [28.0, 2251.0], [29.0, 2056.0], [30.0, 2029.0]], "isOverall": false, "label": "Category Drill down", "isController": false}, {"data": [[42.46, 2189.17]], "isOverall": false, "label": "Category Drill down-Aggregated", "isController": false}, {"data": [[41.0, 3830.6666666666665], [40.0, 3627.0], [43.0, 4252.0], [42.0, 3650.0], [47.0, 4290.0], [50.0, 3975.394736842104], [13.0, 3520.3333333333335], [14.0, 3625.0], [15.0, 3669.0], [16.0, 3588.6666666666665], [21.0, 3515.0], [22.0, 3752.5], [23.0, 3690.0], [27.0, 3759.0], [28.0, 3765.6666666666665]], "isOverall": false, "label": "Item Details", "isController": false}, {"data": [[44.52999999999998, 3920.799999999999]], "isOverall": false, "label": "Item Details-Aggregated", "isController": false}, {"data": [[36.0, 2836.0], [39.0, 3887.6666666666665], [40.0, 3715.8], [41.0, 3538.25], [42.0, 4083.25], [43.0, 4372.5], [45.0, 4087.0], [46.0, 3314.0], [47.0, 6358.0], [48.0, 2735.0], [49.0, 2707.0], [50.0, 2822.902777777778]], "isOverall": false, "label": "View Items", "isController": false}, {"data": [[47.92, 3119.9800000000014]], "isOverall": false, "label": "View Items-Aggregated", "isController": false}, {"data": [[2.0, 2224.0], [3.0, 2275.0], [4.0, 2261.0], [5.0, 2240.0], [6.0, 2291.0], [7.0, 2174.0], [8.0, 2272.0], [9.0, 2263.0], [10.0, 2225.0], [11.0, 2255.0], [12.0, 2246.0], [13.0, 2262.0], [14.0, 2335.0], [15.0, 2294.0], [16.0, 2276.0], [17.0, 2333.0], [18.0, 2345.0], [19.0, 2364.0], [20.0, 2237.0], [21.0, 2352.0], [22.0, 2279.0], [23.0, 2245.0], [24.0, 2365.0], [25.0, 2360.0], [26.0, 2368.0], [27.0, 2376.0], [28.0, 2317.0], [29.0, 2378.0], [30.0, 2236.0], [31.0, 2361.0], [33.0, 2494.0], [32.0, 2328.0], [35.0, 2466.0], [34.0, 2426.0], [37.0, 2399.0], [36.0, 2380.0], [39.0, 2318.0], [38.0, 2435.0], [41.0, 2470.0], [40.0, 2325.0], [43.0, 2364.0], [42.0, 2436.0], [45.0, 2316.0], [44.0, 2247.0], [47.0, 2259.0], [46.0, 2517.0], [49.0, 2346.0], [48.0, 2402.0], [50.0, 2487.215686274509], [1.0, 2233.0]], "isOverall": false, "label": "Compare Item", "isController": false}, {"data": [[37.750000000000014, 2408.1800000000003]], "isOverall": false, "label": "Compare Item-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 50.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 361.56666666666666, "minX": 1.57312062E12, "maxY": 758044.9333333333, "series": [{"data": [[1.57312068E12, 758044.9333333333], [1.57312062E12, 235963.4]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.57312068E12, 1161.7666666666667], [1.57312062E12, 361.56666666666666]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57312068E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 2139.919999999999, "minX": 1.57312062E12, "maxY": 4159.5, "series": [{"data": [[1.57312068E12, 2139.919999999999], [1.57312062E12, 2238.4199999999996]], "isOverall": false, "label": "Category Drill down", "isController": false}, {"data": [[1.57312068E12, 3888.2500000000005], [1.57312062E12, 4159.5]], "isOverall": false, "label": "Item Details", "isController": false}, {"data": [[1.57312068E12, 2846.4915254237276], [1.57312062E12, 3513.536585365853]], "isOverall": false, "label": "View Items", "isController": false}, {"data": [[1.57312068E12, 2408.1800000000003]], "isOverall": false, "label": "Compare Item", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57312068E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 914.2599999999999, "minX": 1.57312062E12, "maxY": 2052.7073170731705, "series": [{"data": [[1.57312068E12, 914.2599999999999], [1.57312062E12, 1011.1199999999999]], "isOverall": false, "label": "Category Drill down", "isController": false}, {"data": [[1.57312068E12, 1456.9090909090912], [1.57312062E12, 1750.0]], "isOverall": false, "label": "Item Details", "isController": false}, {"data": [[1.57312068E12, 1314.8135593220343], [1.57312062E12, 2052.7073170731705]], "isOverall": false, "label": "View Items", "isController": false}, {"data": [[1.57312068E12, 988.7]], "isOverall": false, "label": "Compare Item", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57312068E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 112.36585365853657, "minX": 1.57312062E12, "maxY": 202.33999999999997, "series": [{"data": [[1.57312068E12, 201.78], [1.57312062E12, 202.33999999999997]], "isOverall": false, "label": "Category Drill down", "isController": false}, {"data": [[1.57312068E12, 201.8295454545454], [1.57312062E12, 199.25000000000003]], "isOverall": false, "label": "Item Details", "isController": false}, {"data": [[1.57312068E12, 152.55932203389833], [1.57312062E12, 112.36585365853657]], "isOverall": false, "label": "View Items", "isController": false}, {"data": [[1.57312068E12, 201.96]], "isOverall": false, "label": "Compare Item", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57312068E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1838.0, "minX": 1.57312062E12, "maxY": 6391.0, "series": [{"data": [[1.57312068E12, 4879.0], [1.57312062E12, 6391.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.57312068E12, 1838.0], [1.57312062E12, 1854.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.57312068E12, 3965.6], [1.57312062E12, 4387.200000000001]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.57312068E12, 4524.059999999994], [1.57312062E12, 6388.36]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.57312068E12, 4186.0], [1.57312062E12, 5298.999999999999]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57312068E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 2029.0, "minX": 1.0, "maxY": 3681.5, "series": [{"data": [[8.0, 2262.5], [9.0, 2865.5], [10.0, 2085.5], [11.0, 2525.0], [12.0, 3076.0], [3.0, 2272.0], [14.0, 3199.0], [15.0, 2721.0], [4.0, 2090.0], [1.0, 2029.0], [17.0, 2348.0], [18.0, 3681.5], [19.0, 2804.0], [5.0, 2084.5], [20.0, 2610.5], [21.0, 2747.5], [25.0, 2162.0], [7.0, 3533.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 25.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 758.0, "minX": 1.0, "maxY": 1457.0, "series": [{"data": [[8.0, 823.5], [9.0, 1361.0], [10.0, 894.5], [11.0, 952.0], [12.0, 1457.0], [3.0, 836.0], [14.0, 1197.5], [15.0, 1339.0], [4.0, 853.5], [1.0, 793.0], [17.0, 924.0], [18.0, 1422.5], [19.0, 1219.5], [5.0, 758.0], [20.0, 1133.0], [21.0, 1328.0], [25.0, 936.0], [7.0, 1086.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 25.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 2.55, "minX": 1.57312062E12, "maxY": 4.116666666666666, "series": [{"data": [[1.57312068E12, 4.116666666666666], [1.57312062E12, 2.55]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57312068E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 1.7166666666666666, "minX": 1.57312062E12, "maxY": 4.95, "series": [{"data": [[1.57312068E12, 4.95], [1.57312062E12, 1.7166666666666666]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57312068E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.2, "minX": 1.57312062E12, "maxY": 1.6666666666666667, "series": [{"data": [[1.57312068E12, 1.6666666666666667]], "isOverall": false, "label": "Compare Item-success", "isController": false}, {"data": [[1.57312068E12, 0.8333333333333334], [1.57312062E12, 0.8333333333333334]], "isOverall": false, "label": "Category Drill down-success", "isController": false}, {"data": [[1.57312068E12, 1.4666666666666666], [1.57312062E12, 0.2]], "isOverall": false, "label": "Item Details-success", "isController": false}, {"data": [[1.57312068E12, 0.9833333333333333], [1.57312062E12, 0.6833333333333333]], "isOverall": false, "label": "View Items-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57312068E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.7166666666666666, "minX": 1.57312062E12, "maxY": 4.95, "series": [{"data": [[1.57312068E12, 4.95], [1.57312062E12, 1.7166666666666666]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57312068E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

