/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1495.0, "minX": 0.0, "maxY": 7073.0, "series": [{"data": [[0.0, 1495.0], [0.1, 1495.0], [0.2, 1495.0], [0.3, 1495.0], [0.4, 1495.0], [0.5, 1495.0], [0.6, 1495.0], [0.7, 1495.0], [0.8, 1495.0], [0.9, 1495.0], [1.0, 1502.0], [1.1, 1502.0], [1.2, 1502.0], [1.3, 1502.0], [1.4, 1502.0], [1.5, 1502.0], [1.6, 1502.0], [1.7, 1502.0], [1.8, 1502.0], [1.9, 1502.0], [2.0, 1507.0], [2.1, 1507.0], [2.2, 1507.0], [2.3, 1507.0], [2.4, 1507.0], [2.5, 1507.0], [2.6, 1507.0], [2.7, 1507.0], [2.8, 1507.0], [2.9, 1507.0], [3.0, 1512.0], [3.1, 1512.0], [3.2, 1512.0], [3.3, 1512.0], [3.4, 1512.0], [3.5, 1512.0], [3.6, 1512.0], [3.7, 1512.0], [3.8, 1512.0], [3.9, 1512.0], [4.0, 1513.0], [4.1, 1513.0], [4.2, 1513.0], [4.3, 1513.0], [4.4, 1513.0], [4.5, 1513.0], [4.6, 1513.0], [4.7, 1513.0], [4.8, 1513.0], [4.9, 1513.0], [5.0, 1518.0], [5.1, 1518.0], [5.2, 1518.0], [5.3, 1518.0], [5.4, 1518.0], [5.5, 1518.0], [5.6, 1518.0], [5.7, 1518.0], [5.8, 1518.0], [5.9, 1518.0], [6.0, 1526.0], [6.1, 1526.0], [6.2, 1526.0], [6.3, 1526.0], [6.4, 1526.0], [6.5, 1526.0], [6.6, 1526.0], [6.7, 1526.0], [6.8, 1526.0], [6.9, 1526.0], [7.0, 1537.0], [7.1, 1537.0], [7.2, 1537.0], [7.3, 1537.0], [7.4, 1537.0], [7.5, 1537.0], [7.6, 1537.0], [7.7, 1537.0], [7.8, 1537.0], [7.9, 1537.0], [8.0, 1545.0], [8.1, 1545.0], [8.2, 1545.0], [8.3, 1545.0], [8.4, 1545.0], [8.5, 1545.0], [8.6, 1545.0], [8.7, 1545.0], [8.8, 1545.0], [8.9, 1545.0], [9.0, 1545.0], [9.1, 1545.0], [9.2, 1545.0], [9.3, 1545.0], [9.4, 1545.0], [9.5, 1545.0], [9.6, 1545.0], [9.7, 1545.0], [9.8, 1545.0], [9.9, 1545.0], [10.0, 1565.0], [10.1, 1565.0], [10.2, 1565.0], [10.3, 1565.0], [10.4, 1565.0], [10.5, 1565.0], [10.6, 1565.0], [10.7, 1565.0], [10.8, 1565.0], [10.9, 1565.0], [11.0, 1571.0], [11.1, 1571.0], [11.2, 1571.0], [11.3, 1571.0], [11.4, 1571.0], [11.5, 1571.0], [11.6, 1571.0], [11.7, 1571.0], [11.8, 1571.0], [11.9, 1571.0], [12.0, 1571.0], [12.1, 1571.0], [12.2, 1571.0], [12.3, 1571.0], [12.4, 1571.0], [12.5, 1571.0], [12.6, 1571.0], [12.7, 1571.0], [12.8, 1571.0], [12.9, 1571.0], [13.0, 1615.0], [13.1, 1615.0], [13.2, 1615.0], [13.3, 1615.0], [13.4, 1615.0], [13.5, 1615.0], [13.6, 1615.0], [13.7, 1615.0], [13.8, 1615.0], [13.9, 1615.0], [14.0, 1622.0], [14.1, 1622.0], [14.2, 1622.0], [14.3, 1622.0], [14.4, 1622.0], [14.5, 1622.0], [14.6, 1622.0], [14.7, 1622.0], [14.8, 1622.0], [14.9, 1622.0], [15.0, 1623.0], [15.1, 1623.0], [15.2, 1623.0], [15.3, 1623.0], [15.4, 1623.0], [15.5, 1623.0], [15.6, 1623.0], [15.7, 1623.0], [15.8, 1623.0], [15.9, 1623.0], [16.0, 1626.0], [16.1, 1626.0], [16.2, 1626.0], [16.3, 1626.0], [16.4, 1626.0], [16.5, 1626.0], [16.6, 1626.0], [16.7, 1626.0], [16.8, 1626.0], [16.9, 1626.0], [17.0, 1630.0], [17.1, 1630.0], [17.2, 1630.0], [17.3, 1630.0], [17.4, 1630.0], [17.5, 1630.0], [17.6, 1630.0], [17.7, 1630.0], [17.8, 1630.0], [17.9, 1630.0], [18.0, 1643.0], [18.1, 1643.0], [18.2, 1643.0], [18.3, 1643.0], [18.4, 1643.0], [18.5, 1643.0], [18.6, 1643.0], [18.7, 1643.0], [18.8, 1643.0], [18.9, 1643.0], [19.0, 1651.0], [19.1, 1651.0], [19.2, 1651.0], [19.3, 1651.0], [19.4, 1651.0], [19.5, 1651.0], [19.6, 1651.0], [19.7, 1651.0], [19.8, 1651.0], [19.9, 1651.0], [20.0, 1666.0], [20.1, 1666.0], [20.2, 1666.0], [20.3, 1666.0], [20.4, 1666.0], [20.5, 1666.0], [20.6, 1666.0], [20.7, 1666.0], [20.8, 1666.0], [20.9, 1666.0], [21.0, 1760.0], [21.1, 1760.0], [21.2, 1760.0], [21.3, 1760.0], [21.4, 1760.0], [21.5, 1760.0], [21.6, 1760.0], [21.7, 1760.0], [21.8, 1760.0], [21.9, 1760.0], [22.0, 1881.0], [22.1, 1881.0], [22.2, 1881.0], [22.3, 1881.0], [22.4, 1881.0], [22.5, 1881.0], [22.6, 1881.0], [22.7, 1881.0], [22.8, 1881.0], [22.9, 1881.0], [23.0, 1931.0], [23.1, 1931.0], [23.2, 1931.0], [23.3, 1931.0], [23.4, 1931.0], [23.5, 1931.0], [23.6, 1931.0], [23.7, 1931.0], [23.8, 1931.0], [23.9, 1931.0], [24.0, 1933.0], [24.1, 1933.0], [24.2, 1933.0], [24.3, 1933.0], [24.4, 1933.0], [24.5, 1933.0], [24.6, 1933.0], [24.7, 1933.0], [24.8, 1933.0], [24.9, 1933.0], [25.0, 1951.0], [25.1, 1951.0], [25.2, 1951.0], [25.3, 1951.0], [25.4, 1951.0], [25.5, 1951.0], [25.6, 1951.0], [25.7, 1951.0], [25.8, 1951.0], [25.9, 1951.0], [26.0, 2003.0], [26.1, 2003.0], [26.2, 2003.0], [26.3, 2003.0], [26.4, 2003.0], [26.5, 2003.0], [26.6, 2003.0], [26.7, 2003.0], [26.8, 2003.0], [26.9, 2003.0], [27.0, 2014.0], [27.1, 2014.0], [27.2, 2014.0], [27.3, 2014.0], [27.4, 2014.0], [27.5, 2014.0], [27.6, 2014.0], [27.7, 2014.0], [27.8, 2014.0], [27.9, 2014.0], [28.0, 2042.0], [28.1, 2042.0], [28.2, 2042.0], [28.3, 2042.0], [28.4, 2042.0], [28.5, 2042.0], [28.6, 2042.0], [28.7, 2042.0], [28.8, 2042.0], [28.9, 2042.0], [29.0, 2071.0], [29.1, 2071.0], [29.2, 2071.0], [29.3, 2071.0], [29.4, 2071.0], [29.5, 2071.0], [29.6, 2071.0], [29.7, 2071.0], [29.8, 2071.0], [29.9, 2071.0], [30.0, 2072.0], [30.1, 2072.0], [30.2, 2072.0], [30.3, 2072.0], [30.4, 2072.0], [30.5, 2072.0], [30.6, 2072.0], [30.7, 2072.0], [30.8, 2072.0], [30.9, 2072.0], [31.0, 2096.0], [31.1, 2096.0], [31.2, 2096.0], [31.3, 2096.0], [31.4, 2096.0], [31.5, 2096.0], [31.6, 2096.0], [31.7, 2096.0], [31.8, 2096.0], [31.9, 2096.0], [32.0, 2125.0], [32.1, 2125.0], [32.2, 2125.0], [32.3, 2125.0], [32.4, 2125.0], [32.5, 2125.0], [32.6, 2125.0], [32.7, 2125.0], [32.8, 2125.0], [32.9, 2125.0], [33.0, 2132.0], [33.1, 2132.0], [33.2, 2132.0], [33.3, 2132.0], [33.4, 2132.0], [33.5, 2132.0], [33.6, 2132.0], [33.7, 2132.0], [33.8, 2132.0], [33.9, 2132.0], [34.0, 2133.0], [34.1, 2133.0], [34.2, 2133.0], [34.3, 2133.0], [34.4, 2133.0], [34.5, 2133.0], [34.6, 2133.0], [34.7, 2133.0], [34.8, 2133.0], [34.9, 2133.0], [35.0, 2149.0], [35.1, 2149.0], [35.2, 2149.0], [35.3, 2149.0], [35.4, 2149.0], [35.5, 2149.0], [35.6, 2149.0], [35.7, 2149.0], [35.8, 2149.0], [35.9, 2149.0], [36.0, 2174.0], [36.1, 2174.0], [36.2, 2174.0], [36.3, 2174.0], [36.4, 2174.0], [36.5, 2174.0], [36.6, 2174.0], [36.7, 2174.0], [36.8, 2174.0], [36.9, 2174.0], [37.0, 2206.0], [37.1, 2206.0], [37.2, 2206.0], [37.3, 2206.0], [37.4, 2206.0], [37.5, 2206.0], [37.6, 2206.0], [37.7, 2206.0], [37.8, 2206.0], [37.9, 2206.0], [38.0, 2220.0], [38.1, 2220.0], [38.2, 2220.0], [38.3, 2220.0], [38.4, 2220.0], [38.5, 2220.0], [38.6, 2220.0], [38.7, 2220.0], [38.8, 2220.0], [38.9, 2220.0], [39.0, 2262.0], [39.1, 2262.0], [39.2, 2262.0], [39.3, 2262.0], [39.4, 2262.0], [39.5, 2262.0], [39.6, 2262.0], [39.7, 2262.0], [39.8, 2262.0], [39.9, 2262.0], [40.0, 2293.0], [40.1, 2293.0], [40.2, 2293.0], [40.3, 2293.0], [40.4, 2293.0], [40.5, 2293.0], [40.6, 2293.0], [40.7, 2293.0], [40.8, 2293.0], [40.9, 2293.0], [41.0, 2294.0], [41.1, 2294.0], [41.2, 2294.0], [41.3, 2294.0], [41.4, 2294.0], [41.5, 2294.0], [41.6, 2294.0], [41.7, 2294.0], [41.8, 2294.0], [41.9, 2294.0], [42.0, 2296.0], [42.1, 2296.0], [42.2, 2296.0], [42.3, 2296.0], [42.4, 2296.0], [42.5, 2296.0], [42.6, 2296.0], [42.7, 2296.0], [42.8, 2296.0], [42.9, 2296.0], [43.0, 2301.0], [43.1, 2301.0], [43.2, 2301.0], [43.3, 2301.0], [43.4, 2301.0], [43.5, 2301.0], [43.6, 2301.0], [43.7, 2301.0], [43.8, 2301.0], [43.9, 2301.0], [44.0, 2306.0], [44.1, 2306.0], [44.2, 2306.0], [44.3, 2306.0], [44.4, 2306.0], [44.5, 2306.0], [44.6, 2306.0], [44.7, 2306.0], [44.8, 2306.0], [44.9, 2306.0], [45.0, 2325.0], [45.1, 2325.0], [45.2, 2325.0], [45.3, 2325.0], [45.4, 2325.0], [45.5, 2325.0], [45.6, 2325.0], [45.7, 2325.0], [45.8, 2325.0], [45.9, 2325.0], [46.0, 2327.0], [46.1, 2327.0], [46.2, 2327.0], [46.3, 2327.0], [46.4, 2327.0], [46.5, 2327.0], [46.6, 2327.0], [46.7, 2327.0], [46.8, 2327.0], [46.9, 2327.0], [47.0, 2344.0], [47.1, 2344.0], [47.2, 2344.0], [47.3, 2344.0], [47.4, 2344.0], [47.5, 2344.0], [47.6, 2344.0], [47.7, 2344.0], [47.8, 2344.0], [47.9, 2344.0], [48.0, 2347.0], [48.1, 2347.0], [48.2, 2347.0], [48.3, 2347.0], [48.4, 2347.0], [48.5, 2347.0], [48.6, 2347.0], [48.7, 2347.0], [48.8, 2347.0], [48.9, 2347.0], [49.0, 2375.0], [49.1, 2375.0], [49.2, 2375.0], [49.3, 2375.0], [49.4, 2375.0], [49.5, 2375.0], [49.6, 2375.0], [49.7, 2375.0], [49.8, 2375.0], [49.9, 2375.0], [50.0, 2405.0], [50.1, 2405.0], [50.2, 2405.0], [50.3, 2405.0], [50.4, 2405.0], [50.5, 2405.0], [50.6, 2405.0], [50.7, 2405.0], [50.8, 2405.0], [50.9, 2405.0], [51.0, 2415.0], [51.1, 2415.0], [51.2, 2415.0], [51.3, 2415.0], [51.4, 2415.0], [51.5, 2415.0], [51.6, 2415.0], [51.7, 2415.0], [51.8, 2415.0], [51.9, 2415.0], [52.0, 2419.0], [52.1, 2419.0], [52.2, 2419.0], [52.3, 2419.0], [52.4, 2419.0], [52.5, 2419.0], [52.6, 2419.0], [52.7, 2419.0], [52.8, 2419.0], [52.9, 2419.0], [53.0, 2423.0], [53.1, 2423.0], [53.2, 2423.0], [53.3, 2423.0], [53.4, 2423.0], [53.5, 2423.0], [53.6, 2423.0], [53.7, 2423.0], [53.8, 2423.0], [53.9, 2423.0], [54.0, 2427.0], [54.1, 2427.0], [54.2, 2427.0], [54.3, 2427.0], [54.4, 2427.0], [54.5, 2427.0], [54.6, 2427.0], [54.7, 2427.0], [54.8, 2427.0], [54.9, 2427.0], [55.0, 2438.0], [55.1, 2438.0], [55.2, 2438.0], [55.3, 2438.0], [55.4, 2438.0], [55.5, 2438.0], [55.6, 2438.0], [55.7, 2438.0], [55.8, 2438.0], [55.9, 2438.0], [56.0, 2451.0], [56.1, 2451.0], [56.2, 2451.0], [56.3, 2451.0], [56.4, 2451.0], [56.5, 2451.0], [56.6, 2451.0], [56.7, 2451.0], [56.8, 2451.0], [56.9, 2451.0], [57.0, 2458.0], [57.1, 2458.0], [57.2, 2458.0], [57.3, 2458.0], [57.4, 2458.0], [57.5, 2458.0], [57.6, 2458.0], [57.7, 2458.0], [57.8, 2458.0], [57.9, 2458.0], [58.0, 2469.0], [58.1, 2469.0], [58.2, 2469.0], [58.3, 2469.0], [58.4, 2469.0], [58.5, 2469.0], [58.6, 2469.0], [58.7, 2469.0], [58.8, 2469.0], [58.9, 2469.0], [59.0, 2474.0], [59.1, 2474.0], [59.2, 2474.0], [59.3, 2474.0], [59.4, 2474.0], [59.5, 2474.0], [59.6, 2474.0], [59.7, 2474.0], [59.8, 2474.0], [59.9, 2474.0], [60.0, 2480.0], [60.1, 2480.0], [60.2, 2480.0], [60.3, 2480.0], [60.4, 2480.0], [60.5, 2480.0], [60.6, 2480.0], [60.7, 2480.0], [60.8, 2480.0], [60.9, 2480.0], [61.0, 2486.0], [61.1, 2486.0], [61.2, 2486.0], [61.3, 2486.0], [61.4, 2486.0], [61.5, 2486.0], [61.6, 2486.0], [61.7, 2486.0], [61.8, 2486.0], [61.9, 2486.0], [62.0, 2488.0], [62.1, 2488.0], [62.2, 2488.0], [62.3, 2488.0], [62.4, 2488.0], [62.5, 2488.0], [62.6, 2488.0], [62.7, 2488.0], [62.8, 2488.0], [62.9, 2488.0], [63.0, 2497.0], [63.1, 2497.0], [63.2, 2497.0], [63.3, 2497.0], [63.4, 2497.0], [63.5, 2497.0], [63.6, 2497.0], [63.7, 2497.0], [63.8, 2497.0], [63.9, 2497.0], [64.0, 2500.0], [64.1, 2500.0], [64.2, 2500.0], [64.3, 2500.0], [64.4, 2500.0], [64.5, 2500.0], [64.6, 2500.0], [64.7, 2500.0], [64.8, 2500.0], [64.9, 2500.0], [65.0, 2511.0], [65.1, 2511.0], [65.2, 2511.0], [65.3, 2511.0], [65.4, 2511.0], [65.5, 2511.0], [65.6, 2511.0], [65.7, 2511.0], [65.8, 2511.0], [65.9, 2511.0], [66.0, 2564.0], [66.1, 2564.0], [66.2, 2564.0], [66.3, 2564.0], [66.4, 2564.0], [66.5, 2564.0], [66.6, 2564.0], [66.7, 2564.0], [66.8, 2564.0], [66.9, 2564.0], [67.0, 2592.0], [67.1, 2592.0], [67.2, 2592.0], [67.3, 2592.0], [67.4, 2592.0], [67.5, 2592.0], [67.6, 2592.0], [67.7, 2592.0], [67.8, 2592.0], [67.9, 2592.0], [68.0, 2610.0], [68.1, 2610.0], [68.2, 2610.0], [68.3, 2610.0], [68.4, 2610.0], [68.5, 2610.0], [68.6, 2610.0], [68.7, 2610.0], [68.8, 2610.0], [68.9, 2610.0], [69.0, 2616.0], [69.1, 2616.0], [69.2, 2616.0], [69.3, 2616.0], [69.4, 2616.0], [69.5, 2616.0], [69.6, 2616.0], [69.7, 2616.0], [69.8, 2616.0], [69.9, 2616.0], [70.0, 2631.0], [70.1, 2631.0], [70.2, 2631.0], [70.3, 2631.0], [70.4, 2631.0], [70.5, 2631.0], [70.6, 2631.0], [70.7, 2631.0], [70.8, 2631.0], [70.9, 2631.0], [71.0, 2634.0], [71.1, 2634.0], [71.2, 2634.0], [71.3, 2634.0], [71.4, 2634.0], [71.5, 2634.0], [71.6, 2634.0], [71.7, 2634.0], [71.8, 2634.0], [71.9, 2634.0], [72.0, 2697.0], [72.1, 2697.0], [72.2, 2697.0], [72.3, 2697.0], [72.4, 2697.0], [72.5, 2697.0], [72.6, 2697.0], [72.7, 2697.0], [72.8, 2697.0], [72.9, 2697.0], [73.0, 2724.0], [73.1, 2724.0], [73.2, 2724.0], [73.3, 2724.0], [73.4, 2724.0], [73.5, 2724.0], [73.6, 2724.0], [73.7, 2724.0], [73.8, 2724.0], [73.9, 2724.0], [74.0, 2741.0], [74.1, 2741.0], [74.2, 2741.0], [74.3, 2741.0], [74.4, 2741.0], [74.5, 2741.0], [74.6, 2741.0], [74.7, 2741.0], [74.8, 2741.0], [74.9, 2741.0], [75.0, 2753.0], [75.1, 2753.0], [75.2, 2753.0], [75.3, 2753.0], [75.4, 2753.0], [75.5, 2753.0], [75.6, 2753.0], [75.7, 2753.0], [75.8, 2753.0], [75.9, 2753.0], [76.0, 2819.0], [76.1, 2819.0], [76.2, 2819.0], [76.3, 2819.0], [76.4, 2819.0], [76.5, 2819.0], [76.6, 2819.0], [76.7, 2819.0], [76.8, 2819.0], [76.9, 2819.0], [77.0, 2824.0], [77.1, 2824.0], [77.2, 2824.0], [77.3, 2824.0], [77.4, 2824.0], [77.5, 2824.0], [77.6, 2824.0], [77.7, 2824.0], [77.8, 2824.0], [77.9, 2824.0], [78.0, 2856.0], [78.1, 2856.0], [78.2, 2856.0], [78.3, 2856.0], [78.4, 2856.0], [78.5, 2856.0], [78.6, 2856.0], [78.7, 2856.0], [78.8, 2856.0], [78.9, 2856.0], [79.0, 2857.0], [79.1, 2857.0], [79.2, 2857.0], [79.3, 2857.0], [79.4, 2857.0], [79.5, 2857.0], [79.6, 2857.0], [79.7, 2857.0], [79.8, 2857.0], [79.9, 2857.0], [80.0, 2876.0], [80.1, 2876.0], [80.2, 2876.0], [80.3, 2876.0], [80.4, 2876.0], [80.5, 2876.0], [80.6, 2876.0], [80.7, 2876.0], [80.8, 2876.0], [80.9, 2876.0], [81.0, 2880.0], [81.1, 2880.0], [81.2, 2880.0], [81.3, 2880.0], [81.4, 2880.0], [81.5, 2880.0], [81.6, 2880.0], [81.7, 2880.0], [81.8, 2880.0], [81.9, 2880.0], [82.0, 2902.0], [82.1, 2902.0], [82.2, 2902.0], [82.3, 2902.0], [82.4, 2902.0], [82.5, 2902.0], [82.6, 2902.0], [82.7, 2902.0], [82.8, 2902.0], [82.9, 2902.0], [83.0, 2908.0], [83.1, 2908.0], [83.2, 2908.0], [83.3, 2908.0], [83.4, 2908.0], [83.5, 2908.0], [83.6, 2908.0], [83.7, 2908.0], [83.8, 2908.0], [83.9, 2908.0], [84.0, 2912.0], [84.1, 2912.0], [84.2, 2912.0], [84.3, 2912.0], [84.4, 2912.0], [84.5, 2912.0], [84.6, 2912.0], [84.7, 2912.0], [84.8, 2912.0], [84.9, 2912.0], [85.0, 2942.0], [85.1, 2942.0], [85.2, 2942.0], [85.3, 2942.0], [85.4, 2942.0], [85.5, 2942.0], [85.6, 2942.0], [85.7, 2942.0], [85.8, 2942.0], [85.9, 2942.0], [86.0, 2947.0], [86.1, 2947.0], [86.2, 2947.0], [86.3, 2947.0], [86.4, 2947.0], [86.5, 2947.0], [86.6, 2947.0], [86.7, 2947.0], [86.8, 2947.0], [86.9, 2947.0], [87.0, 2952.0], [87.1, 2952.0], [87.2, 2952.0], [87.3, 2952.0], [87.4, 2952.0], [87.5, 2952.0], [87.6, 2952.0], [87.7, 2952.0], [87.8, 2952.0], [87.9, 2952.0], [88.0, 2969.0], [88.1, 2969.0], [88.2, 2969.0], [88.3, 2969.0], [88.4, 2969.0], [88.5, 2969.0], [88.6, 2969.0], [88.7, 2969.0], [88.8, 2969.0], [88.9, 2969.0], [89.0, 2978.0], [89.1, 2978.0], [89.2, 2978.0], [89.3, 2978.0], [89.4, 2978.0], [89.5, 2978.0], [89.6, 2978.0], [89.7, 2978.0], [89.8, 2978.0], [89.9, 2978.0], [90.0, 3050.0], [90.1, 3050.0], [90.2, 3050.0], [90.3, 3050.0], [90.4, 3050.0], [90.5, 3050.0], [90.6, 3050.0], [90.7, 3050.0], [90.8, 3050.0], [90.9, 3050.0], [91.0, 3068.0], [91.1, 3068.0], [91.2, 3068.0], [91.3, 3068.0], [91.4, 3068.0], [91.5, 3068.0], [91.6, 3068.0], [91.7, 3068.0], [91.8, 3068.0], [91.9, 3068.0], [92.0, 3079.0], [92.1, 3079.0], [92.2, 3079.0], [92.3, 3079.0], [92.4, 3079.0], [92.5, 3079.0], [92.6, 3079.0], [92.7, 3079.0], [92.8, 3079.0], [92.9, 3079.0], [93.0, 3139.0], [93.1, 3139.0], [93.2, 3139.0], [93.3, 3139.0], [93.4, 3139.0], [93.5, 3139.0], [93.6, 3139.0], [93.7, 3139.0], [93.8, 3139.0], [93.9, 3139.0], [94.0, 3257.0], [94.1, 3257.0], [94.2, 3257.0], [94.3, 3257.0], [94.4, 3257.0], [94.5, 3257.0], [94.6, 3257.0], [94.7, 3257.0], [94.8, 3257.0], [94.9, 3257.0], [95.0, 3272.0], [95.1, 3272.0], [95.2, 3272.0], [95.3, 3272.0], [95.4, 3272.0], [95.5, 3272.0], [95.6, 3272.0], [95.7, 3272.0], [95.8, 3272.0], [95.9, 3272.0], [96.0, 3276.0], [96.1, 3276.0], [96.2, 3276.0], [96.3, 3276.0], [96.4, 3276.0], [96.5, 3276.0], [96.6, 3276.0], [96.7, 3276.0], [96.8, 3276.0], [96.9, 3276.0], [97.0, 3391.0], [97.1, 3391.0], [97.2, 3391.0], [97.3, 3391.0], [97.4, 3391.0], [97.5, 3391.0], [97.6, 3391.0], [97.7, 3391.0], [97.8, 3391.0], [97.9, 3391.0], [98.0, 3731.0], [98.1, 3731.0], [98.2, 3731.0], [98.3, 3731.0], [98.4, 3731.0], [98.5, 3731.0], [98.6, 3731.0], [98.7, 3731.0], [98.8, 3731.0], [98.9, 3731.0], [99.0, 4601.0], [99.1, 4601.0], [99.2, 4601.0], [99.3, 4601.0], [99.4, 4601.0], [99.5, 4601.0], [99.6, 4601.0], [99.7, 4601.0], [99.8, 4601.0], [99.9, 4601.0]], "isOverall": false, "label": "Category Drill down", "isController": false}, {"data": [[0.0, 3783.0], [0.1, 3783.0], [0.2, 3783.0], [0.3, 3783.0], [0.4, 3783.0], [0.5, 3783.0], [0.6, 3783.0], [0.7, 3783.0], [0.8, 3783.0], [0.9, 3783.0], [1.0, 3925.0], [1.1, 3925.0], [1.2, 3925.0], [1.3, 3925.0], [1.4, 3925.0], [1.5, 3925.0], [1.6, 3925.0], [1.7, 3925.0], [1.8, 3925.0], [1.9, 3925.0], [2.0, 4029.0], [2.1, 4029.0], [2.2, 4029.0], [2.3, 4029.0], [2.4, 4029.0], [2.5, 4029.0], [2.6, 4029.0], [2.7, 4029.0], [2.8, 4029.0], [2.9, 4029.0], [3.0, 4173.0], [3.1, 4173.0], [3.2, 4173.0], [3.3, 4173.0], [3.4, 4173.0], [3.5, 4173.0], [3.6, 4173.0], [3.7, 4173.0], [3.8, 4173.0], [3.9, 4173.0], [4.0, 4178.0], [4.1, 4178.0], [4.2, 4178.0], [4.3, 4178.0], [4.4, 4178.0], [4.5, 4178.0], [4.6, 4178.0], [4.7, 4178.0], [4.8, 4178.0], [4.9, 4178.0], [5.0, 4189.0], [5.1, 4189.0], [5.2, 4189.0], [5.3, 4189.0], [5.4, 4189.0], [5.5, 4189.0], [5.6, 4189.0], [5.7, 4189.0], [5.8, 4189.0], [5.9, 4189.0], [6.0, 4218.0], [6.1, 4218.0], [6.2, 4218.0], [6.3, 4218.0], [6.4, 4218.0], [6.5, 4218.0], [6.6, 4218.0], [6.7, 4218.0], [6.8, 4218.0], [6.9, 4218.0], [7.0, 4267.0], [7.1, 4267.0], [7.2, 4267.0], [7.3, 4267.0], [7.4, 4267.0], [7.5, 4267.0], [7.6, 4267.0], [7.7, 4267.0], [7.8, 4267.0], [7.9, 4267.0], [8.0, 4311.0], [8.1, 4311.0], [8.2, 4311.0], [8.3, 4311.0], [8.4, 4311.0], [8.5, 4311.0], [8.6, 4311.0], [8.7, 4311.0], [8.8, 4311.0], [8.9, 4311.0], [9.0, 4328.0], [9.1, 4328.0], [9.2, 4328.0], [9.3, 4328.0], [9.4, 4328.0], [9.5, 4328.0], [9.6, 4328.0], [9.7, 4328.0], [9.8, 4328.0], [9.9, 4328.0], [10.0, 4357.0], [10.1, 4357.0], [10.2, 4357.0], [10.3, 4357.0], [10.4, 4357.0], [10.5, 4357.0], [10.6, 4357.0], [10.7, 4357.0], [10.8, 4357.0], [10.9, 4357.0], [11.0, 4405.0], [11.1, 4405.0], [11.2, 4405.0], [11.3, 4405.0], [11.4, 4405.0], [11.5, 4405.0], [11.6, 4405.0], [11.7, 4405.0], [11.8, 4405.0], [11.9, 4405.0], [12.0, 4416.0], [12.1, 4416.0], [12.2, 4416.0], [12.3, 4416.0], [12.4, 4416.0], [12.5, 4416.0], [12.6, 4416.0], [12.7, 4416.0], [12.8, 4416.0], [12.9, 4416.0], [13.0, 4453.0], [13.1, 4453.0], [13.2, 4453.0], [13.3, 4453.0], [13.4, 4453.0], [13.5, 4453.0], [13.6, 4453.0], [13.7, 4453.0], [13.8, 4453.0], [13.9, 4453.0], [14.0, 4456.0], [14.1, 4456.0], [14.2, 4456.0], [14.3, 4456.0], [14.4, 4456.0], [14.5, 4456.0], [14.6, 4456.0], [14.7, 4456.0], [14.8, 4456.0], [14.9, 4456.0], [15.0, 4502.0], [15.1, 4502.0], [15.2, 4502.0], [15.3, 4502.0], [15.4, 4502.0], [15.5, 4502.0], [15.6, 4502.0], [15.7, 4502.0], [15.8, 4502.0], [15.9, 4502.0], [16.0, 4518.0], [16.1, 4518.0], [16.2, 4518.0], [16.3, 4518.0], [16.4, 4518.0], [16.5, 4518.0], [16.6, 4518.0], [16.7, 4518.0], [16.8, 4518.0], [16.9, 4518.0], [17.0, 4546.0], [17.1, 4546.0], [17.2, 4546.0], [17.3, 4546.0], [17.4, 4546.0], [17.5, 4546.0], [17.6, 4546.0], [17.7, 4546.0], [17.8, 4546.0], [17.9, 4546.0], [18.0, 4551.0], [18.1, 4551.0], [18.2, 4551.0], [18.3, 4551.0], [18.4, 4551.0], [18.5, 4551.0], [18.6, 4551.0], [18.7, 4551.0], [18.8, 4551.0], [18.9, 4551.0], [19.0, 4551.0], [19.1, 4551.0], [19.2, 4551.0], [19.3, 4551.0], [19.4, 4551.0], [19.5, 4551.0], [19.6, 4551.0], [19.7, 4551.0], [19.8, 4551.0], [19.9, 4551.0], [20.0, 4574.0], [20.1, 4574.0], [20.2, 4574.0], [20.3, 4574.0], [20.4, 4574.0], [20.5, 4574.0], [20.6, 4574.0], [20.7, 4574.0], [20.8, 4574.0], [20.9, 4574.0], [21.0, 4635.0], [21.1, 4635.0], [21.2, 4635.0], [21.3, 4635.0], [21.4, 4635.0], [21.5, 4635.0], [21.6, 4635.0], [21.7, 4635.0], [21.8, 4635.0], [21.9, 4635.0], [22.0, 4661.0], [22.1, 4661.0], [22.2, 4661.0], [22.3, 4661.0], [22.4, 4661.0], [22.5, 4661.0], [22.6, 4661.0], [22.7, 4661.0], [22.8, 4661.0], [22.9, 4661.0], [23.0, 4670.0], [23.1, 4670.0], [23.2, 4670.0], [23.3, 4670.0], [23.4, 4670.0], [23.5, 4670.0], [23.6, 4670.0], [23.7, 4670.0], [23.8, 4670.0], [23.9, 4670.0], [24.0, 4681.0], [24.1, 4681.0], [24.2, 4681.0], [24.3, 4681.0], [24.4, 4681.0], [24.5, 4681.0], [24.6, 4681.0], [24.7, 4681.0], [24.8, 4681.0], [24.9, 4681.0], [25.0, 4681.0], [25.1, 4681.0], [25.2, 4681.0], [25.3, 4681.0], [25.4, 4681.0], [25.5, 4681.0], [25.6, 4681.0], [25.7, 4681.0], [25.8, 4681.0], [25.9, 4681.0], [26.0, 4682.0], [26.1, 4682.0], [26.2, 4682.0], [26.3, 4682.0], [26.4, 4682.0], [26.5, 4682.0], [26.6, 4682.0], [26.7, 4682.0], [26.8, 4682.0], [26.9, 4682.0], [27.0, 4725.0], [27.1, 4725.0], [27.2, 4725.0], [27.3, 4725.0], [27.4, 4725.0], [27.5, 4725.0], [27.6, 4725.0], [27.7, 4725.0], [27.8, 4725.0], [27.9, 4725.0], [28.0, 4757.0], [28.1, 4757.0], [28.2, 4757.0], [28.3, 4757.0], [28.4, 4757.0], [28.5, 4757.0], [28.6, 4757.0], [28.7, 4757.0], [28.8, 4757.0], [28.9, 4757.0], [29.0, 4780.0], [29.1, 4780.0], [29.2, 4780.0], [29.3, 4780.0], [29.4, 4780.0], [29.5, 4780.0], [29.6, 4780.0], [29.7, 4780.0], [29.8, 4780.0], [29.9, 4780.0], [30.0, 4790.0], [30.1, 4790.0], [30.2, 4790.0], [30.3, 4790.0], [30.4, 4790.0], [30.5, 4790.0], [30.6, 4790.0], [30.7, 4790.0], [30.8, 4790.0], [30.9, 4790.0], [31.0, 4843.0], [31.1, 4843.0], [31.2, 4843.0], [31.3, 4843.0], [31.4, 4843.0], [31.5, 4843.0], [31.6, 4843.0], [31.7, 4843.0], [31.8, 4843.0], [31.9, 4843.0], [32.0, 4854.0], [32.1, 4854.0], [32.2, 4854.0], [32.3, 4854.0], [32.4, 4854.0], [32.5, 4854.0], [32.6, 4854.0], [32.7, 4854.0], [32.8, 4854.0], [32.9, 4854.0], [33.0, 4880.0], [33.1, 4880.0], [33.2, 4880.0], [33.3, 4880.0], [33.4, 4880.0], [33.5, 4880.0], [33.6, 4880.0], [33.7, 4880.0], [33.8, 4880.0], [33.9, 4880.0], [34.0, 4912.0], [34.1, 4912.0], [34.2, 4912.0], [34.3, 4912.0], [34.4, 4912.0], [34.5, 4912.0], [34.6, 4912.0], [34.7, 4912.0], [34.8, 4912.0], [34.9, 4912.0], [35.0, 4915.0], [35.1, 4915.0], [35.2, 4915.0], [35.3, 4915.0], [35.4, 4915.0], [35.5, 4915.0], [35.6, 4915.0], [35.7, 4915.0], [35.8, 4915.0], [35.9, 4915.0], [36.0, 4915.0], [36.1, 4915.0], [36.2, 4915.0], [36.3, 4915.0], [36.4, 4915.0], [36.5, 4915.0], [36.6, 4915.0], [36.7, 4915.0], [36.8, 4915.0], [36.9, 4915.0], [37.0, 4916.0], [37.1, 4916.0], [37.2, 4916.0], [37.3, 4916.0], [37.4, 4916.0], [37.5, 4916.0], [37.6, 4916.0], [37.7, 4916.0], [37.8, 4916.0], [37.9, 4916.0], [38.0, 4920.0], [38.1, 4920.0], [38.2, 4920.0], [38.3, 4920.0], [38.4, 4920.0], [38.5, 4920.0], [38.6, 4920.0], [38.7, 4920.0], [38.8, 4920.0], [38.9, 4920.0], [39.0, 4925.0], [39.1, 4925.0], [39.2, 4925.0], [39.3, 4925.0], [39.4, 4925.0], [39.5, 4925.0], [39.6, 4925.0], [39.7, 4925.0], [39.8, 4925.0], [39.9, 4925.0], [40.0, 4969.0], [40.1, 4969.0], [40.2, 4969.0], [40.3, 4969.0], [40.4, 4969.0], [40.5, 4969.0], [40.6, 4969.0], [40.7, 4969.0], [40.8, 4969.0], [40.9, 4969.0], [41.0, 4984.0], [41.1, 4984.0], [41.2, 4984.0], [41.3, 4984.0], [41.4, 4984.0], [41.5, 4984.0], [41.6, 4984.0], [41.7, 4984.0], [41.8, 4984.0], [41.9, 4984.0], [42.0, 4994.0], [42.1, 4994.0], [42.2, 4994.0], [42.3, 4994.0], [42.4, 4994.0], [42.5, 4994.0], [42.6, 4994.0], [42.7, 4994.0], [42.8, 4994.0], [42.9, 4994.0], [43.0, 5050.0], [43.1, 5050.0], [43.2, 5050.0], [43.3, 5050.0], [43.4, 5050.0], [43.5, 5050.0], [43.6, 5050.0], [43.7, 5050.0], [43.8, 5050.0], [43.9, 5050.0], [44.0, 5080.0], [44.1, 5080.0], [44.2, 5080.0], [44.3, 5080.0], [44.4, 5080.0], [44.5, 5080.0], [44.6, 5080.0], [44.7, 5080.0], [44.8, 5080.0], [44.9, 5080.0], [45.0, 5123.0], [45.1, 5123.0], [45.2, 5123.0], [45.3, 5123.0], [45.4, 5123.0], [45.5, 5123.0], [45.6, 5123.0], [45.7, 5123.0], [45.8, 5123.0], [45.9, 5123.0], [46.0, 5133.0], [46.1, 5133.0], [46.2, 5133.0], [46.3, 5133.0], [46.4, 5133.0], [46.5, 5133.0], [46.6, 5133.0], [46.7, 5133.0], [46.8, 5133.0], [46.9, 5133.0], [47.0, 5138.0], [47.1, 5138.0], [47.2, 5138.0], [47.3, 5138.0], [47.4, 5138.0], [47.5, 5138.0], [47.6, 5138.0], [47.7, 5138.0], [47.8, 5138.0], [47.9, 5138.0], [48.0, 5150.0], [48.1, 5150.0], [48.2, 5150.0], [48.3, 5150.0], [48.4, 5150.0], [48.5, 5150.0], [48.6, 5150.0], [48.7, 5150.0], [48.8, 5150.0], [48.9, 5150.0], [49.0, 5154.0], [49.1, 5154.0], [49.2, 5154.0], [49.3, 5154.0], [49.4, 5154.0], [49.5, 5154.0], [49.6, 5154.0], [49.7, 5154.0], [49.8, 5154.0], [49.9, 5154.0], [50.0, 5165.0], [50.1, 5165.0], [50.2, 5165.0], [50.3, 5165.0], [50.4, 5165.0], [50.5, 5165.0], [50.6, 5165.0], [50.7, 5165.0], [50.8, 5165.0], [50.9, 5165.0], [51.0, 5172.0], [51.1, 5172.0], [51.2, 5172.0], [51.3, 5172.0], [51.4, 5172.0], [51.5, 5172.0], [51.6, 5172.0], [51.7, 5172.0], [51.8, 5172.0], [51.9, 5172.0], [52.0, 5196.0], [52.1, 5196.0], [52.2, 5196.0], [52.3, 5196.0], [52.4, 5196.0], [52.5, 5196.0], [52.6, 5196.0], [52.7, 5196.0], [52.8, 5196.0], [52.9, 5196.0], [53.0, 5212.0], [53.1, 5212.0], [53.2, 5212.0], [53.3, 5212.0], [53.4, 5212.0], [53.5, 5212.0], [53.6, 5212.0], [53.7, 5212.0], [53.8, 5212.0], [53.9, 5212.0], [54.0, 5233.0], [54.1, 5233.0], [54.2, 5233.0], [54.3, 5233.0], [54.4, 5233.0], [54.5, 5233.0], [54.6, 5233.0], [54.7, 5233.0], [54.8, 5233.0], [54.9, 5233.0], [55.0, 5237.0], [55.1, 5237.0], [55.2, 5237.0], [55.3, 5237.0], [55.4, 5237.0], [55.5, 5237.0], [55.6, 5237.0], [55.7, 5237.0], [55.8, 5237.0], [55.9, 5237.0], [56.0, 5247.0], [56.1, 5247.0], [56.2, 5247.0], [56.3, 5247.0], [56.4, 5247.0], [56.5, 5247.0], [56.6, 5247.0], [56.7, 5247.0], [56.8, 5247.0], [56.9, 5247.0], [57.0, 5252.0], [57.1, 5252.0], [57.2, 5252.0], [57.3, 5252.0], [57.4, 5252.0], [57.5, 5252.0], [57.6, 5252.0], [57.7, 5252.0], [57.8, 5252.0], [57.9, 5252.0], [58.0, 5265.0], [58.1, 5265.0], [58.2, 5265.0], [58.3, 5265.0], [58.4, 5265.0], [58.5, 5265.0], [58.6, 5265.0], [58.7, 5265.0], [58.8, 5265.0], [58.9, 5265.0], [59.0, 5267.0], [59.1, 5267.0], [59.2, 5267.0], [59.3, 5267.0], [59.4, 5267.0], [59.5, 5267.0], [59.6, 5267.0], [59.7, 5267.0], [59.8, 5267.0], [59.9, 5267.0], [60.0, 5269.0], [60.1, 5269.0], [60.2, 5269.0], [60.3, 5269.0], [60.4, 5269.0], [60.5, 5269.0], [60.6, 5269.0], [60.7, 5269.0], [60.8, 5269.0], [60.9, 5269.0], [61.0, 5271.0], [61.1, 5271.0], [61.2, 5271.0], [61.3, 5271.0], [61.4, 5271.0], [61.5, 5271.0], [61.6, 5271.0], [61.7, 5271.0], [61.8, 5271.0], [61.9, 5271.0], [62.0, 5281.0], [62.1, 5281.0], [62.2, 5281.0], [62.3, 5281.0], [62.4, 5281.0], [62.5, 5281.0], [62.6, 5281.0], [62.7, 5281.0], [62.8, 5281.0], [62.9, 5281.0], [63.0, 5286.0], [63.1, 5286.0], [63.2, 5286.0], [63.3, 5286.0], [63.4, 5286.0], [63.5, 5286.0], [63.6, 5286.0], [63.7, 5286.0], [63.8, 5286.0], [63.9, 5286.0], [64.0, 5296.0], [64.1, 5296.0], [64.2, 5296.0], [64.3, 5296.0], [64.4, 5296.0], [64.5, 5296.0], [64.6, 5296.0], [64.7, 5296.0], [64.8, 5296.0], [64.9, 5296.0], [65.0, 5333.0], [65.1, 5333.0], [65.2, 5333.0], [65.3, 5333.0], [65.4, 5333.0], [65.5, 5333.0], [65.6, 5333.0], [65.7, 5333.0], [65.8, 5333.0], [65.9, 5333.0], [66.0, 5402.0], [66.1, 5402.0], [66.2, 5402.0], [66.3, 5402.0], [66.4, 5402.0], [66.5, 5402.0], [66.6, 5402.0], [66.7, 5402.0], [66.8, 5402.0], [66.9, 5402.0], [67.0, 5411.0], [67.1, 5411.0], [67.2, 5411.0], [67.3, 5411.0], [67.4, 5411.0], [67.5, 5411.0], [67.6, 5411.0], [67.7, 5411.0], [67.8, 5411.0], [67.9, 5411.0], [68.0, 5422.0], [68.1, 5422.0], [68.2, 5422.0], [68.3, 5422.0], [68.4, 5422.0], [68.5, 5422.0], [68.6, 5422.0], [68.7, 5422.0], [68.8, 5422.0], [68.9, 5422.0], [69.0, 5430.0], [69.1, 5430.0], [69.2, 5430.0], [69.3, 5430.0], [69.4, 5430.0], [69.5, 5430.0], [69.6, 5430.0], [69.7, 5430.0], [69.8, 5430.0], [69.9, 5430.0], [70.0, 5545.0], [70.1, 5545.0], [70.2, 5545.0], [70.3, 5545.0], [70.4, 5545.0], [70.5, 5545.0], [70.6, 5545.0], [70.7, 5545.0], [70.8, 5545.0], [70.9, 5545.0], [71.0, 5596.0], [71.1, 5596.0], [71.2, 5596.0], [71.3, 5596.0], [71.4, 5596.0], [71.5, 5596.0], [71.6, 5596.0], [71.7, 5596.0], [71.8, 5596.0], [71.9, 5596.0], [72.0, 5632.0], [72.1, 5632.0], [72.2, 5632.0], [72.3, 5632.0], [72.4, 5632.0], [72.5, 5632.0], [72.6, 5632.0], [72.7, 5632.0], [72.8, 5632.0], [72.9, 5632.0], [73.0, 5652.0], [73.1, 5652.0], [73.2, 5652.0], [73.3, 5652.0], [73.4, 5652.0], [73.5, 5652.0], [73.6, 5652.0], [73.7, 5652.0], [73.8, 5652.0], [73.9, 5652.0], [74.0, 5660.0], [74.1, 5660.0], [74.2, 5660.0], [74.3, 5660.0], [74.4, 5660.0], [74.5, 5660.0], [74.6, 5660.0], [74.7, 5660.0], [74.8, 5660.0], [74.9, 5660.0], [75.0, 5716.0], [75.1, 5716.0], [75.2, 5716.0], [75.3, 5716.0], [75.4, 5716.0], [75.5, 5716.0], [75.6, 5716.0], [75.7, 5716.0], [75.8, 5716.0], [75.9, 5716.0], [76.0, 5732.0], [76.1, 5732.0], [76.2, 5732.0], [76.3, 5732.0], [76.4, 5732.0], [76.5, 5732.0], [76.6, 5732.0], [76.7, 5732.0], [76.8, 5732.0], [76.9, 5732.0], [77.0, 5734.0], [77.1, 5734.0], [77.2, 5734.0], [77.3, 5734.0], [77.4, 5734.0], [77.5, 5734.0], [77.6, 5734.0], [77.7, 5734.0], [77.8, 5734.0], [77.9, 5734.0], [78.0, 5743.0], [78.1, 5743.0], [78.2, 5743.0], [78.3, 5743.0], [78.4, 5743.0], [78.5, 5743.0], [78.6, 5743.0], [78.7, 5743.0], [78.8, 5743.0], [78.9, 5743.0], [79.0, 5751.0], [79.1, 5751.0], [79.2, 5751.0], [79.3, 5751.0], [79.4, 5751.0], [79.5, 5751.0], [79.6, 5751.0], [79.7, 5751.0], [79.8, 5751.0], [79.9, 5751.0], [80.0, 5822.0], [80.1, 5822.0], [80.2, 5822.0], [80.3, 5822.0], [80.4, 5822.0], [80.5, 5822.0], [80.6, 5822.0], [80.7, 5822.0], [80.8, 5822.0], [80.9, 5822.0], [81.0, 5862.0], [81.1, 5862.0], [81.2, 5862.0], [81.3, 5862.0], [81.4, 5862.0], [81.5, 5862.0], [81.6, 5862.0], [81.7, 5862.0], [81.8, 5862.0], [81.9, 5862.0], [82.0, 5932.0], [82.1, 5932.0], [82.2, 5932.0], [82.3, 5932.0], [82.4, 5932.0], [82.5, 5932.0], [82.6, 5932.0], [82.7, 5932.0], [82.8, 5932.0], [82.9, 5932.0], [83.0, 5976.0], [83.1, 5976.0], [83.2, 5976.0], [83.3, 5976.0], [83.4, 5976.0], [83.5, 5976.0], [83.6, 5976.0], [83.7, 5976.0], [83.8, 5976.0], [83.9, 5976.0], [84.0, 5990.0], [84.1, 5990.0], [84.2, 5990.0], [84.3, 5990.0], [84.4, 5990.0], [84.5, 5990.0], [84.6, 5990.0], [84.7, 5990.0], [84.8, 5990.0], [84.9, 5990.0], [85.0, 6026.0], [85.1, 6026.0], [85.2, 6026.0], [85.3, 6026.0], [85.4, 6026.0], [85.5, 6026.0], [85.6, 6026.0], [85.7, 6026.0], [85.8, 6026.0], [85.9, 6026.0], [86.0, 6034.0], [86.1, 6034.0], [86.2, 6034.0], [86.3, 6034.0], [86.4, 6034.0], [86.5, 6034.0], [86.6, 6034.0], [86.7, 6034.0], [86.8, 6034.0], [86.9, 6034.0], [87.0, 6064.0], [87.1, 6064.0], [87.2, 6064.0], [87.3, 6064.0], [87.4, 6064.0], [87.5, 6064.0], [87.6, 6064.0], [87.7, 6064.0], [87.8, 6064.0], [87.9, 6064.0], [88.0, 6099.0], [88.1, 6099.0], [88.2, 6099.0], [88.3, 6099.0], [88.4, 6099.0], [88.5, 6099.0], [88.6, 6099.0], [88.7, 6099.0], [88.8, 6099.0], [88.9, 6099.0], [89.0, 6123.0], [89.1, 6123.0], [89.2, 6123.0], [89.3, 6123.0], [89.4, 6123.0], [89.5, 6123.0], [89.6, 6123.0], [89.7, 6123.0], [89.8, 6123.0], [89.9, 6123.0], [90.0, 6124.0], [90.1, 6124.0], [90.2, 6124.0], [90.3, 6124.0], [90.4, 6124.0], [90.5, 6124.0], [90.6, 6124.0], [90.7, 6124.0], [90.8, 6124.0], [90.9, 6124.0], [91.0, 6153.0], [91.1, 6153.0], [91.2, 6153.0], [91.3, 6153.0], [91.4, 6153.0], [91.5, 6153.0], [91.6, 6153.0], [91.7, 6153.0], [91.8, 6153.0], [91.9, 6153.0], [92.0, 6154.0], [92.1, 6154.0], [92.2, 6154.0], [92.3, 6154.0], [92.4, 6154.0], [92.5, 6154.0], [92.6, 6154.0], [92.7, 6154.0], [92.8, 6154.0], [92.9, 6154.0], [93.0, 6228.0], [93.1, 6228.0], [93.2, 6228.0], [93.3, 6228.0], [93.4, 6228.0], [93.5, 6228.0], [93.6, 6228.0], [93.7, 6228.0], [93.8, 6228.0], [93.9, 6228.0], [94.0, 6287.0], [94.1, 6287.0], [94.2, 6287.0], [94.3, 6287.0], [94.4, 6287.0], [94.5, 6287.0], [94.6, 6287.0], [94.7, 6287.0], [94.8, 6287.0], [94.9, 6287.0], [95.0, 6316.0], [95.1, 6316.0], [95.2, 6316.0], [95.3, 6316.0], [95.4, 6316.0], [95.5, 6316.0], [95.6, 6316.0], [95.7, 6316.0], [95.8, 6316.0], [95.9, 6316.0], [96.0, 6545.0], [96.1, 6545.0], [96.2, 6545.0], [96.3, 6545.0], [96.4, 6545.0], [96.5, 6545.0], [96.6, 6545.0], [96.7, 6545.0], [96.8, 6545.0], [96.9, 6545.0], [97.0, 6596.0], [97.1, 6596.0], [97.2, 6596.0], [97.3, 6596.0], [97.4, 6596.0], [97.5, 6596.0], [97.6, 6596.0], [97.7, 6596.0], [97.8, 6596.0], [97.9, 6596.0], [98.0, 6630.0], [98.1, 6630.0], [98.2, 6630.0], [98.3, 6630.0], [98.4, 6630.0], [98.5, 6630.0], [98.6, 6630.0], [98.7, 6630.0], [98.8, 6630.0], [98.9, 6630.0], [99.0, 7073.0], [99.1, 7073.0], [99.2, 7073.0], [99.3, 7073.0], [99.4, 7073.0], [99.5, 7073.0], [99.6, 7073.0], [99.7, 7073.0], [99.8, 7073.0], [99.9, 7073.0]], "isOverall": false, "label": "Item Details", "isController": false}, {"data": [[0.0, 2449.0], [0.1, 2449.0], [0.2, 2449.0], [0.3, 2449.0], [0.4, 2449.0], [0.5, 2449.0], [0.6, 2449.0], [0.7, 2449.0], [0.8, 2449.0], [0.9, 2449.0], [1.0, 2524.0], [1.1, 2524.0], [1.2, 2524.0], [1.3, 2524.0], [1.4, 2524.0], [1.5, 2524.0], [1.6, 2524.0], [1.7, 2524.0], [1.8, 2524.0], [1.9, 2524.0], [2.0, 2535.0], [2.1, 2535.0], [2.2, 2535.0], [2.3, 2535.0], [2.4, 2535.0], [2.5, 2535.0], [2.6, 2535.0], [2.7, 2535.0], [2.8, 2535.0], [2.9, 2535.0], [3.0, 2559.0], [3.1, 2559.0], [3.2, 2559.0], [3.3, 2559.0], [3.4, 2559.0], [3.5, 2559.0], [3.6, 2559.0], [3.7, 2559.0], [3.8, 2559.0], [3.9, 2559.0], [4.0, 2631.0], [4.1, 2631.0], [4.2, 2631.0], [4.3, 2631.0], [4.4, 2631.0], [4.5, 2631.0], [4.6, 2631.0], [4.7, 2631.0], [4.8, 2631.0], [4.9, 2631.0], [5.0, 2762.0], [5.1, 2762.0], [5.2, 2762.0], [5.3, 2762.0], [5.4, 2762.0], [5.5, 2762.0], [5.6, 2762.0], [5.7, 2762.0], [5.8, 2762.0], [5.9, 2762.0], [6.0, 2835.0], [6.1, 2835.0], [6.2, 2835.0], [6.3, 2835.0], [6.4, 2835.0], [6.5, 2835.0], [6.6, 2835.0], [6.7, 2835.0], [6.8, 2835.0], [6.9, 2835.0], [7.0, 2933.0], [7.1, 2933.0], [7.2, 2933.0], [7.3, 2933.0], [7.4, 2933.0], [7.5, 2933.0], [7.6, 2933.0], [7.7, 2933.0], [7.8, 2933.0], [7.9, 2933.0], [8.0, 2965.0], [8.1, 2965.0], [8.2, 2965.0], [8.3, 2965.0], [8.4, 2965.0], [8.5, 2965.0], [8.6, 2965.0], [8.7, 2965.0], [8.8, 2965.0], [8.9, 2965.0], [9.0, 3007.0], [9.1, 3007.0], [9.2, 3007.0], [9.3, 3007.0], [9.4, 3007.0], [9.5, 3007.0], [9.6, 3007.0], [9.7, 3007.0], [9.8, 3007.0], [9.9, 3007.0], [10.0, 3036.0], [10.1, 3036.0], [10.2, 3036.0], [10.3, 3036.0], [10.4, 3036.0], [10.5, 3036.0], [10.6, 3036.0], [10.7, 3036.0], [10.8, 3036.0], [10.9, 3036.0], [11.0, 3118.0], [11.1, 3118.0], [11.2, 3118.0], [11.3, 3118.0], [11.4, 3118.0], [11.5, 3118.0], [11.6, 3118.0], [11.7, 3118.0], [11.8, 3118.0], [11.9, 3118.0], [12.0, 3131.0], [12.1, 3131.0], [12.2, 3131.0], [12.3, 3131.0], [12.4, 3131.0], [12.5, 3131.0], [12.6, 3131.0], [12.7, 3131.0], [12.8, 3131.0], [12.9, 3131.0], [13.0, 3158.0], [13.1, 3158.0], [13.2, 3158.0], [13.3, 3158.0], [13.4, 3158.0], [13.5, 3158.0], [13.6, 3158.0], [13.7, 3158.0], [13.8, 3158.0], [13.9, 3158.0], [14.0, 3186.0], [14.1, 3186.0], [14.2, 3186.0], [14.3, 3186.0], [14.4, 3186.0], [14.5, 3186.0], [14.6, 3186.0], [14.7, 3186.0], [14.8, 3186.0], [14.9, 3186.0], [15.0, 3268.0], [15.1, 3268.0], [15.2, 3268.0], [15.3, 3268.0], [15.4, 3268.0], [15.5, 3268.0], [15.6, 3268.0], [15.7, 3268.0], [15.8, 3268.0], [15.9, 3268.0], [16.0, 3337.0], [16.1, 3337.0], [16.2, 3337.0], [16.3, 3337.0], [16.4, 3337.0], [16.5, 3337.0], [16.6, 3337.0], [16.7, 3337.0], [16.8, 3337.0], [16.9, 3337.0], [17.0, 3362.0], [17.1, 3362.0], [17.2, 3362.0], [17.3, 3362.0], [17.4, 3362.0], [17.5, 3362.0], [17.6, 3362.0], [17.7, 3362.0], [17.8, 3362.0], [17.9, 3362.0], [18.0, 3384.0], [18.1, 3384.0], [18.2, 3384.0], [18.3, 3384.0], [18.4, 3384.0], [18.5, 3384.0], [18.6, 3384.0], [18.7, 3384.0], [18.8, 3384.0], [18.9, 3384.0], [19.0, 3444.0], [19.1, 3444.0], [19.2, 3444.0], [19.3, 3444.0], [19.4, 3444.0], [19.5, 3444.0], [19.6, 3444.0], [19.7, 3444.0], [19.8, 3444.0], [19.9, 3444.0], [20.0, 3449.0], [20.1, 3449.0], [20.2, 3449.0], [20.3, 3449.0], [20.4, 3449.0], [20.5, 3449.0], [20.6, 3449.0], [20.7, 3449.0], [20.8, 3449.0], [20.9, 3449.0], [21.0, 3479.0], [21.1, 3479.0], [21.2, 3479.0], [21.3, 3479.0], [21.4, 3479.0], [21.5, 3479.0], [21.6, 3479.0], [21.7, 3479.0], [21.8, 3479.0], [21.9, 3479.0], [22.0, 3486.0], [22.1, 3486.0], [22.2, 3486.0], [22.3, 3486.0], [22.4, 3486.0], [22.5, 3486.0], [22.6, 3486.0], [22.7, 3486.0], [22.8, 3486.0], [22.9, 3486.0], [23.0, 3503.0], [23.1, 3503.0], [23.2, 3503.0], [23.3, 3503.0], [23.4, 3503.0], [23.5, 3503.0], [23.6, 3503.0], [23.7, 3503.0], [23.8, 3503.0], [23.9, 3503.0], [24.0, 3503.0], [24.1, 3503.0], [24.2, 3503.0], [24.3, 3503.0], [24.4, 3503.0], [24.5, 3503.0], [24.6, 3503.0], [24.7, 3503.0], [24.8, 3503.0], [24.9, 3503.0], [25.0, 3523.0], [25.1, 3523.0], [25.2, 3523.0], [25.3, 3523.0], [25.4, 3523.0], [25.5, 3523.0], [25.6, 3523.0], [25.7, 3523.0], [25.8, 3523.0], [25.9, 3523.0], [26.0, 3605.0], [26.1, 3605.0], [26.2, 3605.0], [26.3, 3605.0], [26.4, 3605.0], [26.5, 3605.0], [26.6, 3605.0], [26.7, 3605.0], [26.8, 3605.0], [26.9, 3605.0], [27.0, 3633.0], [27.1, 3633.0], [27.2, 3633.0], [27.3, 3633.0], [27.4, 3633.0], [27.5, 3633.0], [27.6, 3633.0], [27.7, 3633.0], [27.8, 3633.0], [27.9, 3633.0], [28.0, 3635.0], [28.1, 3635.0], [28.2, 3635.0], [28.3, 3635.0], [28.4, 3635.0], [28.5, 3635.0], [28.6, 3635.0], [28.7, 3635.0], [28.8, 3635.0], [28.9, 3635.0], [29.0, 3639.0], [29.1, 3639.0], [29.2, 3639.0], [29.3, 3639.0], [29.4, 3639.0], [29.5, 3639.0], [29.6, 3639.0], [29.7, 3639.0], [29.8, 3639.0], [29.9, 3639.0], [30.0, 3688.0], [30.1, 3688.0], [30.2, 3688.0], [30.3, 3688.0], [30.4, 3688.0], [30.5, 3688.0], [30.6, 3688.0], [30.7, 3688.0], [30.8, 3688.0], [30.9, 3688.0], [31.0, 3699.0], [31.1, 3699.0], [31.2, 3699.0], [31.3, 3699.0], [31.4, 3699.0], [31.5, 3699.0], [31.6, 3699.0], [31.7, 3699.0], [31.8, 3699.0], [31.9, 3699.0], [32.0, 3705.0], [32.1, 3705.0], [32.2, 3705.0], [32.3, 3705.0], [32.4, 3705.0], [32.5, 3705.0], [32.6, 3705.0], [32.7, 3705.0], [32.8, 3705.0], [32.9, 3705.0], [33.0, 3727.0], [33.1, 3727.0], [33.2, 3727.0], [33.3, 3727.0], [33.4, 3727.0], [33.5, 3727.0], [33.6, 3727.0], [33.7, 3727.0], [33.8, 3727.0], [33.9, 3727.0], [34.0, 3740.0], [34.1, 3740.0], [34.2, 3740.0], [34.3, 3740.0], [34.4, 3740.0], [34.5, 3740.0], [34.6, 3740.0], [34.7, 3740.0], [34.8, 3740.0], [34.9, 3740.0], [35.0, 3797.0], [35.1, 3797.0], [35.2, 3797.0], [35.3, 3797.0], [35.4, 3797.0], [35.5, 3797.0], [35.6, 3797.0], [35.7, 3797.0], [35.8, 3797.0], [35.9, 3797.0], [36.0, 3802.0], [36.1, 3802.0], [36.2, 3802.0], [36.3, 3802.0], [36.4, 3802.0], [36.5, 3802.0], [36.6, 3802.0], [36.7, 3802.0], [36.8, 3802.0], [36.9, 3802.0], [37.0, 3819.0], [37.1, 3819.0], [37.2, 3819.0], [37.3, 3819.0], [37.4, 3819.0], [37.5, 3819.0], [37.6, 3819.0], [37.7, 3819.0], [37.8, 3819.0], [37.9, 3819.0], [38.0, 3837.0], [38.1, 3837.0], [38.2, 3837.0], [38.3, 3837.0], [38.4, 3837.0], [38.5, 3837.0], [38.6, 3837.0], [38.7, 3837.0], [38.8, 3837.0], [38.9, 3837.0], [39.0, 3861.0], [39.1, 3861.0], [39.2, 3861.0], [39.3, 3861.0], [39.4, 3861.0], [39.5, 3861.0], [39.6, 3861.0], [39.7, 3861.0], [39.8, 3861.0], [39.9, 3861.0], [40.0, 3911.0], [40.1, 3911.0], [40.2, 3911.0], [40.3, 3911.0], [40.4, 3911.0], [40.5, 3911.0], [40.6, 3911.0], [40.7, 3911.0], [40.8, 3911.0], [40.9, 3911.0], [41.0, 3972.0], [41.1, 3972.0], [41.2, 3972.0], [41.3, 3972.0], [41.4, 3972.0], [41.5, 3972.0], [41.6, 3972.0], [41.7, 3972.0], [41.8, 3972.0], [41.9, 3972.0], [42.0, 3994.0], [42.1, 3994.0], [42.2, 3994.0], [42.3, 3994.0], [42.4, 3994.0], [42.5, 3994.0], [42.6, 3994.0], [42.7, 3994.0], [42.8, 3994.0], [42.9, 3994.0], [43.0, 4150.0], [43.1, 4150.0], [43.2, 4150.0], [43.3, 4150.0], [43.4, 4150.0], [43.5, 4150.0], [43.6, 4150.0], [43.7, 4150.0], [43.8, 4150.0], [43.9, 4150.0], [44.0, 4160.0], [44.1, 4160.0], [44.2, 4160.0], [44.3, 4160.0], [44.4, 4160.0], [44.5, 4160.0], [44.6, 4160.0], [44.7, 4160.0], [44.8, 4160.0], [44.9, 4160.0], [45.0, 4185.0], [45.1, 4185.0], [45.2, 4185.0], [45.3, 4185.0], [45.4, 4185.0], [45.5, 4185.0], [45.6, 4185.0], [45.7, 4185.0], [45.8, 4185.0], [45.9, 4185.0], [46.0, 4187.0], [46.1, 4187.0], [46.2, 4187.0], [46.3, 4187.0], [46.4, 4187.0], [46.5, 4187.0], [46.6, 4187.0], [46.7, 4187.0], [46.8, 4187.0], [46.9, 4187.0], [47.0, 4203.0], [47.1, 4203.0], [47.2, 4203.0], [47.3, 4203.0], [47.4, 4203.0], [47.5, 4203.0], [47.6, 4203.0], [47.7, 4203.0], [47.8, 4203.0], [47.9, 4203.0], [48.0, 4204.0], [48.1, 4204.0], [48.2, 4204.0], [48.3, 4204.0], [48.4, 4204.0], [48.5, 4204.0], [48.6, 4204.0], [48.7, 4204.0], [48.8, 4204.0], [48.9, 4204.0], [49.0, 4214.0], [49.1, 4214.0], [49.2, 4214.0], [49.3, 4214.0], [49.4, 4214.0], [49.5, 4214.0], [49.6, 4214.0], [49.7, 4214.0], [49.8, 4214.0], [49.9, 4214.0], [50.0, 4230.0], [50.1, 4230.0], [50.2, 4230.0], [50.3, 4230.0], [50.4, 4230.0], [50.5, 4230.0], [50.6, 4230.0], [50.7, 4230.0], [50.8, 4230.0], [50.9, 4230.0], [51.0, 4259.0], [51.1, 4259.0], [51.2, 4259.0], [51.3, 4259.0], [51.4, 4259.0], [51.5, 4259.0], [51.6, 4259.0], [51.7, 4259.0], [51.8, 4259.0], [51.9, 4259.0], [52.0, 4289.0], [52.1, 4289.0], [52.2, 4289.0], [52.3, 4289.0], [52.4, 4289.0], [52.5, 4289.0], [52.6, 4289.0], [52.7, 4289.0], [52.8, 4289.0], [52.9, 4289.0], [53.0, 4307.0], [53.1, 4307.0], [53.2, 4307.0], [53.3, 4307.0], [53.4, 4307.0], [53.5, 4307.0], [53.6, 4307.0], [53.7, 4307.0], [53.8, 4307.0], [53.9, 4307.0], [54.0, 4313.0], [54.1, 4313.0], [54.2, 4313.0], [54.3, 4313.0], [54.4, 4313.0], [54.5, 4313.0], [54.6, 4313.0], [54.7, 4313.0], [54.8, 4313.0], [54.9, 4313.0], [55.0, 4328.0], [55.1, 4328.0], [55.2, 4328.0], [55.3, 4328.0], [55.4, 4328.0], [55.5, 4328.0], [55.6, 4328.0], [55.7, 4328.0], [55.8, 4328.0], [55.9, 4328.0], [56.0, 4406.0], [56.1, 4406.0], [56.2, 4406.0], [56.3, 4406.0], [56.4, 4406.0], [56.5, 4406.0], [56.6, 4406.0], [56.7, 4406.0], [56.8, 4406.0], [56.9, 4406.0], [57.0, 4426.0], [57.1, 4426.0], [57.2, 4426.0], [57.3, 4426.0], [57.4, 4426.0], [57.5, 4426.0], [57.6, 4426.0], [57.7, 4426.0], [57.8, 4426.0], [57.9, 4426.0], [58.0, 4428.0], [58.1, 4428.0], [58.2, 4428.0], [58.3, 4428.0], [58.4, 4428.0], [58.5, 4428.0], [58.6, 4428.0], [58.7, 4428.0], [58.8, 4428.0], [58.9, 4428.0], [59.0, 4431.0], [59.1, 4431.0], [59.2, 4431.0], [59.3, 4431.0], [59.4, 4431.0], [59.5, 4431.0], [59.6, 4431.0], [59.7, 4431.0], [59.8, 4431.0], [59.9, 4431.0], [60.0, 4472.0], [60.1, 4472.0], [60.2, 4472.0], [60.3, 4472.0], [60.4, 4472.0], [60.5, 4472.0], [60.6, 4472.0], [60.7, 4472.0], [60.8, 4472.0], [60.9, 4472.0], [61.0, 4476.0], [61.1, 4476.0], [61.2, 4476.0], [61.3, 4476.0], [61.4, 4476.0], [61.5, 4476.0], [61.6, 4476.0], [61.7, 4476.0], [61.8, 4476.0], [61.9, 4476.0], [62.0, 4491.0], [62.1, 4491.0], [62.2, 4491.0], [62.3, 4491.0], [62.4, 4491.0], [62.5, 4491.0], [62.6, 4491.0], [62.7, 4491.0], [62.8, 4491.0], [62.9, 4491.0], [63.0, 4508.0], [63.1, 4508.0], [63.2, 4508.0], [63.3, 4508.0], [63.4, 4508.0], [63.5, 4508.0], [63.6, 4508.0], [63.7, 4508.0], [63.8, 4508.0], [63.9, 4508.0], [64.0, 4525.0], [64.1, 4525.0], [64.2, 4525.0], [64.3, 4525.0], [64.4, 4525.0], [64.5, 4525.0], [64.6, 4525.0], [64.7, 4525.0], [64.8, 4525.0], [64.9, 4525.0], [65.0, 4531.0], [65.1, 4531.0], [65.2, 4531.0], [65.3, 4531.0], [65.4, 4531.0], [65.5, 4531.0], [65.6, 4531.0], [65.7, 4531.0], [65.8, 4531.0], [65.9, 4531.0], [66.0, 4537.0], [66.1, 4537.0], [66.2, 4537.0], [66.3, 4537.0], [66.4, 4537.0], [66.5, 4537.0], [66.6, 4537.0], [66.7, 4537.0], [66.8, 4537.0], [66.9, 4537.0], [67.0, 4539.0], [67.1, 4539.0], [67.2, 4539.0], [67.3, 4539.0], [67.4, 4539.0], [67.5, 4539.0], [67.6, 4539.0], [67.7, 4539.0], [67.8, 4539.0], [67.9, 4539.0], [68.0, 4557.0], [68.1, 4557.0], [68.2, 4557.0], [68.3, 4557.0], [68.4, 4557.0], [68.5, 4557.0], [68.6, 4557.0], [68.7, 4557.0], [68.8, 4557.0], [68.9, 4557.0], [69.0, 4571.0], [69.1, 4571.0], [69.2, 4571.0], [69.3, 4571.0], [69.4, 4571.0], [69.5, 4571.0], [69.6, 4571.0], [69.7, 4571.0], [69.8, 4571.0], [69.9, 4571.0], [70.0, 4580.0], [70.1, 4580.0], [70.2, 4580.0], [70.3, 4580.0], [70.4, 4580.0], [70.5, 4580.0], [70.6, 4580.0], [70.7, 4580.0], [70.8, 4580.0], [70.9, 4580.0], [71.0, 4621.0], [71.1, 4621.0], [71.2, 4621.0], [71.3, 4621.0], [71.4, 4621.0], [71.5, 4621.0], [71.6, 4621.0], [71.7, 4621.0], [71.8, 4621.0], [71.9, 4621.0], [72.0, 4624.0], [72.1, 4624.0], [72.2, 4624.0], [72.3, 4624.0], [72.4, 4624.0], [72.5, 4624.0], [72.6, 4624.0], [72.7, 4624.0], [72.8, 4624.0], [72.9, 4624.0], [73.0, 4635.0], [73.1, 4635.0], [73.2, 4635.0], [73.3, 4635.0], [73.4, 4635.0], [73.5, 4635.0], [73.6, 4635.0], [73.7, 4635.0], [73.8, 4635.0], [73.9, 4635.0], [74.0, 4658.0], [74.1, 4658.0], [74.2, 4658.0], [74.3, 4658.0], [74.4, 4658.0], [74.5, 4658.0], [74.6, 4658.0], [74.7, 4658.0], [74.8, 4658.0], [74.9, 4658.0], [75.0, 4691.0], [75.1, 4691.0], [75.2, 4691.0], [75.3, 4691.0], [75.4, 4691.0], [75.5, 4691.0], [75.6, 4691.0], [75.7, 4691.0], [75.8, 4691.0], [75.9, 4691.0], [76.0, 4707.0], [76.1, 4707.0], [76.2, 4707.0], [76.3, 4707.0], [76.4, 4707.0], [76.5, 4707.0], [76.6, 4707.0], [76.7, 4707.0], [76.8, 4707.0], [76.9, 4707.0], [77.0, 4737.0], [77.1, 4737.0], [77.2, 4737.0], [77.3, 4737.0], [77.4, 4737.0], [77.5, 4737.0], [77.6, 4737.0], [77.7, 4737.0], [77.8, 4737.0], [77.9, 4737.0], [78.0, 4807.0], [78.1, 4807.0], [78.2, 4807.0], [78.3, 4807.0], [78.4, 4807.0], [78.5, 4807.0], [78.6, 4807.0], [78.7, 4807.0], [78.8, 4807.0], [78.9, 4807.0], [79.0, 4814.0], [79.1, 4814.0], [79.2, 4814.0], [79.3, 4814.0], [79.4, 4814.0], [79.5, 4814.0], [79.6, 4814.0], [79.7, 4814.0], [79.8, 4814.0], [79.9, 4814.0], [80.0, 4821.0], [80.1, 4821.0], [80.2, 4821.0], [80.3, 4821.0], [80.4, 4821.0], [80.5, 4821.0], [80.6, 4821.0], [80.7, 4821.0], [80.8, 4821.0], [80.9, 4821.0], [81.0, 4888.0], [81.1, 4888.0], [81.2, 4888.0], [81.3, 4888.0], [81.4, 4888.0], [81.5, 4888.0], [81.6, 4888.0], [81.7, 4888.0], [81.8, 4888.0], [81.9, 4888.0], [82.0, 4946.0], [82.1, 4946.0], [82.2, 4946.0], [82.3, 4946.0], [82.4, 4946.0], [82.5, 4946.0], [82.6, 4946.0], [82.7, 4946.0], [82.8, 4946.0], [82.9, 4946.0], [83.0, 4989.0], [83.1, 4989.0], [83.2, 4989.0], [83.3, 4989.0], [83.4, 4989.0], [83.5, 4989.0], [83.6, 4989.0], [83.7, 4989.0], [83.8, 4989.0], [83.9, 4989.0], [84.0, 5022.0], [84.1, 5022.0], [84.2, 5022.0], [84.3, 5022.0], [84.4, 5022.0], [84.5, 5022.0], [84.6, 5022.0], [84.7, 5022.0], [84.8, 5022.0], [84.9, 5022.0], [85.0, 5025.0], [85.1, 5025.0], [85.2, 5025.0], [85.3, 5025.0], [85.4, 5025.0], [85.5, 5025.0], [85.6, 5025.0], [85.7, 5025.0], [85.8, 5025.0], [85.9, 5025.0], [86.0, 5045.0], [86.1, 5045.0], [86.2, 5045.0], [86.3, 5045.0], [86.4, 5045.0], [86.5, 5045.0], [86.6, 5045.0], [86.7, 5045.0], [86.8, 5045.0], [86.9, 5045.0], [87.0, 5112.0], [87.1, 5112.0], [87.2, 5112.0], [87.3, 5112.0], [87.4, 5112.0], [87.5, 5112.0], [87.6, 5112.0], [87.7, 5112.0], [87.8, 5112.0], [87.9, 5112.0], [88.0, 5150.0], [88.1, 5150.0], [88.2, 5150.0], [88.3, 5150.0], [88.4, 5150.0], [88.5, 5150.0], [88.6, 5150.0], [88.7, 5150.0], [88.8, 5150.0], [88.9, 5150.0], [89.0, 5181.0], [89.1, 5181.0], [89.2, 5181.0], [89.3, 5181.0], [89.4, 5181.0], [89.5, 5181.0], [89.6, 5181.0], [89.7, 5181.0], [89.8, 5181.0], [89.9, 5181.0], [90.0, 5280.0], [90.1, 5280.0], [90.2, 5280.0], [90.3, 5280.0], [90.4, 5280.0], [90.5, 5280.0], [90.6, 5280.0], [90.7, 5280.0], [90.8, 5280.0], [90.9, 5280.0], [91.0, 5345.0], [91.1, 5345.0], [91.2, 5345.0], [91.3, 5345.0], [91.4, 5345.0], [91.5, 5345.0], [91.6, 5345.0], [91.7, 5345.0], [91.8, 5345.0], [91.9, 5345.0], [92.0, 5350.0], [92.1, 5350.0], [92.2, 5350.0], [92.3, 5350.0], [92.4, 5350.0], [92.5, 5350.0], [92.6, 5350.0], [92.7, 5350.0], [92.8, 5350.0], [92.9, 5350.0], [93.0, 5352.0], [93.1, 5352.0], [93.2, 5352.0], [93.3, 5352.0], [93.4, 5352.0], [93.5, 5352.0], [93.6, 5352.0], [93.7, 5352.0], [93.8, 5352.0], [93.9, 5352.0], [94.0, 5391.0], [94.1, 5391.0], [94.2, 5391.0], [94.3, 5391.0], [94.4, 5391.0], [94.5, 5391.0], [94.6, 5391.0], [94.7, 5391.0], [94.8, 5391.0], [94.9, 5391.0], [95.0, 5415.0], [95.1, 5415.0], [95.2, 5415.0], [95.3, 5415.0], [95.4, 5415.0], [95.5, 5415.0], [95.6, 5415.0], [95.7, 5415.0], [95.8, 5415.0], [95.9, 5415.0], [96.0, 5518.0], [96.1, 5518.0], [96.2, 5518.0], [96.3, 5518.0], [96.4, 5518.0], [96.5, 5518.0], [96.6, 5518.0], [96.7, 5518.0], [96.8, 5518.0], [96.9, 5518.0], [97.0, 5683.0], [97.1, 5683.0], [97.2, 5683.0], [97.3, 5683.0], [97.4, 5683.0], [97.5, 5683.0], [97.6, 5683.0], [97.7, 5683.0], [97.8, 5683.0], [97.9, 5683.0], [98.0, 5772.0], [98.1, 5772.0], [98.2, 5772.0], [98.3, 5772.0], [98.4, 5772.0], [98.5, 5772.0], [98.6, 5772.0], [98.7, 5772.0], [98.8, 5772.0], [98.9, 5772.0], [99.0, 6711.0], [99.1, 6711.0], [99.2, 6711.0], [99.3, 6711.0], [99.4, 6711.0], [99.5, 6711.0], [99.6, 6711.0], [99.7, 6711.0], [99.8, 6711.0], [99.9, 6711.0]], "isOverall": false, "label": "View Items", "isController": false}, {"data": [[0.0, 1841.0], [0.1, 1841.0], [0.2, 1841.0], [0.3, 1841.0], [0.4, 1841.0], [0.5, 1841.0], [0.6, 1841.0], [0.7, 1841.0], [0.8, 1841.0], [0.9, 1841.0], [1.0, 1841.0], [1.1, 1841.0], [1.2, 1841.0], [1.3, 1841.0], [1.4, 1841.0], [1.5, 1841.0], [1.6, 1841.0], [1.7, 1841.0], [1.8, 1841.0], [1.9, 1841.0], [2.0, 1846.0], [2.1, 1846.0], [2.2, 1846.0], [2.3, 1846.0], [2.4, 1846.0], [2.5, 1846.0], [2.6, 1846.0], [2.7, 1846.0], [2.8, 1846.0], [2.9, 1846.0], [3.0, 1856.0], [3.1, 1856.0], [3.2, 1856.0], [3.3, 1856.0], [3.4, 1856.0], [3.5, 1856.0], [3.6, 1856.0], [3.7, 1856.0], [3.8, 1856.0], [3.9, 1856.0], [4.0, 1885.0], [4.1, 1885.0], [4.2, 1885.0], [4.3, 1885.0], [4.4, 1885.0], [4.5, 1885.0], [4.6, 1885.0], [4.7, 1885.0], [4.8, 1885.0], [4.9, 1885.0], [5.0, 1888.0], [5.1, 1888.0], [5.2, 1888.0], [5.3, 1888.0], [5.4, 1888.0], [5.5, 1888.0], [5.6, 1888.0], [5.7, 1888.0], [5.8, 1888.0], [5.9, 1888.0], [6.0, 1893.0], [6.1, 1893.0], [6.2, 1893.0], [6.3, 1893.0], [6.4, 1893.0], [6.5, 1893.0], [6.6, 1893.0], [6.7, 1893.0], [6.8, 1893.0], [6.9, 1893.0], [7.0, 1903.0], [7.1, 1903.0], [7.2, 1903.0], [7.3, 1903.0], [7.4, 1903.0], [7.5, 1903.0], [7.6, 1903.0], [7.7, 1903.0], [7.8, 1903.0], [7.9, 1903.0], [8.0, 1911.0], [8.1, 1911.0], [8.2, 1911.0], [8.3, 1911.0], [8.4, 1911.0], [8.5, 1911.0], [8.6, 1911.0], [8.7, 1911.0], [8.8, 1911.0], [8.9, 1911.0], [9.0, 1918.0], [9.1, 1918.0], [9.2, 1918.0], [9.3, 1918.0], [9.4, 1918.0], [9.5, 1918.0], [9.6, 1918.0], [9.7, 1918.0], [9.8, 1918.0], [9.9, 1918.0], [10.0, 1919.0], [10.1, 1919.0], [10.2, 1919.0], [10.3, 1919.0], [10.4, 1919.0], [10.5, 1919.0], [10.6, 1919.0], [10.7, 1919.0], [10.8, 1919.0], [10.9, 1919.0], [11.0, 1930.0], [11.1, 1930.0], [11.2, 1930.0], [11.3, 1930.0], [11.4, 1930.0], [11.5, 1930.0], [11.6, 1930.0], [11.7, 1930.0], [11.8, 1930.0], [11.9, 1930.0], [12.0, 1931.0], [12.1, 1931.0], [12.2, 1931.0], [12.3, 1931.0], [12.4, 1931.0], [12.5, 1931.0], [12.6, 1931.0], [12.7, 1931.0], [12.8, 1931.0], [12.9, 1931.0], [13.0, 1932.0], [13.1, 1932.0], [13.2, 1932.0], [13.3, 1932.0], [13.4, 1932.0], [13.5, 1932.0], [13.6, 1932.0], [13.7, 1932.0], [13.8, 1932.0], [13.9, 1932.0], [14.0, 1933.0], [14.1, 1933.0], [14.2, 1933.0], [14.3, 1933.0], [14.4, 1933.0], [14.5, 1933.0], [14.6, 1933.0], [14.7, 1933.0], [14.8, 1933.0], [14.9, 1933.0], [15.0, 1937.0], [15.1, 1937.0], [15.2, 1937.0], [15.3, 1937.0], [15.4, 1937.0], [15.5, 1937.0], [15.6, 1937.0], [15.7, 1937.0], [15.8, 1937.0], [15.9, 1937.0], [16.0, 1939.0], [16.1, 1939.0], [16.2, 1939.0], [16.3, 1939.0], [16.4, 1939.0], [16.5, 1939.0], [16.6, 1939.0], [16.7, 1939.0], [16.8, 1939.0], [16.9, 1939.0], [17.0, 1940.0], [17.1, 1940.0], [17.2, 1940.0], [17.3, 1940.0], [17.4, 1940.0], [17.5, 1940.0], [17.6, 1940.0], [17.7, 1940.0], [17.8, 1940.0], [17.9, 1940.0], [18.0, 1947.0], [18.1, 1947.0], [18.2, 1947.0], [18.3, 1947.0], [18.4, 1947.0], [18.5, 1947.0], [18.6, 1947.0], [18.7, 1947.0], [18.8, 1947.0], [18.9, 1947.0], [19.0, 1947.0], [19.1, 1947.0], [19.2, 1947.0], [19.3, 1947.0], [19.4, 1947.0], [19.5, 1947.0], [19.6, 1947.0], [19.7, 1947.0], [19.8, 1947.0], [19.9, 1947.0], [20.0, 1964.0], [20.1, 1964.0], [20.2, 1964.0], [20.3, 1964.0], [20.4, 1964.0], [20.5, 1964.0], [20.6, 1964.0], [20.7, 1964.0], [20.8, 1964.0], [20.9, 1964.0], [21.0, 1966.0], [21.1, 1966.0], [21.2, 1966.0], [21.3, 1966.0], [21.4, 1966.0], [21.5, 1966.0], [21.6, 1966.0], [21.7, 1966.0], [21.8, 1966.0], [21.9, 1966.0], [22.0, 1969.0], [22.1, 1969.0], [22.2, 1969.0], [22.3, 1969.0], [22.4, 1969.0], [22.5, 1969.0], [22.6, 1969.0], [22.7, 1969.0], [22.8, 1969.0], [22.9, 1969.0], [23.0, 1989.0], [23.1, 1989.0], [23.2, 1989.0], [23.3, 1989.0], [23.4, 1989.0], [23.5, 1989.0], [23.6, 1989.0], [23.7, 1989.0], [23.8, 1989.0], [23.9, 1989.0], [24.0, 2005.0], [24.1, 2005.0], [24.2, 2005.0], [24.3, 2005.0], [24.4, 2005.0], [24.5, 2005.0], [24.6, 2005.0], [24.7, 2005.0], [24.8, 2005.0], [24.9, 2005.0], [25.0, 2078.0], [25.1, 2078.0], [25.2, 2078.0], [25.3, 2078.0], [25.4, 2078.0], [25.5, 2078.0], [25.6, 2078.0], [25.7, 2078.0], [25.8, 2078.0], [25.9, 2078.0], [26.0, 2087.0], [26.1, 2087.0], [26.2, 2087.0], [26.3, 2087.0], [26.4, 2087.0], [26.5, 2087.0], [26.6, 2087.0], [26.7, 2087.0], [26.8, 2087.0], [26.9, 2087.0], [27.0, 2188.0], [27.1, 2188.0], [27.2, 2188.0], [27.3, 2188.0], [27.4, 2188.0], [27.5, 2188.0], [27.6, 2188.0], [27.7, 2188.0], [27.8, 2188.0], [27.9, 2188.0], [28.0, 2349.0], [28.1, 2349.0], [28.2, 2349.0], [28.3, 2349.0], [28.4, 2349.0], [28.5, 2349.0], [28.6, 2349.0], [28.7, 2349.0], [28.8, 2349.0], [28.9, 2349.0], [29.0, 2415.0], [29.1, 2415.0], [29.2, 2415.0], [29.3, 2415.0], [29.4, 2415.0], [29.5, 2415.0], [29.6, 2415.0], [29.7, 2415.0], [29.8, 2415.0], [29.9, 2415.0], [30.0, 2415.0], [30.1, 2415.0], [30.2, 2415.0], [30.3, 2415.0], [30.4, 2415.0], [30.5, 2415.0], [30.6, 2415.0], [30.7, 2415.0], [30.8, 2415.0], [30.9, 2415.0], [31.0, 2454.0], [31.1, 2454.0], [31.2, 2454.0], [31.3, 2454.0], [31.4, 2454.0], [31.5, 2454.0], [31.6, 2454.0], [31.7, 2454.0], [31.8, 2454.0], [31.9, 2454.0], [32.0, 2471.0], [32.1, 2471.0], [32.2, 2471.0], [32.3, 2471.0], [32.4, 2471.0], [32.5, 2471.0], [32.6, 2471.0], [32.7, 2471.0], [32.8, 2471.0], [32.9, 2471.0], [33.0, 2560.0], [33.1, 2560.0], [33.2, 2560.0], [33.3, 2560.0], [33.4, 2560.0], [33.5, 2560.0], [33.6, 2560.0], [33.7, 2560.0], [33.8, 2560.0], [33.9, 2560.0], [34.0, 2573.0], [34.1, 2573.0], [34.2, 2573.0], [34.3, 2573.0], [34.4, 2573.0], [34.5, 2573.0], [34.6, 2573.0], [34.7, 2573.0], [34.8, 2573.0], [34.9, 2573.0], [35.0, 2620.0], [35.1, 2620.0], [35.2, 2620.0], [35.3, 2620.0], [35.4, 2620.0], [35.5, 2620.0], [35.6, 2620.0], [35.7, 2620.0], [35.8, 2620.0], [35.9, 2620.0], [36.0, 2750.0], [36.1, 2750.0], [36.2, 2750.0], [36.3, 2750.0], [36.4, 2750.0], [36.5, 2750.0], [36.6, 2750.0], [36.7, 2750.0], [36.8, 2750.0], [36.9, 2750.0], [37.0, 2780.0], [37.1, 2780.0], [37.2, 2780.0], [37.3, 2780.0], [37.4, 2780.0], [37.5, 2780.0], [37.6, 2780.0], [37.7, 2780.0], [37.8, 2780.0], [37.9, 2780.0], [38.0, 2816.0], [38.1, 2816.0], [38.2, 2816.0], [38.3, 2816.0], [38.4, 2816.0], [38.5, 2816.0], [38.6, 2816.0], [38.7, 2816.0], [38.8, 2816.0], [38.9, 2816.0], [39.0, 2822.0], [39.1, 2822.0], [39.2, 2822.0], [39.3, 2822.0], [39.4, 2822.0], [39.5, 2822.0], [39.6, 2822.0], [39.7, 2822.0], [39.8, 2822.0], [39.9, 2822.0], [40.0, 2831.0], [40.1, 2831.0], [40.2, 2831.0], [40.3, 2831.0], [40.4, 2831.0], [40.5, 2831.0], [40.6, 2831.0], [40.7, 2831.0], [40.8, 2831.0], [40.9, 2831.0], [41.0, 2841.0], [41.1, 2841.0], [41.2, 2841.0], [41.3, 2841.0], [41.4, 2841.0], [41.5, 2841.0], [41.6, 2841.0], [41.7, 2841.0], [41.8, 2841.0], [41.9, 2841.0], [42.0, 2854.0], [42.1, 2854.0], [42.2, 2854.0], [42.3, 2854.0], [42.4, 2854.0], [42.5, 2854.0], [42.6, 2854.0], [42.7, 2854.0], [42.8, 2854.0], [42.9, 2854.0], [43.0, 2863.0], [43.1, 2863.0], [43.2, 2863.0], [43.3, 2863.0], [43.4, 2863.0], [43.5, 2863.0], [43.6, 2863.0], [43.7, 2863.0], [43.8, 2863.0], [43.9, 2863.0], [44.0, 2866.0], [44.1, 2866.0], [44.2, 2866.0], [44.3, 2866.0], [44.4, 2866.0], [44.5, 2866.0], [44.6, 2866.0], [44.7, 2866.0], [44.8, 2866.0], [44.9, 2866.0], [45.0, 2877.0], [45.1, 2877.0], [45.2, 2877.0], [45.3, 2877.0], [45.4, 2877.0], [45.5, 2877.0], [45.6, 2877.0], [45.7, 2877.0], [45.8, 2877.0], [45.9, 2877.0], [46.0, 2900.0], [46.1, 2900.0], [46.2, 2900.0], [46.3, 2900.0], [46.4, 2900.0], [46.5, 2900.0], [46.6, 2900.0], [46.7, 2900.0], [46.8, 2900.0], [46.9, 2900.0], [47.0, 2924.0], [47.1, 2924.0], [47.2, 2924.0], [47.3, 2924.0], [47.4, 2924.0], [47.5, 2924.0], [47.6, 2924.0], [47.7, 2924.0], [47.8, 2924.0], [47.9, 2924.0], [48.0, 2964.0], [48.1, 2964.0], [48.2, 2964.0], [48.3, 2964.0], [48.4, 2964.0], [48.5, 2964.0], [48.6, 2964.0], [48.7, 2964.0], [48.8, 2964.0], [48.9, 2964.0], [49.0, 2974.0], [49.1, 2974.0], [49.2, 2974.0], [49.3, 2974.0], [49.4, 2974.0], [49.5, 2974.0], [49.6, 2974.0], [49.7, 2974.0], [49.8, 2974.0], [49.9, 2974.0], [50.0, 2979.0], [50.1, 2979.0], [50.2, 2979.0], [50.3, 2979.0], [50.4, 2979.0], [50.5, 2979.0], [50.6, 2979.0], [50.7, 2979.0], [50.8, 2979.0], [50.9, 2979.0], [51.0, 2981.0], [51.1, 2981.0], [51.2, 2981.0], [51.3, 2981.0], [51.4, 2981.0], [51.5, 2981.0], [51.6, 2981.0], [51.7, 2981.0], [51.8, 2981.0], [51.9, 2981.0], [52.0, 3043.0], [52.1, 3043.0], [52.2, 3043.0], [52.3, 3043.0], [52.4, 3043.0], [52.5, 3043.0], [52.6, 3043.0], [52.7, 3043.0], [52.8, 3043.0], [52.9, 3043.0], [53.0, 3113.0], [53.1, 3113.0], [53.2, 3113.0], [53.3, 3113.0], [53.4, 3113.0], [53.5, 3113.0], [53.6, 3113.0], [53.7, 3113.0], [53.8, 3113.0], [53.9, 3113.0], [54.0, 3121.0], [54.1, 3121.0], [54.2, 3121.0], [54.3, 3121.0], [54.4, 3121.0], [54.5, 3121.0], [54.6, 3121.0], [54.7, 3121.0], [54.8, 3121.0], [54.9, 3121.0], [55.0, 3176.0], [55.1, 3176.0], [55.2, 3176.0], [55.3, 3176.0], [55.4, 3176.0], [55.5, 3176.0], [55.6, 3176.0], [55.7, 3176.0], [55.8, 3176.0], [55.9, 3176.0], [56.0, 3253.0], [56.1, 3253.0], [56.2, 3253.0], [56.3, 3253.0], [56.4, 3253.0], [56.5, 3253.0], [56.6, 3253.0], [56.7, 3253.0], [56.8, 3253.0], [56.9, 3253.0], [57.0, 3271.0], [57.1, 3271.0], [57.2, 3271.0], [57.3, 3271.0], [57.4, 3271.0], [57.5, 3271.0], [57.6, 3271.0], [57.7, 3271.0], [57.8, 3271.0], [57.9, 3271.0], [58.0, 3286.0], [58.1, 3286.0], [58.2, 3286.0], [58.3, 3286.0], [58.4, 3286.0], [58.5, 3286.0], [58.6, 3286.0], [58.7, 3286.0], [58.8, 3286.0], [58.9, 3286.0], [59.0, 3287.0], [59.1, 3287.0], [59.2, 3287.0], [59.3, 3287.0], [59.4, 3287.0], [59.5, 3287.0], [59.6, 3287.0], [59.7, 3287.0], [59.8, 3287.0], [59.9, 3287.0], [60.0, 3302.0], [60.1, 3302.0], [60.2, 3302.0], [60.3, 3302.0], [60.4, 3302.0], [60.5, 3302.0], [60.6, 3302.0], [60.7, 3302.0], [60.8, 3302.0], [60.9, 3302.0], [61.0, 3303.0], [61.1, 3303.0], [61.2, 3303.0], [61.3, 3303.0], [61.4, 3303.0], [61.5, 3303.0], [61.6, 3303.0], [61.7, 3303.0], [61.8, 3303.0], [61.9, 3303.0], [62.0, 3310.0], [62.1, 3310.0], [62.2, 3310.0], [62.3, 3310.0], [62.4, 3310.0], [62.5, 3310.0], [62.6, 3310.0], [62.7, 3310.0], [62.8, 3310.0], [62.9, 3310.0], [63.0, 3325.0], [63.1, 3325.0], [63.2, 3325.0], [63.3, 3325.0], [63.4, 3325.0], [63.5, 3325.0], [63.6, 3325.0], [63.7, 3325.0], [63.8, 3325.0], [63.9, 3325.0], [64.0, 3381.0], [64.1, 3381.0], [64.2, 3381.0], [64.3, 3381.0], [64.4, 3381.0], [64.5, 3381.0], [64.6, 3381.0], [64.7, 3381.0], [64.8, 3381.0], [64.9, 3381.0], [65.0, 3405.0], [65.1, 3405.0], [65.2, 3405.0], [65.3, 3405.0], [65.4, 3405.0], [65.5, 3405.0], [65.6, 3405.0], [65.7, 3405.0], [65.8, 3405.0], [65.9, 3405.0], [66.0, 3406.0], [66.1, 3406.0], [66.2, 3406.0], [66.3, 3406.0], [66.4, 3406.0], [66.5, 3406.0], [66.6, 3406.0], [66.7, 3406.0], [66.8, 3406.0], [66.9, 3406.0], [67.0, 3418.0], [67.1, 3418.0], [67.2, 3418.0], [67.3, 3418.0], [67.4, 3418.0], [67.5, 3418.0], [67.6, 3418.0], [67.7, 3418.0], [67.8, 3418.0], [67.9, 3418.0], [68.0, 3421.0], [68.1, 3421.0], [68.2, 3421.0], [68.3, 3421.0], [68.4, 3421.0], [68.5, 3421.0], [68.6, 3421.0], [68.7, 3421.0], [68.8, 3421.0], [68.9, 3421.0], [69.0, 3471.0], [69.1, 3471.0], [69.2, 3471.0], [69.3, 3471.0], [69.4, 3471.0], [69.5, 3471.0], [69.6, 3471.0], [69.7, 3471.0], [69.8, 3471.0], [69.9, 3471.0], [70.0, 3475.0], [70.1, 3475.0], [70.2, 3475.0], [70.3, 3475.0], [70.4, 3475.0], [70.5, 3475.0], [70.6, 3475.0], [70.7, 3475.0], [70.8, 3475.0], [70.9, 3475.0], [71.0, 3476.0], [71.1, 3476.0], [71.2, 3476.0], [71.3, 3476.0], [71.4, 3476.0], [71.5, 3476.0], [71.6, 3476.0], [71.7, 3476.0], [71.8, 3476.0], [71.9, 3476.0], [72.0, 3518.0], [72.1, 3518.0], [72.2, 3518.0], [72.3, 3518.0], [72.4, 3518.0], [72.5, 3518.0], [72.6, 3518.0], [72.7, 3518.0], [72.8, 3518.0], [72.9, 3518.0], [73.0, 3525.0], [73.1, 3525.0], [73.2, 3525.0], [73.3, 3525.0], [73.4, 3525.0], [73.5, 3525.0], [73.6, 3525.0], [73.7, 3525.0], [73.8, 3525.0], [73.9, 3525.0], [74.0, 3537.0], [74.1, 3537.0], [74.2, 3537.0], [74.3, 3537.0], [74.4, 3537.0], [74.5, 3537.0], [74.6, 3537.0], [74.7, 3537.0], [74.8, 3537.0], [74.9, 3537.0], [75.0, 3552.0], [75.1, 3552.0], [75.2, 3552.0], [75.3, 3552.0], [75.4, 3552.0], [75.5, 3552.0], [75.6, 3552.0], [75.7, 3552.0], [75.8, 3552.0], [75.9, 3552.0], [76.0, 3554.0], [76.1, 3554.0], [76.2, 3554.0], [76.3, 3554.0], [76.4, 3554.0], [76.5, 3554.0], [76.6, 3554.0], [76.7, 3554.0], [76.8, 3554.0], [76.9, 3554.0], [77.0, 3626.0], [77.1, 3626.0], [77.2, 3626.0], [77.3, 3626.0], [77.4, 3626.0], [77.5, 3626.0], [77.6, 3626.0], [77.7, 3626.0], [77.8, 3626.0], [77.9, 3626.0], [78.0, 3636.0], [78.1, 3636.0], [78.2, 3636.0], [78.3, 3636.0], [78.4, 3636.0], [78.5, 3636.0], [78.6, 3636.0], [78.7, 3636.0], [78.8, 3636.0], [78.9, 3636.0], [79.0, 3642.0], [79.1, 3642.0], [79.2, 3642.0], [79.3, 3642.0], [79.4, 3642.0], [79.5, 3642.0], [79.6, 3642.0], [79.7, 3642.0], [79.8, 3642.0], [79.9, 3642.0], [80.0, 3645.0], [80.1, 3645.0], [80.2, 3645.0], [80.3, 3645.0], [80.4, 3645.0], [80.5, 3645.0], [80.6, 3645.0], [80.7, 3645.0], [80.8, 3645.0], [80.9, 3645.0], [81.0, 3646.0], [81.1, 3646.0], [81.2, 3646.0], [81.3, 3646.0], [81.4, 3646.0], [81.5, 3646.0], [81.6, 3646.0], [81.7, 3646.0], [81.8, 3646.0], [81.9, 3646.0], [82.0, 3653.0], [82.1, 3653.0], [82.2, 3653.0], [82.3, 3653.0], [82.4, 3653.0], [82.5, 3653.0], [82.6, 3653.0], [82.7, 3653.0], [82.8, 3653.0], [82.9, 3653.0], [83.0, 3671.0], [83.1, 3671.0], [83.2, 3671.0], [83.3, 3671.0], [83.4, 3671.0], [83.5, 3671.0], [83.6, 3671.0], [83.7, 3671.0], [83.8, 3671.0], [83.9, 3671.0], [84.0, 3705.0], [84.1, 3705.0], [84.2, 3705.0], [84.3, 3705.0], [84.4, 3705.0], [84.5, 3705.0], [84.6, 3705.0], [84.7, 3705.0], [84.8, 3705.0], [84.9, 3705.0], [85.0, 3718.0], [85.1, 3718.0], [85.2, 3718.0], [85.3, 3718.0], [85.4, 3718.0], [85.5, 3718.0], [85.6, 3718.0], [85.7, 3718.0], [85.8, 3718.0], [85.9, 3718.0], [86.0, 3758.0], [86.1, 3758.0], [86.2, 3758.0], [86.3, 3758.0], [86.4, 3758.0], [86.5, 3758.0], [86.6, 3758.0], [86.7, 3758.0], [86.8, 3758.0], [86.9, 3758.0], [87.0, 3765.0], [87.1, 3765.0], [87.2, 3765.0], [87.3, 3765.0], [87.4, 3765.0], [87.5, 3765.0], [87.6, 3765.0], [87.7, 3765.0], [87.8, 3765.0], [87.9, 3765.0], [88.0, 3793.0], [88.1, 3793.0], [88.2, 3793.0], [88.3, 3793.0], [88.4, 3793.0], [88.5, 3793.0], [88.6, 3793.0], [88.7, 3793.0], [88.8, 3793.0], [88.9, 3793.0], [89.0, 3816.0], [89.1, 3816.0], [89.2, 3816.0], [89.3, 3816.0], [89.4, 3816.0], [89.5, 3816.0], [89.6, 3816.0], [89.7, 3816.0], [89.8, 3816.0], [89.9, 3816.0], [90.0, 3899.0], [90.1, 3899.0], [90.2, 3899.0], [90.3, 3899.0], [90.4, 3899.0], [90.5, 3899.0], [90.6, 3899.0], [90.7, 3899.0], [90.8, 3899.0], [90.9, 3899.0], [91.0, 3920.0], [91.1, 3920.0], [91.2, 3920.0], [91.3, 3920.0], [91.4, 3920.0], [91.5, 3920.0], [91.6, 3920.0], [91.7, 3920.0], [91.8, 3920.0], [91.9, 3920.0], [92.0, 3981.0], [92.1, 3981.0], [92.2, 3981.0], [92.3, 3981.0], [92.4, 3981.0], [92.5, 3981.0], [92.6, 3981.0], [92.7, 3981.0], [92.8, 3981.0], [92.9, 3981.0], [93.0, 3986.0], [93.1, 3986.0], [93.2, 3986.0], [93.3, 3986.0], [93.4, 3986.0], [93.5, 3986.0], [93.6, 3986.0], [93.7, 3986.0], [93.8, 3986.0], [93.9, 3986.0], [94.0, 4028.0], [94.1, 4028.0], [94.2, 4028.0], [94.3, 4028.0], [94.4, 4028.0], [94.5, 4028.0], [94.6, 4028.0], [94.7, 4028.0], [94.8, 4028.0], [94.9, 4028.0], [95.0, 4042.0], [95.1, 4042.0], [95.2, 4042.0], [95.3, 4042.0], [95.4, 4042.0], [95.5, 4042.0], [95.6, 4042.0], [95.7, 4042.0], [95.8, 4042.0], [95.9, 4042.0], [96.0, 4067.0], [96.1, 4067.0], [96.2, 4067.0], [96.3, 4067.0], [96.4, 4067.0], [96.5, 4067.0], [96.6, 4067.0], [96.7, 4067.0], [96.8, 4067.0], [96.9, 4067.0], [97.0, 4359.0], [97.1, 4359.0], [97.2, 4359.0], [97.3, 4359.0], [97.4, 4359.0], [97.5, 4359.0], [97.6, 4359.0], [97.7, 4359.0], [97.8, 4359.0], [97.9, 4359.0], [98.0, 4464.0], [98.1, 4464.0], [98.2, 4464.0], [98.3, 4464.0], [98.4, 4464.0], [98.5, 4464.0], [98.6, 4464.0], [98.7, 4464.0], [98.8, 4464.0], [98.9, 4464.0], [99.0, 4689.0], [99.1, 4689.0], [99.2, 4689.0], [99.3, 4689.0], [99.4, 4689.0], [99.5, 4689.0], [99.6, 4689.0], [99.7, 4689.0], [99.8, 4689.0], [99.9, 4689.0]], "isOverall": false, "label": "Compare Item", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 1400.0, "maxY": 17.0, "series": [{"data": [[2100.0, 5.0], [2300.0, 7.0], [2200.0, 6.0], [2400.0, 14.0], [2500.0, 4.0], [2600.0, 5.0], [2800.0, 6.0], [2700.0, 3.0], [2900.0, 8.0], [3000.0, 3.0], [3100.0, 1.0], [3300.0, 1.0], [3200.0, 3.0], [3700.0, 1.0], [4600.0, 1.0], [1400.0, 1.0], [1500.0, 12.0], [1600.0, 8.0], [1700.0, 1.0], [1800.0, 1.0], [1900.0, 3.0], [2000.0, 6.0]], "isOverall": false, "label": "Category Drill down", "isController": false}, {"data": [[3700.0, 1.0], [3900.0, 1.0], [4000.0, 1.0], [4300.0, 3.0], [4200.0, 2.0], [4100.0, 3.0], [4600.0, 6.0], [4400.0, 4.0], [4500.0, 6.0], [4700.0, 4.0], [4800.0, 3.0], [4900.0, 9.0], [5100.0, 8.0], [5000.0, 2.0], [5200.0, 12.0], [5300.0, 1.0], [5600.0, 3.0], [5500.0, 2.0], [5400.0, 4.0], [5800.0, 2.0], [5700.0, 5.0], [6100.0, 4.0], [5900.0, 3.0], [6000.0, 4.0], [6300.0, 1.0], [6200.0, 2.0], [6600.0, 1.0], [6500.0, 2.0], [7000.0, 1.0]], "isOverall": false, "label": "Item Details", "isController": false}, {"data": [[2400.0, 1.0], [2500.0, 3.0], [2600.0, 1.0], [2700.0, 1.0], [2800.0, 1.0], [2900.0, 2.0], [3000.0, 2.0], [3100.0, 4.0], [3300.0, 3.0], [3200.0, 1.0], [3400.0, 4.0], [3500.0, 3.0], [3600.0, 6.0], [3700.0, 4.0], [3800.0, 4.0], [3900.0, 3.0], [4200.0, 6.0], [4100.0, 4.0], [4300.0, 3.0], [4400.0, 7.0], [4600.0, 5.0], [4500.0, 8.0], [4700.0, 2.0], [4800.0, 4.0], [5000.0, 3.0], [4900.0, 2.0], [5100.0, 3.0], [5200.0, 1.0], [5300.0, 4.0], [5600.0, 1.0], [5500.0, 1.0], [5400.0, 1.0], [5700.0, 1.0], [6700.0, 1.0]], "isOverall": false, "label": "View Items", "isController": false}, {"data": [[1800.0, 7.0], [1900.0, 17.0], [2000.0, 3.0], [2100.0, 1.0], [2300.0, 1.0], [2400.0, 4.0], [2500.0, 2.0], [2600.0, 1.0], [2800.0, 8.0], [2700.0, 2.0], [2900.0, 6.0], [3000.0, 1.0], [3100.0, 3.0], [3300.0, 5.0], [3200.0, 4.0], [3400.0, 7.0], [3500.0, 5.0], [3600.0, 7.0], [3700.0, 5.0], [3800.0, 2.0], [3900.0, 3.0], [4000.0, 3.0], [4300.0, 1.0], [4400.0, 1.0], [4600.0, 1.0]], "isOverall": false, "label": "Compare Item", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 7000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 399.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 1.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 399.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 68.87000000000006, "minX": 1.57312728E12, "maxY": 68.87000000000006, "series": [{"data": [[1.57312728E12, 68.87000000000006]], "isOverall": false, "label": "User_100-10", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57312728E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1502.0, "minX": 1.0, "maxY": 6711.0, "series": [{"data": [[21.0, 1798.5], [22.0, 1899.0], [23.0, 1643.0], [24.0, 1623.0], [25.0, 1571.5], [26.0, 1571.0], [27.0, 1502.0], [28.0, 1537.0], [29.0, 1526.0], [30.0, 1520.0], [32.0, 1518.0], [33.0, 1507.0], [34.0, 1545.0], [35.0, 1512.0], [36.0, 1565.0], [38.0, 1598.5], [40.0, 1615.0], [41.0, 1651.0], [48.0, 2301.0], [50.0, 2296.0], [51.0, 2474.0], [52.0, 2306.0], [54.0, 2500.0], [55.0, 2438.0], [56.0, 2419.0], [57.0, 2422.0], [58.0, 2174.0], [59.0, 2451.0], [60.0, 2405.0], [61.0, 2071.0], [62.0, 2423.0], [64.0, 2149.0], [67.0, 2774.0], [68.0, 2212.6666666666665], [69.0, 2309.3333333333335], [70.0, 2291.0], [72.0, 2072.0], [73.0, 2173.5], [77.0, 2262.0], [78.0, 2124.6666666666665], [79.0, 2206.0], [80.0, 2415.0], [83.0, 2325.0], [84.0, 2096.0], [85.0, 2430.5], [86.0, 2327.0], [87.0, 2294.0], [90.0, 2469.0], [91.0, 2488.0], [93.0, 2511.0], [95.0, 2560.6666666666665], [99.0, 3044.0], [98.0, 3079.0], [96.0, 4601.0], [100.0, 2940.0]], "isOverall": false, "label": "Category Drill down", "isController": false}, {"data": [[68.99000000000001, 2357.3499999999995]], "isOverall": false, "label": "Category Drill down-Aggregated", "isController": false}, {"data": [[32.0, 4345.0], [35.0, 4620.0], [39.0, 4725.0], [38.0, 4574.0], [42.0, 4681.0], [44.0, 4854.0], [49.0, 4752.75], [48.0, 4405.0], [51.0, 5189.666666666667], [52.0, 5200.2], [59.0, 5286.0], [58.0, 5152.333333333333], [62.0, 4898.0], [67.0, 5287.25], [66.0, 5334.5], [64.0, 5751.0], [70.0, 5828.2], [69.0, 6545.0], [75.0, 5795.0], [73.0, 6064.0], [72.0, 5233.0], [79.0, 6124.0], [77.0, 6228.0], [76.0, 5269.0], [81.0, 4757.0], [87.0, 5614.875], [86.0, 5900.25], [85.0, 5411.0], [91.0, 5878.0], [89.0, 5247.0], [88.0, 5660.0], [95.0, 6316.0], [93.0, 5367.0], [96.0, 4958.333333333333], [97.0, 5273.333333333333], [98.0, 5215.0], [99.0, 5094.333333333333], [100.0, 4651.615384615385], [22.0, 4456.0], [23.0, 4915.0], [25.0, 4311.0], [27.0, 4427.0], [28.0, 4189.0], [31.0, 5154.0]], "isOverall": false, "label": "Item Details", "isController": false}, {"data": [[72.13000000000002, 5190.8899999999985]], "isOverall": false, "label": "Item Details-Aggregated", "isController": false}, {"data": [[45.0, 2449.0], [46.0, 2524.0], [47.0, 2535.0], [50.0, 2559.0], [58.0, 3077.0], [60.0, 3158.0], [61.0, 3814.5], [64.0, 3727.0], [65.0, 3449.0], [66.0, 3255.0], [67.0, 2762.0], [68.0, 3362.0], [69.0, 3118.0], [70.0, 4575.333333333333], [71.0, 4308.666666666667], [72.0, 3131.0], [73.0, 4638.333333333333], [75.0, 4552.5], [76.0, 5080.0], [77.0, 5280.0], [78.0, 4995.0], [79.0, 5254.5], [82.0, 3337.0], [81.0, 5187.5], [80.0, 4989.0], [84.0, 3781.6666666666665], [85.0, 3712.6666666666665], [86.0, 4137.0], [87.0, 4357.2], [89.0, 6711.0], [90.0, 3941.0], [91.0, 3451.6666666666665], [88.0, 4237.0], [94.0, 3881.0], [95.0, 3384.0], [93.0, 4894.333333333333], [96.0, 4391.5], [97.0, 4074.5], [99.0, 4708.0], [100.0, 4168.894736842105]], "isOverall": false, "label": "View Items", "isController": false}, {"data": [[83.84000000000002, 4154.28]], "isOverall": false, "label": "View Items-Aggregated", "isController": false}, {"data": [[2.0, 2188.0], [3.0, 1939.0], [4.0, 1911.0], [5.0, 1989.0], [6.0, 1930.0], [7.0, 1947.0], [8.0, 1964.0], [9.0, 1940.0], [10.0, 1903.0], [11.0, 1888.0], [12.0, 2005.0], [13.0, 1885.0], [14.0, 1856.0], [15.0, 1919.0], [16.0, 1893.0], [17.0, 1937.0], [18.0, 1933.0], [19.0, 1918.0], [20.0, 1841.0], [21.0, 1947.0], [22.0, 1966.0], [23.0, 1932.0], [24.0, 1969.0], [25.0, 2078.0], [26.0, 2087.0], [27.0, 1841.0], [28.0, 1931.0], [29.0, 2454.0], [30.0, 2471.0], [31.0, 2415.0], [33.0, 3113.0], [32.0, 2415.0], [35.0, 2822.0], [34.0, 2620.0], [37.0, 2863.0], [36.0, 2560.0], [39.0, 2573.0], [38.0, 3271.0], [40.0, 2349.0], [43.0, 2854.0], [42.0, 2795.5], [45.0, 2979.0], [44.0, 3525.0], [47.0, 2981.0], [46.0, 2866.0], [49.0, 2924.0], [48.0, 4028.0], [51.0, 3043.0], [50.0, 2780.0], [53.0, 3310.0], [52.0, 2964.0], [55.0, 3418.0], [54.0, 2831.0], [57.0, 3920.0], [56.0, 3981.0], [59.0, 3554.0], [58.0, 3718.0], [60.0, 3646.0], [63.0, 3645.0], [62.0, 3387.0], [67.0, 3671.0], [66.0, 3636.0], [65.0, 2816.0], [64.0, 3287.0], [71.0, 3176.0], [70.0, 3758.0], [69.0, 3286.0], [68.0, 3552.0], [75.0, 2974.0], [74.0, 3406.0], [73.0, 3253.0], [72.0, 3642.0], [79.0, 3986.0], [78.0, 3381.0], [77.0, 3302.0], [76.0, 4359.0], [83.0, 4067.0], [82.0, 4689.0], [81.0, 3793.0], [80.0, 3816.0], [87.0, 3765.0], [86.0, 3537.0], [85.0, 3899.0], [84.0, 3121.0], [91.0, 2900.0], [90.0, 4042.0], [89.0, 3421.0], [88.0, 4464.0], [95.0, 3405.0], [94.0, 3476.0], [93.0, 3475.0], [92.0, 3653.0], [99.0, 3325.0], [98.0, 3518.0], [97.0, 3626.0], [96.0, 3705.0], [100.0, 2877.0], [1.0, 1846.0]], "isOverall": false, "label": "Compare Item", "isController": false}, {"data": [[50.519999999999996, 2936.9999999999995]], "isOverall": false, "label": "Compare Item-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 1523.3333333333333, "minX": 1.57312728E12, "maxY": 994008.3333333334, "series": [{"data": [[1.57312728E12, 994008.3333333334]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.57312728E12, 1523.3333333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57312728E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 2357.3499999999995, "minX": 1.57312728E12, "maxY": 5190.8899999999985, "series": [{"data": [[1.57312728E12, 2357.3499999999995]], "isOverall": false, "label": "Category Drill down", "isController": false}, {"data": [[1.57312728E12, 5190.8899999999985]], "isOverall": false, "label": "Item Details", "isController": false}, {"data": [[1.57312728E12, 4154.28]], "isOverall": false, "label": "View Items", "isController": false}, {"data": [[1.57312728E12, 2936.9999999999995]], "isOverall": false, "label": "Compare Item", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57312728E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1507.1499999999994, "minX": 1.57312728E12, "maxY": 3521.6800000000003, "series": [{"data": [[1.57312728E12, 1507.1499999999994]], "isOverall": false, "label": "Category Drill down", "isController": false}, {"data": [[1.57312728E12, 3521.6800000000003]], "isOverall": false, "label": "Item Details", "isController": false}, {"data": [[1.57312728E12, 2968.6000000000013]], "isOverall": false, "label": "View Items", "isController": false}, {"data": [[1.57312728E12, 1899.5399999999993]], "isOverall": false, "label": "Compare Item", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57312728E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 150.94000000000005, "minX": 1.57312728E12, "maxY": 205.60000000000002, "series": [{"data": [[1.57312728E12, 203.09]], "isOverall": false, "label": "Category Drill down", "isController": false}, {"data": [[1.57312728E12, 205.60000000000002]], "isOverall": false, "label": "Item Details", "isController": false}, {"data": [[1.57312728E12, 150.94000000000005]], "isOverall": false, "label": "View Items", "isController": false}, {"data": [[1.57312728E12, 205.26999999999998]], "isOverall": false, "label": "Compare Item", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57312728E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1495.0, "minX": 1.57312728E12, "maxY": 7073.0, "series": [{"data": [[1.57312728E12, 7073.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.57312728E12, 1495.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.57312728E12, 5387.100000000001]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.57312728E12, 6595.490000000001]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.57312728E12, 5860.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57312728E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1522.0, "minX": 6.0, "maxY": 4925.0, "series": [{"data": [[8.0, 1898.0], [9.0, 2242.0], [10.0, 1522.0], [11.0, 1643.0], [15.0, 4635.0], [17.0, 3449.0], [18.0, 3459.5], [19.0, 4925.0], [21.0, 4176.5], [22.0, 3597.0], [23.0, 4242.5], [6.0, 1638.5], [24.0, 2415.0], [25.0, 4313.0], [27.0, 3113.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 27.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 669.0, "minX": 6.0, "maxY": 3421.0, "series": [{"data": [[8.0, 869.5], [9.0, 1228.0], [10.0, 669.0], [11.0, 802.0], [15.0, 2944.0], [17.0, 2444.0], [18.0, 2172.5], [19.0, 3421.0], [21.0, 2922.0], [22.0, 2573.5], [23.0, 2786.0], [6.0, 801.0], [24.0, 1386.0], [25.0, 2950.0], [27.0, 2082.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 27.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 6.666666666666667, "minX": 1.57312728E12, "maxY": 6.666666666666667, "series": [{"data": [[1.57312728E12, 6.666666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57312728E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 6.666666666666667, "minX": 1.57312728E12, "maxY": 6.666666666666667, "series": [{"data": [[1.57312728E12, 6.666666666666667]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57312728E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.6666666666666667, "minX": 1.57312728E12, "maxY": 1.6666666666666667, "series": [{"data": [[1.57312728E12, 1.6666666666666667]], "isOverall": false, "label": "Compare Item-success", "isController": false}, {"data": [[1.57312728E12, 1.6666666666666667]], "isOverall": false, "label": "Category Drill down-success", "isController": false}, {"data": [[1.57312728E12, 1.6666666666666667]], "isOverall": false, "label": "Item Details-success", "isController": false}, {"data": [[1.57312728E12, 1.6666666666666667]], "isOverall": false, "label": "View Items-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57312728E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 6.666666666666667, "minX": 1.57312728E12, "maxY": 6.666666666666667, "series": [{"data": [[1.57312728E12, 6.666666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57312728E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

